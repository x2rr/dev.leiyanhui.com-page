<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ai on 小类随手记</title><link>https://dev.leiyanhui.com/categories/ai/</link><description>Recent content in Ai on 小类随手记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 27 Dec 2024 00:01:20 +0800</lastBuildDate><atom:link href="https://dev.leiyanhui.com/categories/ai/index.xml" rel="self" type="application/rss+xml"/><item><title>目前较为好用的ai 代码助手长时间使用亲身体会</title><link>https://dev.leiyanhui.com/c/code-ai/</link><pubDate>Fri, 27 Dec 2024 00:01:20 +0800</pubDate><guid>https://dev.leiyanhui.com/c/code-ai/</guid><description>&lt;p>平时写的东西比较杂， go rust python flutter c pythone mircopython uniapp vue react。 使用几个ai后基本的纯感觉。&lt;br>
不同于网上的那些对比比较，这几个有限的&lt;/p>
&lt;p>每个功能按照10分计算&lt;/p>
&lt;h2 id="基本体验">基本体验
&lt;/h2>&lt;ul>
&lt;li>copilot: 代码提示准确率6分 速度4分 修错能力2分&lt;/li>
&lt;li>通义灵码 : 代码提示准确率5分 速度4分 修错能力1分 （评价：免费的 加上马马虎虎的准确率）&lt;/li>
&lt;li>cursor: 代码提示准确率8分 速度5分 修错能力6分 （整体不错，就是贵）&lt;/li>
&lt;li>fitten : 代码提示准确率2分 速度10分 修错能力1分 （这个目前感觉，用他以后效率反而下滑）&lt;/li>
&lt;li>JetBrains AI Assistant ：只试用过5天左右，到期后没有继续试用，整体感觉和通义灵码差距不大 优势不明显。然而通义灵码免费&lt;/li>
&lt;li>Codeium （插件）：代码提示准确率5.5分 速度4分 修错能力2分 因为用的时间较少 加上windsurf的nixos包需要自己写，所以不做更多评价&lt;/li>
&lt;li>kimi ： 只用过他的对话模式，不知道时不时使用姿势有问题，感觉他的编程能力接近0 准确率之类的无从谈起&lt;/li>
&lt;/ul>
&lt;h2 id="项目重构能力">项目重构能力
&lt;/h2>&lt;p>这时主要是说的项目结构的变更，包括部分操作单独拆到函数，以及整个项目的结构的重新组织。&lt;/p>
&lt;ul>
&lt;li>copilot: 只有文件内的或者函数级的重构 重构后的逻辑和算法 比一般的程序员写的要好也更加标准，但是也会语法错误或者自己乱造的东西。打4分&lt;/li>
&lt;li>通义灵码 : 和copilot差不多 4分&lt;/li>
&lt;li>cursor: 可以直接帮你新创建文件，要替换的文件也会给你创建一个范例出来。当然文件内和函数级的也没问题，但是也有会语法错误和乱造。6分。其中2分是给目录结构优化的。&lt;/li>
&lt;li>fitten : 只有文件内的或者函数内的重构 胡编乱造的多，但是偶有不错的地方。&lt;/li>
&lt;/ul>
&lt;h2 id="冷门语言和需求的体验">冷门语言和需求的体验
&lt;/h2>&lt;h3 id="mircopython">mircopython
&lt;/h3>&lt;p>因为ai经常会按照python的方法来写mircopython&lt;/p>
&lt;ul>
&lt;li>copilot: 代码提示准确率3分 修错能力0分&lt;/li>
&lt;li>通义灵码 : 代码提示准确率2分 修错能力0分&lt;/li>
&lt;li>cursor: 代码提示准确率4分 修错能力2分&lt;/li>
&lt;li>fitten : 不曾浪费时间使用&lt;/li>
&lt;/ul>
&lt;h4 id="结合硬件的项目单片机uos等">结合硬件的项目，单片机/uos等
&lt;/h4>&lt;ul>
&lt;li>copilot: 代码提示准确率3分 修错能力0分&lt;/li>
&lt;li>通义灵码 : 代码提示准确率2分 修错能力0分&lt;/li>
&lt;li>cursor: 代码提示准确率5分 修错能力4分&lt;/li>
&lt;li>fitten : 不曾浪费时间使用&lt;/li>
&lt;/ul>
&lt;p>cursor 此时在告知了硬件情况后，还是有很大的概率可以修复语法和逻辑错误的&lt;/p>
&lt;h4 id="nix文件">nix文件
&lt;/h4>&lt;p>在2024年10月份左右 各大ai,包chatgpt 对 nix语言的支持基本都是0,但是12月份 准确都不错了&lt;/p>
&lt;ul>
&lt;li>copilot: 代码提示准确率4分 修错能力0分&lt;/li>
&lt;li>通义灵码 : 代码提示准确率2分 修错能力0分&lt;/li>
&lt;li>cursor: 代码提示准确率6分 修错能力5分&lt;/li>
&lt;li>fitten : 因为经常更新自己的nixos-config 所以依旧是体验了下，准确接近0 修错能力更是接近0&lt;/li>
&lt;/ul></description></item></channel></rss>
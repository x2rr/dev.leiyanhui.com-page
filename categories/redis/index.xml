<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Redis on 小类随手记</title><link>https://dev.leiyanhui.com/categories/redis/</link><description>Recent content in Redis on 小类随手记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 20 Dec 2023 18:14:20 +0800</lastBuildDate><atom:link href="https://dev.leiyanhui.com/categories/redis/index.xml" rel="self" type="application/rss+xml"/><item><title>低成本高可用性异地多活跨云部署方案</title><link>https://dev.leiyanhui.com/web/mcloud/</link><pubDate>Wed, 20 Dec 2023 18:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/web/mcloud/</guid><description>&lt;p>在跨云异地多活部署遇到的最大的两个问题 1 是复杂度 2是成本。 一个项目想达到99.9%的高可用性，并且不依赖云厂商还是非常困难。 &lt;br>
异地多活有很多实现方法，下面分享一种 较为简单并尽可能的降低成本的方案。以阿里云 腾讯云 华为云，分别 上海 广州 北京 三城。以阿里（上海）和腾讯（广州）为主，华为为辅。&lt;br>
下文中所有的redis所指均为keydb6.x。&lt;/p>
&lt;h2 id="主要内容">主要内容
&lt;/h2>&lt;p>负载均衡 路由层 业务层 缓存层 数据层 定时备份&lt;/p>
&lt;h2 id="负载均衡和路由层">负载均衡和路由层
&lt;/h2>&lt;p>因为非传统web项目，有客户端，这部分内容集成到客户端。由客户端根据预置规则选择 请求到某一个机房。&lt;/p>
&lt;h2 id="业务层">业务层
&lt;/h2>&lt;p>要全部改造为无状态服务， 部分业务需要完全兼容华为/阿里/腾讯的函数计算，并在对应的云厂商和自己的机器上都有部署。 &lt;br>
部分业务有读写冲突的情况，虽然多活部署，但是使用消息中间件确保只有一个实例处在运行状态，其他实例等待抢占上位。&lt;/p>
&lt;h2 id="缓存层和数据层">缓存层和数据层
&lt;/h2>&lt;p>应用层对数据库的读写 都在redis中，少数在pgsql。pgsql的数据只作为分析和统计使用。 &lt;br>
其他需要储存的数据采用云厂商的对象储存。（要优化一下）&lt;/p>
&lt;h3 id="redis-使用多个集群">redis 使用多个集群
&lt;/h3>&lt;h4 id="核心集群跨云跨机房">核心集群跨云跨机房
&lt;/h4>&lt;p>读多写少全局写入集群 储存核心数据 至少3主三从分散部署到 三云三城市。&lt;br>
核心数据主要用于储存一些增长缓慢但是读取频繁的数据。例如 用户信息 物联网设备配置信息等。&lt;br>
为了防止频繁跨云读取，应用层需要针对性的做一些改造，针对读写非常频繁的数据，本地机房应该开一个redis实例来缓存核心集群的数据降低核心集群压力。&lt;br>
1、应用层在启动的时候从redis按需要读取数据到本地全局map，并在每次处理请求的时候或者用定时器/消息订阅等方式来判断是否需要重新从redis读取数据。&lt;br>
2、对读取非常频繁的数据，需要在本机机房搭建一个redis实例用来作为核心集群的从库，核心集群的部分数据，降低核心集群压力，并降低核心集群公网通讯开支。&lt;br>
3、应用层在写入数据的是，需要按需判断本地redis同步库是否已经同步成功。&lt;/p>
&lt;h4 id="机房内部缓存">机房内部缓存
&lt;/h4>&lt;h5 id="读缓存">读缓存
&lt;/h5>&lt;p>上文已经提到，机房内应该增加至少一个redis实例或者集群，用来作为核心集群的从库，作为本地部分数据的读取使用。以降低核心集群的公网通讯开支。&lt;br>
一致性要求非常高的数据，依旧是从核心集群读取。&lt;/p>
&lt;h5 id="写缓存的实现">写缓存的实现
&lt;/h5>&lt;p>一致性要求不高的数据，写入到本地的redis集群，并安需定时同步到核心集群。例如：设备的在线状态和传感器数据（容许1-2秒延迟，故障时容许10-15秒延迟）&lt;br>
需要落地持久化的数据，并容许短时间丢失的数据（设备传感器的历史数据容许丢失3-5分钟的）先写入到本地的keydb 开启flash持久化，并定时同步flash文件和rdb aof文件到 本云的对象储存（因为数据庞大，后文针对此方案做了进一步优化降低开支）。
一致性要求高的数据，直接写入到核心集群。&lt;/p>
&lt;h4 id="redis同步">redis同步
&lt;/h4>&lt;p>除了redis cluster之外使用阿里的RedisShake来做单向同步。&lt;/p>
&lt;h4 id="pgsql">pgsql
&lt;/h4>&lt;h3 id="时序数据kv持久化储存">时序数据/kv持久化储存
&lt;/h3>&lt;h4 id="实现">实现
&lt;/h4>&lt;p>项目以写为主，读取较少，所以这里直接使用keydb替代redis。同时部署多个集群来作为纯redis 和kv硬盘储存使用。&lt;br>
没有引入时序数据库，是因为数量没有那么庞大，keddb的flash方案可以满足。&lt;/p>
&lt;h4 id="容灾和数据合并">容灾和数据合并
&lt;/h4>&lt;h5 id="数据合并">数据合并
&lt;/h5>&lt;p>因为此项目的这部分数据都是基于设备或用户的，所以同一个设备和同一个数据的历史数据可以合并到同一个key里面 以减少RocksDB（keydb的flash功能基于RocksDB）的小文件数量降低对象储存成本。&lt;br>
通过k8s/swarm 在阿里云和腾讯云分别 分别部署一个实例。两个实例先查询本地要处理的数据量，并协商以数据量较多的为主实例。两个实例分别合并前一天的历史数据到数组/map ，主实例在处理的时候询问从实例是否有同一个设备/用户的数据，如果有数据交付给主实例处理。如果没有从实例自己处理。 阿里云走内网数据持久到oss 腾讯云云走内网数据持久化到cos。另外一台不限制带宽的服务器同步合并两家对象储存数据保持一致。&lt;br>
查询的时候，当日数据从keydb查询，前一日数据从对象储存查询。&lt;/p>
&lt;h2 id="负载均衡和历史数据的处理">负载均衡和历史数据的处理
&lt;/h2>&lt;h3 id="设备和app的负载均衡">设备和app的负载均衡
&lt;/h3>&lt;p>设备实时数据 接受的应用层 分别部署到阿里云和腾讯云的多台机器上，由客户端先询问服务上的入口应用程序自己应该请求那台服务，并在一定周期内（未断电重启）持续请求这台服务。如果对应的机器负载较大，会通知客户端更换一个别的地址，或者地址连不同的时候客户端也会更换一个地址。（用户的app同样的规则）&lt;/p>
&lt;h3 id="数据的储存">数据的储存
&lt;/h3>&lt;h4 id="实时数据">实时数据
&lt;/h4>&lt;p>因为容许部分数据丢失，所以实时数据由对应的devConn服务直接储存到map，而不写入redis。用户端app在查询的时候，会先根据核心redis的从库中的对应设备的记录获取对应设备的服务器地址，直接查询map.&lt;/p>
&lt;h4 id="历史数据">历史数据
&lt;/h4>&lt;p>实时数据需要及时落盘，容许丢失一小部分，但是不能产生大量碎文件，不然会导致后续储存费用太高。&lt;br>
为了降低io,由devConn自己处理储存问题。储存后如何同步到云储存参考上文。&lt;/p>
&lt;h2 id="其他">其他
&lt;/h2>&lt;p>推荐阅读 &lt;a class="link" href="http://kaito-kidd.com/2021/10/15/what-is-the-multi-site-high-availability-design/" target="_blank" rel="noopener"
>http://kaito-kidd.com/2021/10/15/what-is-the-multi-site-high-availability-design/&lt;/a>&lt;/p></description></item><item><title>redis集群Gossip协议占用带宽过大的优化</title><link>https://dev.leiyanhui.com/redis/gossipoptimization/</link><pubDate>Tue, 19 Dec 2023 18:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/redis/gossipoptimization/</guid><description>&lt;p>redis的Cluster集群去中心化，以及高可用和高弹性部署的优势，成为3节点以上redis必选的集群方案。
keydb兼容redis6.x,并提供比redis性能更好多核优化。另外keydb支持flash储存模式和热数据内存储存，也成为大容量kv数据库的一个优先考虑方案。&lt;/p>
&lt;p>最近几年云厂商频繁故障，也促使大家开始只使用云厂商的基础服务（主机）而更多的开始选择跨云跨地区部署。&lt;/p>
&lt;p>而redis的Gossip协议此时会占用大量金贵的公网带宽&lt;/p>
&lt;h2 id="gossip消息有多大会占用多大带宽">Gossip消息有多大会占用多大带宽
&lt;/h2>&lt;p>Redis 实例发送的 PING 消息的消息体是由 clusterMsgDataGossip 结构体组成的。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">nodename&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">CLUSTER_NAMELEN&lt;/span>&lt;span class="p">];&lt;/span> &lt;span class="c1">//40字节
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">uint32_t&lt;/span> &lt;span class="n">ping_sent&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//4字节
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">uint32_t&lt;/span> &lt;span class="n">pong_received&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//4字节
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">ip&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">NET_IP_STR_LEN&lt;/span>&lt;span class="p">];&lt;/span> &lt;span class="c1">//46字节
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">uint16_t&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//2字节
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">uint16_t&lt;/span> &lt;span class="n">cport&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//2字节
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">uint16_t&lt;/span> &lt;span class="n">flags&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//2字节
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">uint32_t&lt;/span> &lt;span class="n">notused1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//4字节
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="n">clusterMsgDataGossip&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>一个 Gossip 消息的大小了，即 104 字节。
每个实例在发送一个 Gossip 消息时，除了会传递自身的状态信息，默认还会传递集群十分之一实例的状态信息。
所以，对于一个包含了 1000 个实例的集群来说，每个实例发送一个 PING 消息时，会包含 100 个实例的状态信息，总的数据量是 10400 字节，再加上发送实例自身的信息，一个 Gossip 消息大约是 10KB。
此外，为了让 Slot 映射表能够在不同实例间传播，PING 消息中还带有一个长度为 16,384 bit 的 Bitmap，这个 Bitmap 的每一位对应了一个 Slot，如果某一位为 1，就表示这个 Slot 属于当前实例。这个 Bitmap 大小换算成字节后，是 2KB。我们把实例状态信息和 Slot 分配信息相加，就可以得到一个 PING 消息的大小了，大约是 12KB。
PONG 消息和 PING 消息的内容一样，所以，它的大小大约是 12KB。每个实例发送了 PING 消息后，还会收到返回的 PONG 消息，两个消息加起来有 24KB。
如果实例正常处理的单个请求只有几 KB 的话，那么，实例为了维护集群状态一致传输的 PING/PONG 消息，就要比单个业务请求大了。而且，每个实例都会给其它实例发送 PING/PONG 消息。随着集群规模增加，这些心跳消息的数量也会越多，会占据一部分集群的网络通信带宽，进而会降低集群服务正常客户端请求的吞吐量。&lt;/p>
&lt;h2 id="通讯频率">通讯频率
&lt;/h2>&lt;p>Redis Cluster 的实例启动后，默认会每秒从本地的实例列表中随机选出 5 个实例，再从这 5 个实例中找出一个最久没有通信的实例，把 PING 消息发送给该实例。这是实例周期性发送 PING 消息的基本做法。
这有可能会出现，有些实例一直没有被发送 PING 消息，导致它们维护的集群状态已经过期了。
为了避免这种情况，Redis Cluster 的实例会按照每 100ms 一次的频率，扫描本地的实例列表，如果发现有实例最近一次接收 PONG 消息的时间，已经大于配置项 cluster-node-timeout 的一半了（cluster-node-timeout/2），就会立刻给该实例发送 PING 消息，更新这个实例上的集群状态信息。
我们来总结下单实例每秒会发送的 PING 消息数量，如下所示：&lt;/p>
&lt;p>PING 消息发送数量 = 1 + 10 * 实例数（最近一次接收 PONG 消息的时间超出 cluster-node-timeout/2）&lt;/p>
&lt;p>假设单个实例检测发现，每 100 毫秒有 10 个实例的 PONG 消息接收超时，那么，这个实例每秒就会发送 101 个 PING 消息，约占 1.2MB/s 带宽。如果集群中有 30 个实例按照这种频率发送消息，就会占用 36MB/s 带宽，这就会挤占集群中用于服务正常请求的带宽。&lt;/p>
&lt;h2 id="如何降低实例间的通信开销">如何降低实例间的通信开销
&lt;/h2>&lt;p>我们现在知道，实例间发送消息的频率有两个。&lt;/p>
&lt;p>每个实例每 1 秒发送一条 PING 消息。
这个频率不算高，如果再降低该频率的话，集群中各实例的状态可能就没办法及时传播了。&lt;/p>
&lt;p>每个实例每 100 毫秒会做一次检测，给 PONG 消息接收超过 cluster-node-timeout/2 的节点发送 PING 消息。&lt;/p>
&lt;p>实例按照每 100 毫秒进行检测的频率，是 Redis 实例默认的周期性检查任务的统一频率，我们一般不需要修改它。&lt;/p>
&lt;p>配置项 cluster-node-timeout 定义了集群实例被判断为故障的心跳超时时间，默认是 15 秒。如果 cluster-node-timeout 值比较小，那么，在大规模集群中，就会比较频繁地出现 PONG 消息接收超时的情况。
为了避免过多的心跳消息挤占集群带宽，我们可以调大 cluster-node-timeout 值，比如说调大到 20 秒或 25 秒。这样一来， PONG 消息接收超时的情况就会有所缓解，单实例也不用频繁地每秒执行 10 次心跳发送操作了。
如何验证
为了验证调整 cluster-node-timeout 值后，是否能减少心跳消息占用的集群网络带宽，我给你提个小建议：你可以在调整 cluster-node-timeout 值的前后，使用 tcpdump 命令抓取实例发送心跳信息网络包的情况。
执行下面的命令后，我们可以抓取到 192.168.10.3 机器上的实例从 16379 端口发送的心跳网络包，并把网络包的内容保存到 r1.cap 文件中：
bash复制代码tcpdump host 192.168.10.3 port 16379 -i 网卡名 -w /tmp/r1.cap&lt;/p>
&lt;p>通过分析网络包的数量和大小，就可以判断调整 cluster-node-timeout 值前后，心跳消息占用的带宽情况了。&lt;/p>
&lt;h3 id="关于codis">关于Codis
&lt;/h3>&lt;p>Codis采取单独管理Slot的 以及作为redis的一个前端代理的方式可以不使用Gossip协议，所以没有这部带宽占用。但是codis已经很久不维护，并且引入了中间件以后会降低整体性能。
所以最好的方法 还是 1、控制集群实例的数量 2、调大cluster-node-timeout 值并做好集群故障/脑裂的自愈&lt;/p></description></item><item><title>golang 从redis cluster获取所有keys</title><link>https://dev.leiyanhui.com/golang/getkeyswithprefixforcluster/</link><pubDate>Thu, 30 Nov 2023 08:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/golang/getkeyswithprefixforcluster/</guid><description>&lt;p>使用 ForEachMaster 即可，如果从Slave获取有可能会有重复的需要另外去重。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">GetKeysWithPrefixForCluster&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">rdb&lt;/span> &lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ClusterClient&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ctx&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">prefix&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">keys&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 从所有主节点中依次获取&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">rdb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ForEachMaster&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">shard&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Client&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">thisKeys&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">shard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Keys&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">prefix&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s">&amp;#34;*&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Result&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">keys&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">thisKeys&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;GetKeysWithPrefixForCluster err:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">keys&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//keys=unique(keys)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">keys&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>去重复&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">unique&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">slice&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">string&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">keysMap&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">bool&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">uniqueKeys&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">entry&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">slice&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">value&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">keysMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">entry&lt;/span>&lt;span class="p">];&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">value&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">keysMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">entry&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">uniqueKeys&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">uniqueKeys&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">entry&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">uniqueKeys&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>golang 比较靠谱的 webview</title><link>https://dev.leiyanhui.com/golang/webview/</link><pubDate>Tue, 28 Nov 2023 08:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/golang/webview/</guid><description>&lt;p>不支持跨站&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nx">webview&lt;/span> &lt;span class="s">&amp;#34;github.com/webview/webview_go&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">w&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">webview&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">New&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nx">w&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Destroy&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">w&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetTitle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Basic Example&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">w&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetSize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">480&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">320&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">webview&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HintNone&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">w&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Navigate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;http://www.ip33.com/browser.html&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">w&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Run&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>编译&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">go build -o &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>basename &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">pwd&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2">_exe&amp;#34;&lt;/span> *.go&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> ls -lh *exe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>跨平台编译貌似有问题&lt;/p></description></item><item><title>物联网设备的 核心数据的维护和使用 有没有必要上sql、redis</title><link>https://dev.leiyanhui.com/lot/coredb-select/</link><pubDate>Sat, 09 Sep 2023 13:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/lot/coredb-select/</guid><description>&lt;h2 id="数据的组成部分">数据的组成部分
&lt;/h2>&lt;p>物联网设备的核心数据主要包括：&lt;/p>
&lt;ul>
&lt;li>设备管理list&lt;/li>
&lt;li>用户管理list&lt;/li>
&lt;li>渠道list&lt;/li>
&lt;li>权限管理&lt;/li>
&lt;li>其他
整体还是较为简单，耦合度不高。&lt;br>
其他数据可以用其他数据存储方法来搞定。&lt;/li>
&lt;/ul>
&lt;h2 id="是否要上sql">是否要上sql
&lt;/h2>&lt;p>因为核心数据结构较为简单，并且数据量很少，nosql数据库维护也不会太麻烦，所不打算上sql&lt;/p>
&lt;h2 id="是否需要上redis">是否需要上redis
&lt;/h2>&lt;p>因为数据要多个模块都要使用，而且集群部署，本地map持久化 来实现的话 逻辑略微复杂。&lt;br>
另外集群的各个模块 以及集群内都需要消息通讯，自己再用socket+map来弄 也是徒增很多工作量。 后期维护代价也比较大。&lt;/p>
&lt;p>所以 用redis 集群 来替代 sql和mq 还是一个不错的选择。&lt;/p>
&lt;h2 id="值得注意的">值得注意的
&lt;/h2>&lt;p>因为并发太高，虽然用了redis,但是一些需要频繁查询的地方，还是要本地map处理，不要频繁查询redis&lt;/p></description></item><item><title>docker 创建redis 集群 以及tls等</title><link>https://dev.leiyanhui.com/docker/redis/</link><pubDate>Fri, 08 Sep 2023 21:15:20 +0800</pubDate><guid>https://dev.leiyanhui.com/docker/redis/</guid><description>&lt;p>需要2个文件 一个 shell(redis_docker_start.sh) 一个 redis.conf 模板 (redis_docker_tpl.conf)&lt;br>
如果需要配置tls 需要用redis自带的工具创建一下自签名证书，或者购买证书。&lt;/p>
&lt;p>redis自带的证书创建 ： &lt;a class="link" href="https://github.com/redis/redis/blob/unstable/utils/gen-test-certs.sh" target="_blank" rel="noopener"
>https://github.com/redis/redis/blob/unstable/utils/gen-test-certs.sh&lt;/a> 可以自己修改一下，最后会创建11个文件。&lt;/p>
&lt;p>因为在公网异地集群，我这里只记录tls的集群&lt;/p>
&lt;h2 id="创建一个节点">创建一个节点
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bash redis_docker_start.sh &lt;span class="m">6078&lt;/span> &lt;span class="m">6079&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="连接到节点">连接到节点
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">redis-cli --tls &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --cacert /home/xxx/tls/ca.crt &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -a XXXXX &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -h 10.1.1.75 -p &lt;span class="m">6079&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>只需要指定ca.crt即可&lt;/p>
&lt;h2 id="redis_docker_startsh">redis_docker_start.sh
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">BASH_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;请使用 bash 命令执行该脚本&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################ 创建证书文件 函数 #################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">function&lt;/span> creatTLS_file &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt; &lt;span class="nv">$redisFile&lt;/span>/tls/ca.crt &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">XXXXX
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt; &lt;span class="nv">$redisFile&lt;/span>/tls/ca.key &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">XXXXX
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt; &lt;span class="nv">$redisFile&lt;/span>/tls/ca.txt &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">XXXXX
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt; &lt;span class="nv">$redisFile&lt;/span>/tls/client.crt &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">XXXXX
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt; &lt;span class="nv">$redisFile&lt;/span>/tls/client.key &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">XXXXX
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt; &lt;span class="nv">$redisFile&lt;/span>/tls/openssl.cnf &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">XXXXX
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt; &lt;span class="nv">$redisFile&lt;/span>/tls/redis.crt &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">XXXXX
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt; &lt;span class="nv">$redisFile&lt;/span>/tls/redis.dh &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">XXXXX
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt; &lt;span class="nv">$redisFile&lt;/span>/tls/redis.key &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">XXXXX
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt; &lt;span class="nv">$redisFile&lt;/span>/tls/server.crt&lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">XXXXX
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt; &lt;span class="nv">$redisFile&lt;/span>/tls/server.key&lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">XXXXX
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################## 主程序 ###################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;tcp端口参数 \$1 不存在 无法继续&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$2&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;tls端口参数 \$2 不存在 无法继续&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;tcp端口:&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2"> tls端口:&lt;/span>&lt;span class="nv">$2&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################## 相关文件 配置###################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">redisFile&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$HOME&lt;/span>/redis_docker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> “创建目录和日志文件到：&lt;span class="nv">$redisFile&lt;/span>”
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p &lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/data &lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/cnf &lt;span class="nv">$redisFile&lt;/span>/tls &lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm -rf &lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/log/redis.log &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> touch &lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/log/redis.log &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> chmod -R &lt;span class="m">777&lt;/span> &lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod -R &lt;span class="m">777&lt;/span> &lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################## 创建 acl 这个不是必须的###################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> “创建acl文件 &lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/users.acl”
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;user default on #XXXXXX ~* &amp;amp;* +@all&amp;#34;&lt;/span>&amp;gt;&lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/cnf/users.acl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################## 复制配置文件 ###################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> “创建配置文件 &lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/cnf/redis.conf”
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm -rf &lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/cnf/redis.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp redis_docker_tpl.conf &lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/cnf/redis.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################## 复制配置文件 ###################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tcp 端口&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s/{port}/&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">/g&amp;#34;&lt;/span> &lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/cnf/redis.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls 端口&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s/{tlsPort}/&lt;/span>&lt;span class="nv">$2&lt;/span>&lt;span class="s2">/g&amp;#34;&lt;/span> &lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/cnf/redis.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s/{password}/XXXXX/g&amp;#34;&lt;/span> &lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/cnf/redis.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################## 创建证书文件 ###################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> “创建证书文件到目录 &lt;span class="nv">$redisFile&lt;/span>/tls“
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">creatTLS_file &lt;span class="c1"># 创建证书文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################## 启动docker ###################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;删除旧容器 redis_&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2"> ....&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo docker stop redis_&lt;span class="nv">$1&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>sudo docker rm redis_&lt;span class="nv">$1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;创建新容器 redis_&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2"> ....&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo docker run -itd --name redis_&lt;span class="nv">$1&lt;/span> --hostname redis_&lt;span class="nv">$1&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --restart&lt;span class="o">=&lt;/span>always --net&lt;span class="o">=&lt;/span>host &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v &lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/cnf:/cnf &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v &lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/data:/var/lib/redis &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v &lt;span class="nv">$redisFile&lt;/span>/&lt;span class="nv">$1&lt;/span>/log:/var/log/redis &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v &lt;span class="nv">$redisFile&lt;/span>/tls:/etc/ssl/certs &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -d redis:7.2.1-alpine3.18 redis-server /cnf/redis.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo docker ps -a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo docker logs -f redis_&lt;span class="nv">$1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls 测试&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -d redis:7.2.1-alpine3.18 redis-server /volume/cnf/redis.conf &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># docker run --name test redis:7.2.1-alpine3.18&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="redis_docker_tplconf">redis_docker_tpl.conf
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt"> 100
&lt;/span>&lt;span class="lnt"> 101
&lt;/span>&lt;span class="lnt"> 102
&lt;/span>&lt;span class="lnt"> 103
&lt;/span>&lt;span class="lnt"> 104
&lt;/span>&lt;span class="lnt"> 105
&lt;/span>&lt;span class="lnt"> 106
&lt;/span>&lt;span class="lnt"> 107
&lt;/span>&lt;span class="lnt"> 108
&lt;/span>&lt;span class="lnt"> 109
&lt;/span>&lt;span class="lnt"> 110
&lt;/span>&lt;span class="lnt"> 111
&lt;/span>&lt;span class="lnt"> 112
&lt;/span>&lt;span class="lnt"> 113
&lt;/span>&lt;span class="lnt"> 114
&lt;/span>&lt;span class="lnt"> 115
&lt;/span>&lt;span class="lnt"> 116
&lt;/span>&lt;span class="lnt"> 117
&lt;/span>&lt;span class="lnt"> 118
&lt;/span>&lt;span class="lnt"> 119
&lt;/span>&lt;span class="lnt"> 120
&lt;/span>&lt;span class="lnt"> 121
&lt;/span>&lt;span class="lnt"> 122
&lt;/span>&lt;span class="lnt"> 123
&lt;/span>&lt;span class="lnt"> 124
&lt;/span>&lt;span class="lnt"> 125
&lt;/span>&lt;span class="lnt"> 126
&lt;/span>&lt;span class="lnt"> 127
&lt;/span>&lt;span class="lnt"> 128
&lt;/span>&lt;span class="lnt"> 129
&lt;/span>&lt;span class="lnt"> 130
&lt;/span>&lt;span class="lnt"> 131
&lt;/span>&lt;span class="lnt"> 132
&lt;/span>&lt;span class="lnt"> 133
&lt;/span>&lt;span class="lnt"> 134
&lt;/span>&lt;span class="lnt"> 135
&lt;/span>&lt;span class="lnt"> 136
&lt;/span>&lt;span class="lnt"> 137
&lt;/span>&lt;span class="lnt"> 138
&lt;/span>&lt;span class="lnt"> 139
&lt;/span>&lt;span class="lnt"> 140
&lt;/span>&lt;span class="lnt"> 141
&lt;/span>&lt;span class="lnt"> 142
&lt;/span>&lt;span class="lnt"> 143
&lt;/span>&lt;span class="lnt"> 144
&lt;/span>&lt;span class="lnt"> 145
&lt;/span>&lt;span class="lnt"> 146
&lt;/span>&lt;span class="lnt"> 147
&lt;/span>&lt;span class="lnt"> 148
&lt;/span>&lt;span class="lnt"> 149
&lt;/span>&lt;span class="lnt"> 150
&lt;/span>&lt;span class="lnt"> 151
&lt;/span>&lt;span class="lnt"> 152
&lt;/span>&lt;span class="lnt"> 153
&lt;/span>&lt;span class="lnt"> 154
&lt;/span>&lt;span class="lnt"> 155
&lt;/span>&lt;span class="lnt"> 156
&lt;/span>&lt;span class="lnt"> 157
&lt;/span>&lt;span class="lnt"> 158
&lt;/span>&lt;span class="lnt"> 159
&lt;/span>&lt;span class="lnt"> 160
&lt;/span>&lt;span class="lnt"> 161
&lt;/span>&lt;span class="lnt"> 162
&lt;/span>&lt;span class="lnt"> 163
&lt;/span>&lt;span class="lnt"> 164
&lt;/span>&lt;span class="lnt"> 165
&lt;/span>&lt;span class="lnt"> 166
&lt;/span>&lt;span class="lnt"> 167
&lt;/span>&lt;span class="lnt"> 168
&lt;/span>&lt;span class="lnt"> 169
&lt;/span>&lt;span class="lnt"> 170
&lt;/span>&lt;span class="lnt"> 171
&lt;/span>&lt;span class="lnt"> 172
&lt;/span>&lt;span class="lnt"> 173
&lt;/span>&lt;span class="lnt"> 174
&lt;/span>&lt;span class="lnt"> 175
&lt;/span>&lt;span class="lnt"> 176
&lt;/span>&lt;span class="lnt"> 177
&lt;/span>&lt;span class="lnt"> 178
&lt;/span>&lt;span class="lnt"> 179
&lt;/span>&lt;span class="lnt"> 180
&lt;/span>&lt;span class="lnt"> 181
&lt;/span>&lt;span class="lnt"> 182
&lt;/span>&lt;span class="lnt"> 183
&lt;/span>&lt;span class="lnt"> 184
&lt;/span>&lt;span class="lnt"> 185
&lt;/span>&lt;span class="lnt"> 186
&lt;/span>&lt;span class="lnt"> 187
&lt;/span>&lt;span class="lnt"> 188
&lt;/span>&lt;span class="lnt"> 189
&lt;/span>&lt;span class="lnt"> 190
&lt;/span>&lt;span class="lnt"> 191
&lt;/span>&lt;span class="lnt"> 192
&lt;/span>&lt;span class="lnt"> 193
&lt;/span>&lt;span class="lnt"> 194
&lt;/span>&lt;span class="lnt"> 195
&lt;/span>&lt;span class="lnt"> 196
&lt;/span>&lt;span class="lnt"> 197
&lt;/span>&lt;span class="lnt"> 198
&lt;/span>&lt;span class="lnt"> 199
&lt;/span>&lt;span class="lnt"> 200
&lt;/span>&lt;span class="lnt"> 201
&lt;/span>&lt;span class="lnt"> 202
&lt;/span>&lt;span class="lnt"> 203
&lt;/span>&lt;span class="lnt"> 204
&lt;/span>&lt;span class="lnt"> 205
&lt;/span>&lt;span class="lnt"> 206
&lt;/span>&lt;span class="lnt"> 207
&lt;/span>&lt;span class="lnt"> 208
&lt;/span>&lt;span class="lnt"> 209
&lt;/span>&lt;span class="lnt"> 210
&lt;/span>&lt;span class="lnt"> 211
&lt;/span>&lt;span class="lnt"> 212
&lt;/span>&lt;span class="lnt"> 213
&lt;/span>&lt;span class="lnt"> 214
&lt;/span>&lt;span class="lnt"> 215
&lt;/span>&lt;span class="lnt"> 216
&lt;/span>&lt;span class="lnt"> 217
&lt;/span>&lt;span class="lnt"> 218
&lt;/span>&lt;span class="lnt"> 219
&lt;/span>&lt;span class="lnt"> 220
&lt;/span>&lt;span class="lnt"> 221
&lt;/span>&lt;span class="lnt"> 222
&lt;/span>&lt;span class="lnt"> 223
&lt;/span>&lt;span class="lnt"> 224
&lt;/span>&lt;span class="lnt"> 225
&lt;/span>&lt;span class="lnt"> 226
&lt;/span>&lt;span class="lnt"> 227
&lt;/span>&lt;span class="lnt"> 228
&lt;/span>&lt;span class="lnt"> 229
&lt;/span>&lt;span class="lnt"> 230
&lt;/span>&lt;span class="lnt"> 231
&lt;/span>&lt;span class="lnt"> 232
&lt;/span>&lt;span class="lnt"> 233
&lt;/span>&lt;span class="lnt"> 234
&lt;/span>&lt;span class="lnt"> 235
&lt;/span>&lt;span class="lnt"> 236
&lt;/span>&lt;span class="lnt"> 237
&lt;/span>&lt;span class="lnt"> 238
&lt;/span>&lt;span class="lnt"> 239
&lt;/span>&lt;span class="lnt"> 240
&lt;/span>&lt;span class="lnt"> 241
&lt;/span>&lt;span class="lnt"> 242
&lt;/span>&lt;span class="lnt"> 243
&lt;/span>&lt;span class="lnt"> 244
&lt;/span>&lt;span class="lnt"> 245
&lt;/span>&lt;span class="lnt"> 246
&lt;/span>&lt;span class="lnt"> 247
&lt;/span>&lt;span class="lnt"> 248
&lt;/span>&lt;span class="lnt"> 249
&lt;/span>&lt;span class="lnt"> 250
&lt;/span>&lt;span class="lnt"> 251
&lt;/span>&lt;span class="lnt"> 252
&lt;/span>&lt;span class="lnt"> 253
&lt;/span>&lt;span class="lnt"> 254
&lt;/span>&lt;span class="lnt"> 255
&lt;/span>&lt;span class="lnt"> 256
&lt;/span>&lt;span class="lnt"> 257
&lt;/span>&lt;span class="lnt"> 258
&lt;/span>&lt;span class="lnt"> 259
&lt;/span>&lt;span class="lnt"> 260
&lt;/span>&lt;span class="lnt"> 261
&lt;/span>&lt;span class="lnt"> 262
&lt;/span>&lt;span class="lnt"> 263
&lt;/span>&lt;span class="lnt"> 264
&lt;/span>&lt;span class="lnt"> 265
&lt;/span>&lt;span class="lnt"> 266
&lt;/span>&lt;span class="lnt"> 267
&lt;/span>&lt;span class="lnt"> 268
&lt;/span>&lt;span class="lnt"> 269
&lt;/span>&lt;span class="lnt"> 270
&lt;/span>&lt;span class="lnt"> 271
&lt;/span>&lt;span class="lnt"> 272
&lt;/span>&lt;span class="lnt"> 273
&lt;/span>&lt;span class="lnt"> 274
&lt;/span>&lt;span class="lnt"> 275
&lt;/span>&lt;span class="lnt"> 276
&lt;/span>&lt;span class="lnt"> 277
&lt;/span>&lt;span class="lnt"> 278
&lt;/span>&lt;span class="lnt"> 279
&lt;/span>&lt;span class="lnt"> 280
&lt;/span>&lt;span class="lnt"> 281
&lt;/span>&lt;span class="lnt"> 282
&lt;/span>&lt;span class="lnt"> 283
&lt;/span>&lt;span class="lnt"> 284
&lt;/span>&lt;span class="lnt"> 285
&lt;/span>&lt;span class="lnt"> 286
&lt;/span>&lt;span class="lnt"> 287
&lt;/span>&lt;span class="lnt"> 288
&lt;/span>&lt;span class="lnt"> 289
&lt;/span>&lt;span class="lnt"> 290
&lt;/span>&lt;span class="lnt"> 291
&lt;/span>&lt;span class="lnt"> 292
&lt;/span>&lt;span class="lnt"> 293
&lt;/span>&lt;span class="lnt"> 294
&lt;/span>&lt;span class="lnt"> 295
&lt;/span>&lt;span class="lnt"> 296
&lt;/span>&lt;span class="lnt"> 297
&lt;/span>&lt;span class="lnt"> 298
&lt;/span>&lt;span class="lnt"> 299
&lt;/span>&lt;span class="lnt"> 300
&lt;/span>&lt;span class="lnt"> 301
&lt;/span>&lt;span class="lnt"> 302
&lt;/span>&lt;span class="lnt"> 303
&lt;/span>&lt;span class="lnt"> 304
&lt;/span>&lt;span class="lnt"> 305
&lt;/span>&lt;span class="lnt"> 306
&lt;/span>&lt;span class="lnt"> 307
&lt;/span>&lt;span class="lnt"> 308
&lt;/span>&lt;span class="lnt"> 309
&lt;/span>&lt;span class="lnt"> 310
&lt;/span>&lt;span class="lnt"> 311
&lt;/span>&lt;span class="lnt"> 312
&lt;/span>&lt;span class="lnt"> 313
&lt;/span>&lt;span class="lnt"> 314
&lt;/span>&lt;span class="lnt"> 315
&lt;/span>&lt;span class="lnt"> 316
&lt;/span>&lt;span class="lnt"> 317
&lt;/span>&lt;span class="lnt"> 318
&lt;/span>&lt;span class="lnt"> 319
&lt;/span>&lt;span class="lnt"> 320
&lt;/span>&lt;span class="lnt"> 321
&lt;/span>&lt;span class="lnt"> 322
&lt;/span>&lt;span class="lnt"> 323
&lt;/span>&lt;span class="lnt"> 324
&lt;/span>&lt;span class="lnt"> 325
&lt;/span>&lt;span class="lnt"> 326
&lt;/span>&lt;span class="lnt"> 327
&lt;/span>&lt;span class="lnt"> 328
&lt;/span>&lt;span class="lnt"> 329
&lt;/span>&lt;span class="lnt"> 330
&lt;/span>&lt;span class="lnt"> 331
&lt;/span>&lt;span class="lnt"> 332
&lt;/span>&lt;span class="lnt"> 333
&lt;/span>&lt;span class="lnt"> 334
&lt;/span>&lt;span class="lnt"> 335
&lt;/span>&lt;span class="lnt"> 336
&lt;/span>&lt;span class="lnt"> 337
&lt;/span>&lt;span class="lnt"> 338
&lt;/span>&lt;span class="lnt"> 339
&lt;/span>&lt;span class="lnt"> 340
&lt;/span>&lt;span class="lnt"> 341
&lt;/span>&lt;span class="lnt"> 342
&lt;/span>&lt;span class="lnt"> 343
&lt;/span>&lt;span class="lnt"> 344
&lt;/span>&lt;span class="lnt"> 345
&lt;/span>&lt;span class="lnt"> 346
&lt;/span>&lt;span class="lnt"> 347
&lt;/span>&lt;span class="lnt"> 348
&lt;/span>&lt;span class="lnt"> 349
&lt;/span>&lt;span class="lnt"> 350
&lt;/span>&lt;span class="lnt"> 351
&lt;/span>&lt;span class="lnt"> 352
&lt;/span>&lt;span class="lnt"> 353
&lt;/span>&lt;span class="lnt"> 354
&lt;/span>&lt;span class="lnt"> 355
&lt;/span>&lt;span class="lnt"> 356
&lt;/span>&lt;span class="lnt"> 357
&lt;/span>&lt;span class="lnt"> 358
&lt;/span>&lt;span class="lnt"> 359
&lt;/span>&lt;span class="lnt"> 360
&lt;/span>&lt;span class="lnt"> 361
&lt;/span>&lt;span class="lnt"> 362
&lt;/span>&lt;span class="lnt"> 363
&lt;/span>&lt;span class="lnt"> 364
&lt;/span>&lt;span class="lnt"> 365
&lt;/span>&lt;span class="lnt"> 366
&lt;/span>&lt;span class="lnt"> 367
&lt;/span>&lt;span class="lnt"> 368
&lt;/span>&lt;span class="lnt"> 369
&lt;/span>&lt;span class="lnt"> 370
&lt;/span>&lt;span class="lnt"> 371
&lt;/span>&lt;span class="lnt"> 372
&lt;/span>&lt;span class="lnt"> 373
&lt;/span>&lt;span class="lnt"> 374
&lt;/span>&lt;span class="lnt"> 375
&lt;/span>&lt;span class="lnt"> 376
&lt;/span>&lt;span class="lnt"> 377
&lt;/span>&lt;span class="lnt"> 378
&lt;/span>&lt;span class="lnt"> 379
&lt;/span>&lt;span class="lnt"> 380
&lt;/span>&lt;span class="lnt"> 381
&lt;/span>&lt;span class="lnt"> 382
&lt;/span>&lt;span class="lnt"> 383
&lt;/span>&lt;span class="lnt"> 384
&lt;/span>&lt;span class="lnt"> 385
&lt;/span>&lt;span class="lnt"> 386
&lt;/span>&lt;span class="lnt"> 387
&lt;/span>&lt;span class="lnt"> 388
&lt;/span>&lt;span class="lnt"> 389
&lt;/span>&lt;span class="lnt"> 390
&lt;/span>&lt;span class="lnt"> 391
&lt;/span>&lt;span class="lnt"> 392
&lt;/span>&lt;span class="lnt"> 393
&lt;/span>&lt;span class="lnt"> 394
&lt;/span>&lt;span class="lnt"> 395
&lt;/span>&lt;span class="lnt"> 396
&lt;/span>&lt;span class="lnt"> 397
&lt;/span>&lt;span class="lnt"> 398
&lt;/span>&lt;span class="lnt"> 399
&lt;/span>&lt;span class="lnt"> 400
&lt;/span>&lt;span class="lnt"> 401
&lt;/span>&lt;span class="lnt"> 402
&lt;/span>&lt;span class="lnt"> 403
&lt;/span>&lt;span class="lnt"> 404
&lt;/span>&lt;span class="lnt"> 405
&lt;/span>&lt;span class="lnt"> 406
&lt;/span>&lt;span class="lnt"> 407
&lt;/span>&lt;span class="lnt"> 408
&lt;/span>&lt;span class="lnt"> 409
&lt;/span>&lt;span class="lnt"> 410
&lt;/span>&lt;span class="lnt"> 411
&lt;/span>&lt;span class="lnt"> 412
&lt;/span>&lt;span class="lnt"> 413
&lt;/span>&lt;span class="lnt"> 414
&lt;/span>&lt;span class="lnt"> 415
&lt;/span>&lt;span class="lnt"> 416
&lt;/span>&lt;span class="lnt"> 417
&lt;/span>&lt;span class="lnt"> 418
&lt;/span>&lt;span class="lnt"> 419
&lt;/span>&lt;span class="lnt"> 420
&lt;/span>&lt;span class="lnt"> 421
&lt;/span>&lt;span class="lnt"> 422
&lt;/span>&lt;span class="lnt"> 423
&lt;/span>&lt;span class="lnt"> 424
&lt;/span>&lt;span class="lnt"> 425
&lt;/span>&lt;span class="lnt"> 426
&lt;/span>&lt;span class="lnt"> 427
&lt;/span>&lt;span class="lnt"> 428
&lt;/span>&lt;span class="lnt"> 429
&lt;/span>&lt;span class="lnt"> 430
&lt;/span>&lt;span class="lnt"> 431
&lt;/span>&lt;span class="lnt"> 432
&lt;/span>&lt;span class="lnt"> 433
&lt;/span>&lt;span class="lnt"> 434
&lt;/span>&lt;span class="lnt"> 435
&lt;/span>&lt;span class="lnt"> 436
&lt;/span>&lt;span class="lnt"> 437
&lt;/span>&lt;span class="lnt"> 438
&lt;/span>&lt;span class="lnt"> 439
&lt;/span>&lt;span class="lnt"> 440
&lt;/span>&lt;span class="lnt"> 441
&lt;/span>&lt;span class="lnt"> 442
&lt;/span>&lt;span class="lnt"> 443
&lt;/span>&lt;span class="lnt"> 444
&lt;/span>&lt;span class="lnt"> 445
&lt;/span>&lt;span class="lnt"> 446
&lt;/span>&lt;span class="lnt"> 447
&lt;/span>&lt;span class="lnt"> 448
&lt;/span>&lt;span class="lnt"> 449
&lt;/span>&lt;span class="lnt"> 450
&lt;/span>&lt;span class="lnt"> 451
&lt;/span>&lt;span class="lnt"> 452
&lt;/span>&lt;span class="lnt"> 453
&lt;/span>&lt;span class="lnt"> 454
&lt;/span>&lt;span class="lnt"> 455
&lt;/span>&lt;span class="lnt"> 456
&lt;/span>&lt;span class="lnt"> 457
&lt;/span>&lt;span class="lnt"> 458
&lt;/span>&lt;span class="lnt"> 459
&lt;/span>&lt;span class="lnt"> 460
&lt;/span>&lt;span class="lnt"> 461
&lt;/span>&lt;span class="lnt"> 462
&lt;/span>&lt;span class="lnt"> 463
&lt;/span>&lt;span class="lnt"> 464
&lt;/span>&lt;span class="lnt"> 465
&lt;/span>&lt;span class="lnt"> 466
&lt;/span>&lt;span class="lnt"> 467
&lt;/span>&lt;span class="lnt"> 468
&lt;/span>&lt;span class="lnt"> 469
&lt;/span>&lt;span class="lnt"> 470
&lt;/span>&lt;span class="lnt"> 471
&lt;/span>&lt;span class="lnt"> 472
&lt;/span>&lt;span class="lnt"> 473
&lt;/span>&lt;span class="lnt"> 474
&lt;/span>&lt;span class="lnt"> 475
&lt;/span>&lt;span class="lnt"> 476
&lt;/span>&lt;span class="lnt"> 477
&lt;/span>&lt;span class="lnt"> 478
&lt;/span>&lt;span class="lnt"> 479
&lt;/span>&lt;span class="lnt"> 480
&lt;/span>&lt;span class="lnt"> 481
&lt;/span>&lt;span class="lnt"> 482
&lt;/span>&lt;span class="lnt"> 483
&lt;/span>&lt;span class="lnt"> 484
&lt;/span>&lt;span class="lnt"> 485
&lt;/span>&lt;span class="lnt"> 486
&lt;/span>&lt;span class="lnt"> 487
&lt;/span>&lt;span class="lnt"> 488
&lt;/span>&lt;span class="lnt"> 489
&lt;/span>&lt;span class="lnt"> 490
&lt;/span>&lt;span class="lnt"> 491
&lt;/span>&lt;span class="lnt"> 492
&lt;/span>&lt;span class="lnt"> 493
&lt;/span>&lt;span class="lnt"> 494
&lt;/span>&lt;span class="lnt"> 495
&lt;/span>&lt;span class="lnt"> 496
&lt;/span>&lt;span class="lnt"> 497
&lt;/span>&lt;span class="lnt"> 498
&lt;/span>&lt;span class="lnt"> 499
&lt;/span>&lt;span class="lnt"> 500
&lt;/span>&lt;span class="lnt"> 501
&lt;/span>&lt;span class="lnt"> 502
&lt;/span>&lt;span class="lnt"> 503
&lt;/span>&lt;span class="lnt"> 504
&lt;/span>&lt;span class="lnt"> 505
&lt;/span>&lt;span class="lnt"> 506
&lt;/span>&lt;span class="lnt"> 507
&lt;/span>&lt;span class="lnt"> 508
&lt;/span>&lt;span class="lnt"> 509
&lt;/span>&lt;span class="lnt"> 510
&lt;/span>&lt;span class="lnt"> 511
&lt;/span>&lt;span class="lnt"> 512
&lt;/span>&lt;span class="lnt"> 513
&lt;/span>&lt;span class="lnt"> 514
&lt;/span>&lt;span class="lnt"> 515
&lt;/span>&lt;span class="lnt"> 516
&lt;/span>&lt;span class="lnt"> 517
&lt;/span>&lt;span class="lnt"> 518
&lt;/span>&lt;span class="lnt"> 519
&lt;/span>&lt;span class="lnt"> 520
&lt;/span>&lt;span class="lnt"> 521
&lt;/span>&lt;span class="lnt"> 522
&lt;/span>&lt;span class="lnt"> 523
&lt;/span>&lt;span class="lnt"> 524
&lt;/span>&lt;span class="lnt"> 525
&lt;/span>&lt;span class="lnt"> 526
&lt;/span>&lt;span class="lnt"> 527
&lt;/span>&lt;span class="lnt"> 528
&lt;/span>&lt;span class="lnt"> 529
&lt;/span>&lt;span class="lnt"> 530
&lt;/span>&lt;span class="lnt"> 531
&lt;/span>&lt;span class="lnt"> 532
&lt;/span>&lt;span class="lnt"> 533
&lt;/span>&lt;span class="lnt"> 534
&lt;/span>&lt;span class="lnt"> 535
&lt;/span>&lt;span class="lnt"> 536
&lt;/span>&lt;span class="lnt"> 537
&lt;/span>&lt;span class="lnt"> 538
&lt;/span>&lt;span class="lnt"> 539
&lt;/span>&lt;span class="lnt"> 540
&lt;/span>&lt;span class="lnt"> 541
&lt;/span>&lt;span class="lnt"> 542
&lt;/span>&lt;span class="lnt"> 543
&lt;/span>&lt;span class="lnt"> 544
&lt;/span>&lt;span class="lnt"> 545
&lt;/span>&lt;span class="lnt"> 546
&lt;/span>&lt;span class="lnt"> 547
&lt;/span>&lt;span class="lnt"> 548
&lt;/span>&lt;span class="lnt"> 549
&lt;/span>&lt;span class="lnt"> 550
&lt;/span>&lt;span class="lnt"> 551
&lt;/span>&lt;span class="lnt"> 552
&lt;/span>&lt;span class="lnt"> 553
&lt;/span>&lt;span class="lnt"> 554
&lt;/span>&lt;span class="lnt"> 555
&lt;/span>&lt;span class="lnt"> 556
&lt;/span>&lt;span class="lnt"> 557
&lt;/span>&lt;span class="lnt"> 558
&lt;/span>&lt;span class="lnt"> 559
&lt;/span>&lt;span class="lnt"> 560
&lt;/span>&lt;span class="lnt"> 561
&lt;/span>&lt;span class="lnt"> 562
&lt;/span>&lt;span class="lnt"> 563
&lt;/span>&lt;span class="lnt"> 564
&lt;/span>&lt;span class="lnt"> 565
&lt;/span>&lt;span class="lnt"> 566
&lt;/span>&lt;span class="lnt"> 567
&lt;/span>&lt;span class="lnt"> 568
&lt;/span>&lt;span class="lnt"> 569
&lt;/span>&lt;span class="lnt"> 570
&lt;/span>&lt;span class="lnt"> 571
&lt;/span>&lt;span class="lnt"> 572
&lt;/span>&lt;span class="lnt"> 573
&lt;/span>&lt;span class="lnt"> 574
&lt;/span>&lt;span class="lnt"> 575
&lt;/span>&lt;span class="lnt"> 576
&lt;/span>&lt;span class="lnt"> 577
&lt;/span>&lt;span class="lnt"> 578
&lt;/span>&lt;span class="lnt"> 579
&lt;/span>&lt;span class="lnt"> 580
&lt;/span>&lt;span class="lnt"> 581
&lt;/span>&lt;span class="lnt"> 582
&lt;/span>&lt;span class="lnt"> 583
&lt;/span>&lt;span class="lnt"> 584
&lt;/span>&lt;span class="lnt"> 585
&lt;/span>&lt;span class="lnt"> 586
&lt;/span>&lt;span class="lnt"> 587
&lt;/span>&lt;span class="lnt"> 588
&lt;/span>&lt;span class="lnt"> 589
&lt;/span>&lt;span class="lnt"> 590
&lt;/span>&lt;span class="lnt"> 591
&lt;/span>&lt;span class="lnt"> 592
&lt;/span>&lt;span class="lnt"> 593
&lt;/span>&lt;span class="lnt"> 594
&lt;/span>&lt;span class="lnt"> 595
&lt;/span>&lt;span class="lnt"> 596
&lt;/span>&lt;span class="lnt"> 597
&lt;/span>&lt;span class="lnt"> 598
&lt;/span>&lt;span class="lnt"> 599
&lt;/span>&lt;span class="lnt"> 600
&lt;/span>&lt;span class="lnt"> 601
&lt;/span>&lt;span class="lnt"> 602
&lt;/span>&lt;span class="lnt"> 603
&lt;/span>&lt;span class="lnt"> 604
&lt;/span>&lt;span class="lnt"> 605
&lt;/span>&lt;span class="lnt"> 606
&lt;/span>&lt;span class="lnt"> 607
&lt;/span>&lt;span class="lnt"> 608
&lt;/span>&lt;span class="lnt"> 609
&lt;/span>&lt;span class="lnt"> 610
&lt;/span>&lt;span class="lnt"> 611
&lt;/span>&lt;span class="lnt"> 612
&lt;/span>&lt;span class="lnt"> 613
&lt;/span>&lt;span class="lnt"> 614
&lt;/span>&lt;span class="lnt"> 615
&lt;/span>&lt;span class="lnt"> 616
&lt;/span>&lt;span class="lnt"> 617
&lt;/span>&lt;span class="lnt"> 618
&lt;/span>&lt;span class="lnt"> 619
&lt;/span>&lt;span class="lnt"> 620
&lt;/span>&lt;span class="lnt"> 621
&lt;/span>&lt;span class="lnt"> 622
&lt;/span>&lt;span class="lnt"> 623
&lt;/span>&lt;span class="lnt"> 624
&lt;/span>&lt;span class="lnt"> 625
&lt;/span>&lt;span class="lnt"> 626
&lt;/span>&lt;span class="lnt"> 627
&lt;/span>&lt;span class="lnt"> 628
&lt;/span>&lt;span class="lnt"> 629
&lt;/span>&lt;span class="lnt"> 630
&lt;/span>&lt;span class="lnt"> 631
&lt;/span>&lt;span class="lnt"> 632
&lt;/span>&lt;span class="lnt"> 633
&lt;/span>&lt;span class="lnt"> 634
&lt;/span>&lt;span class="lnt"> 635
&lt;/span>&lt;span class="lnt"> 636
&lt;/span>&lt;span class="lnt"> 637
&lt;/span>&lt;span class="lnt"> 638
&lt;/span>&lt;span class="lnt"> 639
&lt;/span>&lt;span class="lnt"> 640
&lt;/span>&lt;span class="lnt"> 641
&lt;/span>&lt;span class="lnt"> 642
&lt;/span>&lt;span class="lnt"> 643
&lt;/span>&lt;span class="lnt"> 644
&lt;/span>&lt;span class="lnt"> 645
&lt;/span>&lt;span class="lnt"> 646
&lt;/span>&lt;span class="lnt"> 647
&lt;/span>&lt;span class="lnt"> 648
&lt;/span>&lt;span class="lnt"> 649
&lt;/span>&lt;span class="lnt"> 650
&lt;/span>&lt;span class="lnt"> 651
&lt;/span>&lt;span class="lnt"> 652
&lt;/span>&lt;span class="lnt"> 653
&lt;/span>&lt;span class="lnt"> 654
&lt;/span>&lt;span class="lnt"> 655
&lt;/span>&lt;span class="lnt"> 656
&lt;/span>&lt;span class="lnt"> 657
&lt;/span>&lt;span class="lnt"> 658
&lt;/span>&lt;span class="lnt"> 659
&lt;/span>&lt;span class="lnt"> 660
&lt;/span>&lt;span class="lnt"> 661
&lt;/span>&lt;span class="lnt"> 662
&lt;/span>&lt;span class="lnt"> 663
&lt;/span>&lt;span class="lnt"> 664
&lt;/span>&lt;span class="lnt"> 665
&lt;/span>&lt;span class="lnt"> 666
&lt;/span>&lt;span class="lnt"> 667
&lt;/span>&lt;span class="lnt"> 668
&lt;/span>&lt;span class="lnt"> 669
&lt;/span>&lt;span class="lnt"> 670
&lt;/span>&lt;span class="lnt"> 671
&lt;/span>&lt;span class="lnt"> 672
&lt;/span>&lt;span class="lnt"> 673
&lt;/span>&lt;span class="lnt"> 674
&lt;/span>&lt;span class="lnt"> 675
&lt;/span>&lt;span class="lnt"> 676
&lt;/span>&lt;span class="lnt"> 677
&lt;/span>&lt;span class="lnt"> 678
&lt;/span>&lt;span class="lnt"> 679
&lt;/span>&lt;span class="lnt"> 680
&lt;/span>&lt;span class="lnt"> 681
&lt;/span>&lt;span class="lnt"> 682
&lt;/span>&lt;span class="lnt"> 683
&lt;/span>&lt;span class="lnt"> 684
&lt;/span>&lt;span class="lnt"> 685
&lt;/span>&lt;span class="lnt"> 686
&lt;/span>&lt;span class="lnt"> 687
&lt;/span>&lt;span class="lnt"> 688
&lt;/span>&lt;span class="lnt"> 689
&lt;/span>&lt;span class="lnt"> 690
&lt;/span>&lt;span class="lnt"> 691
&lt;/span>&lt;span class="lnt"> 692
&lt;/span>&lt;span class="lnt"> 693
&lt;/span>&lt;span class="lnt"> 694
&lt;/span>&lt;span class="lnt"> 695
&lt;/span>&lt;span class="lnt"> 696
&lt;/span>&lt;span class="lnt"> 697
&lt;/span>&lt;span class="lnt"> 698
&lt;/span>&lt;span class="lnt"> 699
&lt;/span>&lt;span class="lnt"> 700
&lt;/span>&lt;span class="lnt"> 701
&lt;/span>&lt;span class="lnt"> 702
&lt;/span>&lt;span class="lnt"> 703
&lt;/span>&lt;span class="lnt"> 704
&lt;/span>&lt;span class="lnt"> 705
&lt;/span>&lt;span class="lnt"> 706
&lt;/span>&lt;span class="lnt"> 707
&lt;/span>&lt;span class="lnt"> 708
&lt;/span>&lt;span class="lnt"> 709
&lt;/span>&lt;span class="lnt"> 710
&lt;/span>&lt;span class="lnt"> 711
&lt;/span>&lt;span class="lnt"> 712
&lt;/span>&lt;span class="lnt"> 713
&lt;/span>&lt;span class="lnt"> 714
&lt;/span>&lt;span class="lnt"> 715
&lt;/span>&lt;span class="lnt"> 716
&lt;/span>&lt;span class="lnt"> 717
&lt;/span>&lt;span class="lnt"> 718
&lt;/span>&lt;span class="lnt"> 719
&lt;/span>&lt;span class="lnt"> 720
&lt;/span>&lt;span class="lnt"> 721
&lt;/span>&lt;span class="lnt"> 722
&lt;/span>&lt;span class="lnt"> 723
&lt;/span>&lt;span class="lnt"> 724
&lt;/span>&lt;span class="lnt"> 725
&lt;/span>&lt;span class="lnt"> 726
&lt;/span>&lt;span class="lnt"> 727
&lt;/span>&lt;span class="lnt"> 728
&lt;/span>&lt;span class="lnt"> 729
&lt;/span>&lt;span class="lnt"> 730
&lt;/span>&lt;span class="lnt"> 731
&lt;/span>&lt;span class="lnt"> 732
&lt;/span>&lt;span class="lnt"> 733
&lt;/span>&lt;span class="lnt"> 734
&lt;/span>&lt;span class="lnt"> 735
&lt;/span>&lt;span class="lnt"> 736
&lt;/span>&lt;span class="lnt"> 737
&lt;/span>&lt;span class="lnt"> 738
&lt;/span>&lt;span class="lnt"> 739
&lt;/span>&lt;span class="lnt"> 740
&lt;/span>&lt;span class="lnt"> 741
&lt;/span>&lt;span class="lnt"> 742
&lt;/span>&lt;span class="lnt"> 743
&lt;/span>&lt;span class="lnt"> 744
&lt;/span>&lt;span class="lnt"> 745
&lt;/span>&lt;span class="lnt"> 746
&lt;/span>&lt;span class="lnt"> 747
&lt;/span>&lt;span class="lnt"> 748
&lt;/span>&lt;span class="lnt"> 749
&lt;/span>&lt;span class="lnt"> 750
&lt;/span>&lt;span class="lnt"> 751
&lt;/span>&lt;span class="lnt"> 752
&lt;/span>&lt;span class="lnt"> 753
&lt;/span>&lt;span class="lnt"> 754
&lt;/span>&lt;span class="lnt"> 755
&lt;/span>&lt;span class="lnt"> 756
&lt;/span>&lt;span class="lnt"> 757
&lt;/span>&lt;span class="lnt"> 758
&lt;/span>&lt;span class="lnt"> 759
&lt;/span>&lt;span class="lnt"> 760
&lt;/span>&lt;span class="lnt"> 761
&lt;/span>&lt;span class="lnt"> 762
&lt;/span>&lt;span class="lnt"> 763
&lt;/span>&lt;span class="lnt"> 764
&lt;/span>&lt;span class="lnt"> 765
&lt;/span>&lt;span class="lnt"> 766
&lt;/span>&lt;span class="lnt"> 767
&lt;/span>&lt;span class="lnt"> 768
&lt;/span>&lt;span class="lnt"> 769
&lt;/span>&lt;span class="lnt"> 770
&lt;/span>&lt;span class="lnt"> 771
&lt;/span>&lt;span class="lnt"> 772
&lt;/span>&lt;span class="lnt"> 773
&lt;/span>&lt;span class="lnt"> 774
&lt;/span>&lt;span class="lnt"> 775
&lt;/span>&lt;span class="lnt"> 776
&lt;/span>&lt;span class="lnt"> 777
&lt;/span>&lt;span class="lnt"> 778
&lt;/span>&lt;span class="lnt"> 779
&lt;/span>&lt;span class="lnt"> 780
&lt;/span>&lt;span class="lnt"> 781
&lt;/span>&lt;span class="lnt"> 782
&lt;/span>&lt;span class="lnt"> 783
&lt;/span>&lt;span class="lnt"> 784
&lt;/span>&lt;span class="lnt"> 785
&lt;/span>&lt;span class="lnt"> 786
&lt;/span>&lt;span class="lnt"> 787
&lt;/span>&lt;span class="lnt"> 788
&lt;/span>&lt;span class="lnt"> 789
&lt;/span>&lt;span class="lnt"> 790
&lt;/span>&lt;span class="lnt"> 791
&lt;/span>&lt;span class="lnt"> 792
&lt;/span>&lt;span class="lnt"> 793
&lt;/span>&lt;span class="lnt"> 794
&lt;/span>&lt;span class="lnt"> 795
&lt;/span>&lt;span class="lnt"> 796
&lt;/span>&lt;span class="lnt"> 797
&lt;/span>&lt;span class="lnt"> 798
&lt;/span>&lt;span class="lnt"> 799
&lt;/span>&lt;span class="lnt"> 800
&lt;/span>&lt;span class="lnt"> 801
&lt;/span>&lt;span class="lnt"> 802
&lt;/span>&lt;span class="lnt"> 803
&lt;/span>&lt;span class="lnt"> 804
&lt;/span>&lt;span class="lnt"> 805
&lt;/span>&lt;span class="lnt"> 806
&lt;/span>&lt;span class="lnt"> 807
&lt;/span>&lt;span class="lnt"> 808
&lt;/span>&lt;span class="lnt"> 809
&lt;/span>&lt;span class="lnt"> 810
&lt;/span>&lt;span class="lnt"> 811
&lt;/span>&lt;span class="lnt"> 812
&lt;/span>&lt;span class="lnt"> 813
&lt;/span>&lt;span class="lnt"> 814
&lt;/span>&lt;span class="lnt"> 815
&lt;/span>&lt;span class="lnt"> 816
&lt;/span>&lt;span class="lnt"> 817
&lt;/span>&lt;span class="lnt"> 818
&lt;/span>&lt;span class="lnt"> 819
&lt;/span>&lt;span class="lnt"> 820
&lt;/span>&lt;span class="lnt"> 821
&lt;/span>&lt;span class="lnt"> 822
&lt;/span>&lt;span class="lnt"> 823
&lt;/span>&lt;span class="lnt"> 824
&lt;/span>&lt;span class="lnt"> 825
&lt;/span>&lt;span class="lnt"> 826
&lt;/span>&lt;span class="lnt"> 827
&lt;/span>&lt;span class="lnt"> 828
&lt;/span>&lt;span class="lnt"> 829
&lt;/span>&lt;span class="lnt"> 830
&lt;/span>&lt;span class="lnt"> 831
&lt;/span>&lt;span class="lnt"> 832
&lt;/span>&lt;span class="lnt"> 833
&lt;/span>&lt;span class="lnt"> 834
&lt;/span>&lt;span class="lnt"> 835
&lt;/span>&lt;span class="lnt"> 836
&lt;/span>&lt;span class="lnt"> 837
&lt;/span>&lt;span class="lnt"> 838
&lt;/span>&lt;span class="lnt"> 839
&lt;/span>&lt;span class="lnt"> 840
&lt;/span>&lt;span class="lnt"> 841
&lt;/span>&lt;span class="lnt"> 842
&lt;/span>&lt;span class="lnt"> 843
&lt;/span>&lt;span class="lnt"> 844
&lt;/span>&lt;span class="lnt"> 845
&lt;/span>&lt;span class="lnt"> 846
&lt;/span>&lt;span class="lnt"> 847
&lt;/span>&lt;span class="lnt"> 848
&lt;/span>&lt;span class="lnt"> 849
&lt;/span>&lt;span class="lnt"> 850
&lt;/span>&lt;span class="lnt"> 851
&lt;/span>&lt;span class="lnt"> 852
&lt;/span>&lt;span class="lnt"> 853
&lt;/span>&lt;span class="lnt"> 854
&lt;/span>&lt;span class="lnt"> 855
&lt;/span>&lt;span class="lnt"> 856
&lt;/span>&lt;span class="lnt"> 857
&lt;/span>&lt;span class="lnt"> 858
&lt;/span>&lt;span class="lnt"> 859
&lt;/span>&lt;span class="lnt"> 860
&lt;/span>&lt;span class="lnt"> 861
&lt;/span>&lt;span class="lnt"> 862
&lt;/span>&lt;span class="lnt"> 863
&lt;/span>&lt;span class="lnt"> 864
&lt;/span>&lt;span class="lnt"> 865
&lt;/span>&lt;span class="lnt"> 866
&lt;/span>&lt;span class="lnt"> 867
&lt;/span>&lt;span class="lnt"> 868
&lt;/span>&lt;span class="lnt"> 869
&lt;/span>&lt;span class="lnt"> 870
&lt;/span>&lt;span class="lnt"> 871
&lt;/span>&lt;span class="lnt"> 872
&lt;/span>&lt;span class="lnt"> 873
&lt;/span>&lt;span class="lnt"> 874
&lt;/span>&lt;span class="lnt"> 875
&lt;/span>&lt;span class="lnt"> 876
&lt;/span>&lt;span class="lnt"> 877
&lt;/span>&lt;span class="lnt"> 878
&lt;/span>&lt;span class="lnt"> 879
&lt;/span>&lt;span class="lnt"> 880
&lt;/span>&lt;span class="lnt"> 881
&lt;/span>&lt;span class="lnt"> 882
&lt;/span>&lt;span class="lnt"> 883
&lt;/span>&lt;span class="lnt"> 884
&lt;/span>&lt;span class="lnt"> 885
&lt;/span>&lt;span class="lnt"> 886
&lt;/span>&lt;span class="lnt"> 887
&lt;/span>&lt;span class="lnt"> 888
&lt;/span>&lt;span class="lnt"> 889
&lt;/span>&lt;span class="lnt"> 890
&lt;/span>&lt;span class="lnt"> 891
&lt;/span>&lt;span class="lnt"> 892
&lt;/span>&lt;span class="lnt"> 893
&lt;/span>&lt;span class="lnt"> 894
&lt;/span>&lt;span class="lnt"> 895
&lt;/span>&lt;span class="lnt"> 896
&lt;/span>&lt;span class="lnt"> 897
&lt;/span>&lt;span class="lnt"> 898
&lt;/span>&lt;span class="lnt"> 899
&lt;/span>&lt;span class="lnt"> 900
&lt;/span>&lt;span class="lnt"> 901
&lt;/span>&lt;span class="lnt"> 902
&lt;/span>&lt;span class="lnt"> 903
&lt;/span>&lt;span class="lnt"> 904
&lt;/span>&lt;span class="lnt"> 905
&lt;/span>&lt;span class="lnt"> 906
&lt;/span>&lt;span class="lnt"> 907
&lt;/span>&lt;span class="lnt"> 908
&lt;/span>&lt;span class="lnt"> 909
&lt;/span>&lt;span class="lnt"> 910
&lt;/span>&lt;span class="lnt"> 911
&lt;/span>&lt;span class="lnt"> 912
&lt;/span>&lt;span class="lnt"> 913
&lt;/span>&lt;span class="lnt"> 914
&lt;/span>&lt;span class="lnt"> 915
&lt;/span>&lt;span class="lnt"> 916
&lt;/span>&lt;span class="lnt"> 917
&lt;/span>&lt;span class="lnt"> 918
&lt;/span>&lt;span class="lnt"> 919
&lt;/span>&lt;span class="lnt"> 920
&lt;/span>&lt;span class="lnt"> 921
&lt;/span>&lt;span class="lnt"> 922
&lt;/span>&lt;span class="lnt"> 923
&lt;/span>&lt;span class="lnt"> 924
&lt;/span>&lt;span class="lnt"> 925
&lt;/span>&lt;span class="lnt"> 926
&lt;/span>&lt;span class="lnt"> 927
&lt;/span>&lt;span class="lnt"> 928
&lt;/span>&lt;span class="lnt"> 929
&lt;/span>&lt;span class="lnt"> 930
&lt;/span>&lt;span class="lnt"> 931
&lt;/span>&lt;span class="lnt"> 932
&lt;/span>&lt;span class="lnt"> 933
&lt;/span>&lt;span class="lnt"> 934
&lt;/span>&lt;span class="lnt"> 935
&lt;/span>&lt;span class="lnt"> 936
&lt;/span>&lt;span class="lnt"> 937
&lt;/span>&lt;span class="lnt"> 938
&lt;/span>&lt;span class="lnt"> 939
&lt;/span>&lt;span class="lnt"> 940
&lt;/span>&lt;span class="lnt"> 941
&lt;/span>&lt;span class="lnt"> 942
&lt;/span>&lt;span class="lnt"> 943
&lt;/span>&lt;span class="lnt"> 944
&lt;/span>&lt;span class="lnt"> 945
&lt;/span>&lt;span class="lnt"> 946
&lt;/span>&lt;span class="lnt"> 947
&lt;/span>&lt;span class="lnt"> 948
&lt;/span>&lt;span class="lnt"> 949
&lt;/span>&lt;span class="lnt"> 950
&lt;/span>&lt;span class="lnt"> 951
&lt;/span>&lt;span class="lnt"> 952
&lt;/span>&lt;span class="lnt"> 953
&lt;/span>&lt;span class="lnt"> 954
&lt;/span>&lt;span class="lnt"> 955
&lt;/span>&lt;span class="lnt"> 956
&lt;/span>&lt;span class="lnt"> 957
&lt;/span>&lt;span class="lnt"> 958
&lt;/span>&lt;span class="lnt"> 959
&lt;/span>&lt;span class="lnt"> 960
&lt;/span>&lt;span class="lnt"> 961
&lt;/span>&lt;span class="lnt"> 962
&lt;/span>&lt;span class="lnt"> 963
&lt;/span>&lt;span class="lnt"> 964
&lt;/span>&lt;span class="lnt"> 965
&lt;/span>&lt;span class="lnt"> 966
&lt;/span>&lt;span class="lnt"> 967
&lt;/span>&lt;span class="lnt"> 968
&lt;/span>&lt;span class="lnt"> 969
&lt;/span>&lt;span class="lnt"> 970
&lt;/span>&lt;span class="lnt"> 971
&lt;/span>&lt;span class="lnt"> 972
&lt;/span>&lt;span class="lnt"> 973
&lt;/span>&lt;span class="lnt"> 974
&lt;/span>&lt;span class="lnt"> 975
&lt;/span>&lt;span class="lnt"> 976
&lt;/span>&lt;span class="lnt"> 977
&lt;/span>&lt;span class="lnt"> 978
&lt;/span>&lt;span class="lnt"> 979
&lt;/span>&lt;span class="lnt"> 980
&lt;/span>&lt;span class="lnt"> 981
&lt;/span>&lt;span class="lnt"> 982
&lt;/span>&lt;span class="lnt"> 983
&lt;/span>&lt;span class="lnt"> 984
&lt;/span>&lt;span class="lnt"> 985
&lt;/span>&lt;span class="lnt"> 986
&lt;/span>&lt;span class="lnt"> 987
&lt;/span>&lt;span class="lnt"> 988
&lt;/span>&lt;span class="lnt"> 989
&lt;/span>&lt;span class="lnt"> 990
&lt;/span>&lt;span class="lnt"> 991
&lt;/span>&lt;span class="lnt"> 992
&lt;/span>&lt;span class="lnt"> 993
&lt;/span>&lt;span class="lnt"> 994
&lt;/span>&lt;span class="lnt"> 995
&lt;/span>&lt;span class="lnt"> 996
&lt;/span>&lt;span class="lnt"> 997
&lt;/span>&lt;span class="lnt"> 998
&lt;/span>&lt;span class="lnt"> 999
&lt;/span>&lt;span class="lnt">1000
&lt;/span>&lt;span class="lnt">1001
&lt;/span>&lt;span class="lnt">1002
&lt;/span>&lt;span class="lnt">1003
&lt;/span>&lt;span class="lnt">1004
&lt;/span>&lt;span class="lnt">1005
&lt;/span>&lt;span class="lnt">1006
&lt;/span>&lt;span class="lnt">1007
&lt;/span>&lt;span class="lnt">1008
&lt;/span>&lt;span class="lnt">1009
&lt;/span>&lt;span class="lnt">1010
&lt;/span>&lt;span class="lnt">1011
&lt;/span>&lt;span class="lnt">1012
&lt;/span>&lt;span class="lnt">1013
&lt;/span>&lt;span class="lnt">1014
&lt;/span>&lt;span class="lnt">1015
&lt;/span>&lt;span class="lnt">1016
&lt;/span>&lt;span class="lnt">1017
&lt;/span>&lt;span class="lnt">1018
&lt;/span>&lt;span class="lnt">1019
&lt;/span>&lt;span class="lnt">1020
&lt;/span>&lt;span class="lnt">1021
&lt;/span>&lt;span class="lnt">1022
&lt;/span>&lt;span class="lnt">1023
&lt;/span>&lt;span class="lnt">1024
&lt;/span>&lt;span class="lnt">1025
&lt;/span>&lt;span class="lnt">1026
&lt;/span>&lt;span class="lnt">1027
&lt;/span>&lt;span class="lnt">1028
&lt;/span>&lt;span class="lnt">1029
&lt;/span>&lt;span class="lnt">1030
&lt;/span>&lt;span class="lnt">1031
&lt;/span>&lt;span class="lnt">1032
&lt;/span>&lt;span class="lnt">1033
&lt;/span>&lt;span class="lnt">1034
&lt;/span>&lt;span class="lnt">1035
&lt;/span>&lt;span class="lnt">1036
&lt;/span>&lt;span class="lnt">1037
&lt;/span>&lt;span class="lnt">1038
&lt;/span>&lt;span class="lnt">1039
&lt;/span>&lt;span class="lnt">1040
&lt;/span>&lt;span class="lnt">1041
&lt;/span>&lt;span class="lnt">1042
&lt;/span>&lt;span class="lnt">1043
&lt;/span>&lt;span class="lnt">1044
&lt;/span>&lt;span class="lnt">1045
&lt;/span>&lt;span class="lnt">1046
&lt;/span>&lt;span class="lnt">1047
&lt;/span>&lt;span class="lnt">1048
&lt;/span>&lt;span class="lnt">1049
&lt;/span>&lt;span class="lnt">1050
&lt;/span>&lt;span class="lnt">1051
&lt;/span>&lt;span class="lnt">1052
&lt;/span>&lt;span class="lnt">1053
&lt;/span>&lt;span class="lnt">1054
&lt;/span>&lt;span class="lnt">1055
&lt;/span>&lt;span class="lnt">1056
&lt;/span>&lt;span class="lnt">1057
&lt;/span>&lt;span class="lnt">1058
&lt;/span>&lt;span class="lnt">1059
&lt;/span>&lt;span class="lnt">1060
&lt;/span>&lt;span class="lnt">1061
&lt;/span>&lt;span class="lnt">1062
&lt;/span>&lt;span class="lnt">1063
&lt;/span>&lt;span class="lnt">1064
&lt;/span>&lt;span class="lnt">1065
&lt;/span>&lt;span class="lnt">1066
&lt;/span>&lt;span class="lnt">1067
&lt;/span>&lt;span class="lnt">1068
&lt;/span>&lt;span class="lnt">1069
&lt;/span>&lt;span class="lnt">1070
&lt;/span>&lt;span class="lnt">1071
&lt;/span>&lt;span class="lnt">1072
&lt;/span>&lt;span class="lnt">1073
&lt;/span>&lt;span class="lnt">1074
&lt;/span>&lt;span class="lnt">1075
&lt;/span>&lt;span class="lnt">1076
&lt;/span>&lt;span class="lnt">1077
&lt;/span>&lt;span class="lnt">1078
&lt;/span>&lt;span class="lnt">1079
&lt;/span>&lt;span class="lnt">1080
&lt;/span>&lt;span class="lnt">1081
&lt;/span>&lt;span class="lnt">1082
&lt;/span>&lt;span class="lnt">1083
&lt;/span>&lt;span class="lnt">1084
&lt;/span>&lt;span class="lnt">1085
&lt;/span>&lt;span class="lnt">1086
&lt;/span>&lt;span class="lnt">1087
&lt;/span>&lt;span class="lnt">1088
&lt;/span>&lt;span class="lnt">1089
&lt;/span>&lt;span class="lnt">1090
&lt;/span>&lt;span class="lnt">1091
&lt;/span>&lt;span class="lnt">1092
&lt;/span>&lt;span class="lnt">1093
&lt;/span>&lt;span class="lnt">1094
&lt;/span>&lt;span class="lnt">1095
&lt;/span>&lt;span class="lnt">1096
&lt;/span>&lt;span class="lnt">1097
&lt;/span>&lt;span class="lnt">1098
&lt;/span>&lt;span class="lnt">1099
&lt;/span>&lt;span class="lnt">1100
&lt;/span>&lt;span class="lnt">1101
&lt;/span>&lt;span class="lnt">1102
&lt;/span>&lt;span class="lnt">1103
&lt;/span>&lt;span class="lnt">1104
&lt;/span>&lt;span class="lnt">1105
&lt;/span>&lt;span class="lnt">1106
&lt;/span>&lt;span class="lnt">1107
&lt;/span>&lt;span class="lnt">1108
&lt;/span>&lt;span class="lnt">1109
&lt;/span>&lt;span class="lnt">1110
&lt;/span>&lt;span class="lnt">1111
&lt;/span>&lt;span class="lnt">1112
&lt;/span>&lt;span class="lnt">1113
&lt;/span>&lt;span class="lnt">1114
&lt;/span>&lt;span class="lnt">1115
&lt;/span>&lt;span class="lnt">1116
&lt;/span>&lt;span class="lnt">1117
&lt;/span>&lt;span class="lnt">1118
&lt;/span>&lt;span class="lnt">1119
&lt;/span>&lt;span class="lnt">1120
&lt;/span>&lt;span class="lnt">1121
&lt;/span>&lt;span class="lnt">1122
&lt;/span>&lt;span class="lnt">1123
&lt;/span>&lt;span class="lnt">1124
&lt;/span>&lt;span class="lnt">1125
&lt;/span>&lt;span class="lnt">1126
&lt;/span>&lt;span class="lnt">1127
&lt;/span>&lt;span class="lnt">1128
&lt;/span>&lt;span class="lnt">1129
&lt;/span>&lt;span class="lnt">1130
&lt;/span>&lt;span class="lnt">1131
&lt;/span>&lt;span class="lnt">1132
&lt;/span>&lt;span class="lnt">1133
&lt;/span>&lt;span class="lnt">1134
&lt;/span>&lt;span class="lnt">1135
&lt;/span>&lt;span class="lnt">1136
&lt;/span>&lt;span class="lnt">1137
&lt;/span>&lt;span class="lnt">1138
&lt;/span>&lt;span class="lnt">1139
&lt;/span>&lt;span class="lnt">1140
&lt;/span>&lt;span class="lnt">1141
&lt;/span>&lt;span class="lnt">1142
&lt;/span>&lt;span class="lnt">1143
&lt;/span>&lt;span class="lnt">1144
&lt;/span>&lt;span class="lnt">1145
&lt;/span>&lt;span class="lnt">1146
&lt;/span>&lt;span class="lnt">1147
&lt;/span>&lt;span class="lnt">1148
&lt;/span>&lt;span class="lnt">1149
&lt;/span>&lt;span class="lnt">1150
&lt;/span>&lt;span class="lnt">1151
&lt;/span>&lt;span class="lnt">1152
&lt;/span>&lt;span class="lnt">1153
&lt;/span>&lt;span class="lnt">1154
&lt;/span>&lt;span class="lnt">1155
&lt;/span>&lt;span class="lnt">1156
&lt;/span>&lt;span class="lnt">1157
&lt;/span>&lt;span class="lnt">1158
&lt;/span>&lt;span class="lnt">1159
&lt;/span>&lt;span class="lnt">1160
&lt;/span>&lt;span class="lnt">1161
&lt;/span>&lt;span class="lnt">1162
&lt;/span>&lt;span class="lnt">1163
&lt;/span>&lt;span class="lnt">1164
&lt;/span>&lt;span class="lnt">1165
&lt;/span>&lt;span class="lnt">1166
&lt;/span>&lt;span class="lnt">1167
&lt;/span>&lt;span class="lnt">1168
&lt;/span>&lt;span class="lnt">1169
&lt;/span>&lt;span class="lnt">1170
&lt;/span>&lt;span class="lnt">1171
&lt;/span>&lt;span class="lnt">1172
&lt;/span>&lt;span class="lnt">1173
&lt;/span>&lt;span class="lnt">1174
&lt;/span>&lt;span class="lnt">1175
&lt;/span>&lt;span class="lnt">1176
&lt;/span>&lt;span class="lnt">1177
&lt;/span>&lt;span class="lnt">1178
&lt;/span>&lt;span class="lnt">1179
&lt;/span>&lt;span class="lnt">1180
&lt;/span>&lt;span class="lnt">1181
&lt;/span>&lt;span class="lnt">1182
&lt;/span>&lt;span class="lnt">1183
&lt;/span>&lt;span class="lnt">1184
&lt;/span>&lt;span class="lnt">1185
&lt;/span>&lt;span class="lnt">1186
&lt;/span>&lt;span class="lnt">1187
&lt;/span>&lt;span class="lnt">1188
&lt;/span>&lt;span class="lnt">1189
&lt;/span>&lt;span class="lnt">1190
&lt;/span>&lt;span class="lnt">1191
&lt;/span>&lt;span class="lnt">1192
&lt;/span>&lt;span class="lnt">1193
&lt;/span>&lt;span class="lnt">1194
&lt;/span>&lt;span class="lnt">1195
&lt;/span>&lt;span class="lnt">1196
&lt;/span>&lt;span class="lnt">1197
&lt;/span>&lt;span class="lnt">1198
&lt;/span>&lt;span class="lnt">1199
&lt;/span>&lt;span class="lnt">1200
&lt;/span>&lt;span class="lnt">1201
&lt;/span>&lt;span class="lnt">1202
&lt;/span>&lt;span class="lnt">1203
&lt;/span>&lt;span class="lnt">1204
&lt;/span>&lt;span class="lnt">1205
&lt;/span>&lt;span class="lnt">1206
&lt;/span>&lt;span class="lnt">1207
&lt;/span>&lt;span class="lnt">1208
&lt;/span>&lt;span class="lnt">1209
&lt;/span>&lt;span class="lnt">1210
&lt;/span>&lt;span class="lnt">1211
&lt;/span>&lt;span class="lnt">1212
&lt;/span>&lt;span class="lnt">1213
&lt;/span>&lt;span class="lnt">1214
&lt;/span>&lt;span class="lnt">1215
&lt;/span>&lt;span class="lnt">1216
&lt;/span>&lt;span class="lnt">1217
&lt;/span>&lt;span class="lnt">1218
&lt;/span>&lt;span class="lnt">1219
&lt;/span>&lt;span class="lnt">1220
&lt;/span>&lt;span class="lnt">1221
&lt;/span>&lt;span class="lnt">1222
&lt;/span>&lt;span class="lnt">1223
&lt;/span>&lt;span class="lnt">1224
&lt;/span>&lt;span class="lnt">1225
&lt;/span>&lt;span class="lnt">1226
&lt;/span>&lt;span class="lnt">1227
&lt;/span>&lt;span class="lnt">1228
&lt;/span>&lt;span class="lnt">1229
&lt;/span>&lt;span class="lnt">1230
&lt;/span>&lt;span class="lnt">1231
&lt;/span>&lt;span class="lnt">1232
&lt;/span>&lt;span class="lnt">1233
&lt;/span>&lt;span class="lnt">1234
&lt;/span>&lt;span class="lnt">1235
&lt;/span>&lt;span class="lnt">1236
&lt;/span>&lt;span class="lnt">1237
&lt;/span>&lt;span class="lnt">1238
&lt;/span>&lt;span class="lnt">1239
&lt;/span>&lt;span class="lnt">1240
&lt;/span>&lt;span class="lnt">1241
&lt;/span>&lt;span class="lnt">1242
&lt;/span>&lt;span class="lnt">1243
&lt;/span>&lt;span class="lnt">1244
&lt;/span>&lt;span class="lnt">1245
&lt;/span>&lt;span class="lnt">1246
&lt;/span>&lt;span class="lnt">1247
&lt;/span>&lt;span class="lnt">1248
&lt;/span>&lt;span class="lnt">1249
&lt;/span>&lt;span class="lnt">1250
&lt;/span>&lt;span class="lnt">1251
&lt;/span>&lt;span class="lnt">1252
&lt;/span>&lt;span class="lnt">1253
&lt;/span>&lt;span class="lnt">1254
&lt;/span>&lt;span class="lnt">1255
&lt;/span>&lt;span class="lnt">1256
&lt;/span>&lt;span class="lnt">1257
&lt;/span>&lt;span class="lnt">1258
&lt;/span>&lt;span class="lnt">1259
&lt;/span>&lt;span class="lnt">1260
&lt;/span>&lt;span class="lnt">1261
&lt;/span>&lt;span class="lnt">1262
&lt;/span>&lt;span class="lnt">1263
&lt;/span>&lt;span class="lnt">1264
&lt;/span>&lt;span class="lnt">1265
&lt;/span>&lt;span class="lnt">1266
&lt;/span>&lt;span class="lnt">1267
&lt;/span>&lt;span class="lnt">1268
&lt;/span>&lt;span class="lnt">1269
&lt;/span>&lt;span class="lnt">1270
&lt;/span>&lt;span class="lnt">1271
&lt;/span>&lt;span class="lnt">1272
&lt;/span>&lt;span class="lnt">1273
&lt;/span>&lt;span class="lnt">1274
&lt;/span>&lt;span class="lnt">1275
&lt;/span>&lt;span class="lnt">1276
&lt;/span>&lt;span class="lnt">1277
&lt;/span>&lt;span class="lnt">1278
&lt;/span>&lt;span class="lnt">1279
&lt;/span>&lt;span class="lnt">1280
&lt;/span>&lt;span class="lnt">1281
&lt;/span>&lt;span class="lnt">1282
&lt;/span>&lt;span class="lnt">1283
&lt;/span>&lt;span class="lnt">1284
&lt;/span>&lt;span class="lnt">1285
&lt;/span>&lt;span class="lnt">1286
&lt;/span>&lt;span class="lnt">1287
&lt;/span>&lt;span class="lnt">1288
&lt;/span>&lt;span class="lnt">1289
&lt;/span>&lt;span class="lnt">1290
&lt;/span>&lt;span class="lnt">1291
&lt;/span>&lt;span class="lnt">1292
&lt;/span>&lt;span class="lnt">1293
&lt;/span>&lt;span class="lnt">1294
&lt;/span>&lt;span class="lnt">1295
&lt;/span>&lt;span class="lnt">1296
&lt;/span>&lt;span class="lnt">1297
&lt;/span>&lt;span class="lnt">1298
&lt;/span>&lt;span class="lnt">1299
&lt;/span>&lt;span class="lnt">1300
&lt;/span>&lt;span class="lnt">1301
&lt;/span>&lt;span class="lnt">1302
&lt;/span>&lt;span class="lnt">1303
&lt;/span>&lt;span class="lnt">1304
&lt;/span>&lt;span class="lnt">1305
&lt;/span>&lt;span class="lnt">1306
&lt;/span>&lt;span class="lnt">1307
&lt;/span>&lt;span class="lnt">1308
&lt;/span>&lt;span class="lnt">1309
&lt;/span>&lt;span class="lnt">1310
&lt;/span>&lt;span class="lnt">1311
&lt;/span>&lt;span class="lnt">1312
&lt;/span>&lt;span class="lnt">1313
&lt;/span>&lt;span class="lnt">1314
&lt;/span>&lt;span class="lnt">1315
&lt;/span>&lt;span class="lnt">1316
&lt;/span>&lt;span class="lnt">1317
&lt;/span>&lt;span class="lnt">1318
&lt;/span>&lt;span class="lnt">1319
&lt;/span>&lt;span class="lnt">1320
&lt;/span>&lt;span class="lnt">1321
&lt;/span>&lt;span class="lnt">1322
&lt;/span>&lt;span class="lnt">1323
&lt;/span>&lt;span class="lnt">1324
&lt;/span>&lt;span class="lnt">1325
&lt;/span>&lt;span class="lnt">1326
&lt;/span>&lt;span class="lnt">1327
&lt;/span>&lt;span class="lnt">1328
&lt;/span>&lt;span class="lnt">1329
&lt;/span>&lt;span class="lnt">1330
&lt;/span>&lt;span class="lnt">1331
&lt;/span>&lt;span class="lnt">1332
&lt;/span>&lt;span class="lnt">1333
&lt;/span>&lt;span class="lnt">1334
&lt;/span>&lt;span class="lnt">1335
&lt;/span>&lt;span class="lnt">1336
&lt;/span>&lt;span class="lnt">1337
&lt;/span>&lt;span class="lnt">1338
&lt;/span>&lt;span class="lnt">1339
&lt;/span>&lt;span class="lnt">1340
&lt;/span>&lt;span class="lnt">1341
&lt;/span>&lt;span class="lnt">1342
&lt;/span>&lt;span class="lnt">1343
&lt;/span>&lt;span class="lnt">1344
&lt;/span>&lt;span class="lnt">1345
&lt;/span>&lt;span class="lnt">1346
&lt;/span>&lt;span class="lnt">1347
&lt;/span>&lt;span class="lnt">1348
&lt;/span>&lt;span class="lnt">1349
&lt;/span>&lt;span class="lnt">1350
&lt;/span>&lt;span class="lnt">1351
&lt;/span>&lt;span class="lnt">1352
&lt;/span>&lt;span class="lnt">1353
&lt;/span>&lt;span class="lnt">1354
&lt;/span>&lt;span class="lnt">1355
&lt;/span>&lt;span class="lnt">1356
&lt;/span>&lt;span class="lnt">1357
&lt;/span>&lt;span class="lnt">1358
&lt;/span>&lt;span class="lnt">1359
&lt;/span>&lt;span class="lnt">1360
&lt;/span>&lt;span class="lnt">1361
&lt;/span>&lt;span class="lnt">1362
&lt;/span>&lt;span class="lnt">1363
&lt;/span>&lt;span class="lnt">1364
&lt;/span>&lt;span class="lnt">1365
&lt;/span>&lt;span class="lnt">1366
&lt;/span>&lt;span class="lnt">1367
&lt;/span>&lt;span class="lnt">1368
&lt;/span>&lt;span class="lnt">1369
&lt;/span>&lt;span class="lnt">1370
&lt;/span>&lt;span class="lnt">1371
&lt;/span>&lt;span class="lnt">1372
&lt;/span>&lt;span class="lnt">1373
&lt;/span>&lt;span class="lnt">1374
&lt;/span>&lt;span class="lnt">1375
&lt;/span>&lt;span class="lnt">1376
&lt;/span>&lt;span class="lnt">1377
&lt;/span>&lt;span class="lnt">1378
&lt;/span>&lt;span class="lnt">1379
&lt;/span>&lt;span class="lnt">1380
&lt;/span>&lt;span class="lnt">1381
&lt;/span>&lt;span class="lnt">1382
&lt;/span>&lt;span class="lnt">1383
&lt;/span>&lt;span class="lnt">1384
&lt;/span>&lt;span class="lnt">1385
&lt;/span>&lt;span class="lnt">1386
&lt;/span>&lt;span class="lnt">1387
&lt;/span>&lt;span class="lnt">1388
&lt;/span>&lt;span class="lnt">1389
&lt;/span>&lt;span class="lnt">1390
&lt;/span>&lt;span class="lnt">1391
&lt;/span>&lt;span class="lnt">1392
&lt;/span>&lt;span class="lnt">1393
&lt;/span>&lt;span class="lnt">1394
&lt;/span>&lt;span class="lnt">1395
&lt;/span>&lt;span class="lnt">1396
&lt;/span>&lt;span class="lnt">1397
&lt;/span>&lt;span class="lnt">1398
&lt;/span>&lt;span class="lnt">1399
&lt;/span>&lt;span class="lnt">1400
&lt;/span>&lt;span class="lnt">1401
&lt;/span>&lt;span class="lnt">1402
&lt;/span>&lt;span class="lnt">1403
&lt;/span>&lt;span class="lnt">1404
&lt;/span>&lt;span class="lnt">1405
&lt;/span>&lt;span class="lnt">1406
&lt;/span>&lt;span class="lnt">1407
&lt;/span>&lt;span class="lnt">1408
&lt;/span>&lt;span class="lnt">1409
&lt;/span>&lt;span class="lnt">1410
&lt;/span>&lt;span class="lnt">1411
&lt;/span>&lt;span class="lnt">1412
&lt;/span>&lt;span class="lnt">1413
&lt;/span>&lt;span class="lnt">1414
&lt;/span>&lt;span class="lnt">1415
&lt;/span>&lt;span class="lnt">1416
&lt;/span>&lt;span class="lnt">1417
&lt;/span>&lt;span class="lnt">1418
&lt;/span>&lt;span class="lnt">1419
&lt;/span>&lt;span class="lnt">1420
&lt;/span>&lt;span class="lnt">1421
&lt;/span>&lt;span class="lnt">1422
&lt;/span>&lt;span class="lnt">1423
&lt;/span>&lt;span class="lnt">1424
&lt;/span>&lt;span class="lnt">1425
&lt;/span>&lt;span class="lnt">1426
&lt;/span>&lt;span class="lnt">1427
&lt;/span>&lt;span class="lnt">1428
&lt;/span>&lt;span class="lnt">1429
&lt;/span>&lt;span class="lnt">1430
&lt;/span>&lt;span class="lnt">1431
&lt;/span>&lt;span class="lnt">1432
&lt;/span>&lt;span class="lnt">1433
&lt;/span>&lt;span class="lnt">1434
&lt;/span>&lt;span class="lnt">1435
&lt;/span>&lt;span class="lnt">1436
&lt;/span>&lt;span class="lnt">1437
&lt;/span>&lt;span class="lnt">1438
&lt;/span>&lt;span class="lnt">1439
&lt;/span>&lt;span class="lnt">1440
&lt;/span>&lt;span class="lnt">1441
&lt;/span>&lt;span class="lnt">1442
&lt;/span>&lt;span class="lnt">1443
&lt;/span>&lt;span class="lnt">1444
&lt;/span>&lt;span class="lnt">1445
&lt;/span>&lt;span class="lnt">1446
&lt;/span>&lt;span class="lnt">1447
&lt;/span>&lt;span class="lnt">1448
&lt;/span>&lt;span class="lnt">1449
&lt;/span>&lt;span class="lnt">1450
&lt;/span>&lt;span class="lnt">1451
&lt;/span>&lt;span class="lnt">1452
&lt;/span>&lt;span class="lnt">1453
&lt;/span>&lt;span class="lnt">1454
&lt;/span>&lt;span class="lnt">1455
&lt;/span>&lt;span class="lnt">1456
&lt;/span>&lt;span class="lnt">1457
&lt;/span>&lt;span class="lnt">1458
&lt;/span>&lt;span class="lnt">1459
&lt;/span>&lt;span class="lnt">1460
&lt;/span>&lt;span class="lnt">1461
&lt;/span>&lt;span class="lnt">1462
&lt;/span>&lt;span class="lnt">1463
&lt;/span>&lt;span class="lnt">1464
&lt;/span>&lt;span class="lnt">1465
&lt;/span>&lt;span class="lnt">1466
&lt;/span>&lt;span class="lnt">1467
&lt;/span>&lt;span class="lnt">1468
&lt;/span>&lt;span class="lnt">1469
&lt;/span>&lt;span class="lnt">1470
&lt;/span>&lt;span class="lnt">1471
&lt;/span>&lt;span class="lnt">1472
&lt;/span>&lt;span class="lnt">1473
&lt;/span>&lt;span class="lnt">1474
&lt;/span>&lt;span class="lnt">1475
&lt;/span>&lt;span class="lnt">1476
&lt;/span>&lt;span class="lnt">1477
&lt;/span>&lt;span class="lnt">1478
&lt;/span>&lt;span class="lnt">1479
&lt;/span>&lt;span class="lnt">1480
&lt;/span>&lt;span class="lnt">1481
&lt;/span>&lt;span class="lnt">1482
&lt;/span>&lt;span class="lnt">1483
&lt;/span>&lt;span class="lnt">1484
&lt;/span>&lt;span class="lnt">1485
&lt;/span>&lt;span class="lnt">1486
&lt;/span>&lt;span class="lnt">1487
&lt;/span>&lt;span class="lnt">1488
&lt;/span>&lt;span class="lnt">1489
&lt;/span>&lt;span class="lnt">1490
&lt;/span>&lt;span class="lnt">1491
&lt;/span>&lt;span class="lnt">1492
&lt;/span>&lt;span class="lnt">1493
&lt;/span>&lt;span class="lnt">1494
&lt;/span>&lt;span class="lnt">1495
&lt;/span>&lt;span class="lnt">1496
&lt;/span>&lt;span class="lnt">1497
&lt;/span>&lt;span class="lnt">1498
&lt;/span>&lt;span class="lnt">1499
&lt;/span>&lt;span class="lnt">1500
&lt;/span>&lt;span class="lnt">1501
&lt;/span>&lt;span class="lnt">1502
&lt;/span>&lt;span class="lnt">1503
&lt;/span>&lt;span class="lnt">1504
&lt;/span>&lt;span class="lnt">1505
&lt;/span>&lt;span class="lnt">1506
&lt;/span>&lt;span class="lnt">1507
&lt;/span>&lt;span class="lnt">1508
&lt;/span>&lt;span class="lnt">1509
&lt;/span>&lt;span class="lnt">1510
&lt;/span>&lt;span class="lnt">1511
&lt;/span>&lt;span class="lnt">1512
&lt;/span>&lt;span class="lnt">1513
&lt;/span>&lt;span class="lnt">1514
&lt;/span>&lt;span class="lnt">1515
&lt;/span>&lt;span class="lnt">1516
&lt;/span>&lt;span class="lnt">1517
&lt;/span>&lt;span class="lnt">1518
&lt;/span>&lt;span class="lnt">1519
&lt;/span>&lt;span class="lnt">1520
&lt;/span>&lt;span class="lnt">1521
&lt;/span>&lt;span class="lnt">1522
&lt;/span>&lt;span class="lnt">1523
&lt;/span>&lt;span class="lnt">1524
&lt;/span>&lt;span class="lnt">1525
&lt;/span>&lt;span class="lnt">1526
&lt;/span>&lt;span class="lnt">1527
&lt;/span>&lt;span class="lnt">1528
&lt;/span>&lt;span class="lnt">1529
&lt;/span>&lt;span class="lnt">1530
&lt;/span>&lt;span class="lnt">1531
&lt;/span>&lt;span class="lnt">1532
&lt;/span>&lt;span class="lnt">1533
&lt;/span>&lt;span class="lnt">1534
&lt;/span>&lt;span class="lnt">1535
&lt;/span>&lt;span class="lnt">1536
&lt;/span>&lt;span class="lnt">1537
&lt;/span>&lt;span class="lnt">1538
&lt;/span>&lt;span class="lnt">1539
&lt;/span>&lt;span class="lnt">1540
&lt;/span>&lt;span class="lnt">1541
&lt;/span>&lt;span class="lnt">1542
&lt;/span>&lt;span class="lnt">1543
&lt;/span>&lt;span class="lnt">1544
&lt;/span>&lt;span class="lnt">1545
&lt;/span>&lt;span class="lnt">1546
&lt;/span>&lt;span class="lnt">1547
&lt;/span>&lt;span class="lnt">1548
&lt;/span>&lt;span class="lnt">1549
&lt;/span>&lt;span class="lnt">1550
&lt;/span>&lt;span class="lnt">1551
&lt;/span>&lt;span class="lnt">1552
&lt;/span>&lt;span class="lnt">1553
&lt;/span>&lt;span class="lnt">1554
&lt;/span>&lt;span class="lnt">1555
&lt;/span>&lt;span class="lnt">1556
&lt;/span>&lt;span class="lnt">1557
&lt;/span>&lt;span class="lnt">1558
&lt;/span>&lt;span class="lnt">1559
&lt;/span>&lt;span class="lnt">1560
&lt;/span>&lt;span class="lnt">1561
&lt;/span>&lt;span class="lnt">1562
&lt;/span>&lt;span class="lnt">1563
&lt;/span>&lt;span class="lnt">1564
&lt;/span>&lt;span class="lnt">1565
&lt;/span>&lt;span class="lnt">1566
&lt;/span>&lt;span class="lnt">1567
&lt;/span>&lt;span class="lnt">1568
&lt;/span>&lt;span class="lnt">1569
&lt;/span>&lt;span class="lnt">1570
&lt;/span>&lt;span class="lnt">1571
&lt;/span>&lt;span class="lnt">1572
&lt;/span>&lt;span class="lnt">1573
&lt;/span>&lt;span class="lnt">1574
&lt;/span>&lt;span class="lnt">1575
&lt;/span>&lt;span class="lnt">1576
&lt;/span>&lt;span class="lnt">1577
&lt;/span>&lt;span class="lnt">1578
&lt;/span>&lt;span class="lnt">1579
&lt;/span>&lt;span class="lnt">1580
&lt;/span>&lt;span class="lnt">1581
&lt;/span>&lt;span class="lnt">1582
&lt;/span>&lt;span class="lnt">1583
&lt;/span>&lt;span class="lnt">1584
&lt;/span>&lt;span class="lnt">1585
&lt;/span>&lt;span class="lnt">1586
&lt;/span>&lt;span class="lnt">1587
&lt;/span>&lt;span class="lnt">1588
&lt;/span>&lt;span class="lnt">1589
&lt;/span>&lt;span class="lnt">1590
&lt;/span>&lt;span class="lnt">1591
&lt;/span>&lt;span class="lnt">1592
&lt;/span>&lt;span class="lnt">1593
&lt;/span>&lt;span class="lnt">1594
&lt;/span>&lt;span class="lnt">1595
&lt;/span>&lt;span class="lnt">1596
&lt;/span>&lt;span class="lnt">1597
&lt;/span>&lt;span class="lnt">1598
&lt;/span>&lt;span class="lnt">1599
&lt;/span>&lt;span class="lnt">1600
&lt;/span>&lt;span class="lnt">1601
&lt;/span>&lt;span class="lnt">1602
&lt;/span>&lt;span class="lnt">1603
&lt;/span>&lt;span class="lnt">1604
&lt;/span>&lt;span class="lnt">1605
&lt;/span>&lt;span class="lnt">1606
&lt;/span>&lt;span class="lnt">1607
&lt;/span>&lt;span class="lnt">1608
&lt;/span>&lt;span class="lnt">1609
&lt;/span>&lt;span class="lnt">1610
&lt;/span>&lt;span class="lnt">1611
&lt;/span>&lt;span class="lnt">1612
&lt;/span>&lt;span class="lnt">1613
&lt;/span>&lt;span class="lnt">1614
&lt;/span>&lt;span class="lnt">1615
&lt;/span>&lt;span class="lnt">1616
&lt;/span>&lt;span class="lnt">1617
&lt;/span>&lt;span class="lnt">1618
&lt;/span>&lt;span class="lnt">1619
&lt;/span>&lt;span class="lnt">1620
&lt;/span>&lt;span class="lnt">1621
&lt;/span>&lt;span class="lnt">1622
&lt;/span>&lt;span class="lnt">1623
&lt;/span>&lt;span class="lnt">1624
&lt;/span>&lt;span class="lnt">1625
&lt;/span>&lt;span class="lnt">1626
&lt;/span>&lt;span class="lnt">1627
&lt;/span>&lt;span class="lnt">1628
&lt;/span>&lt;span class="lnt">1629
&lt;/span>&lt;span class="lnt">1630
&lt;/span>&lt;span class="lnt">1631
&lt;/span>&lt;span class="lnt">1632
&lt;/span>&lt;span class="lnt">1633
&lt;/span>&lt;span class="lnt">1634
&lt;/span>&lt;span class="lnt">1635
&lt;/span>&lt;span class="lnt">1636
&lt;/span>&lt;span class="lnt">1637
&lt;/span>&lt;span class="lnt">1638
&lt;/span>&lt;span class="lnt">1639
&lt;/span>&lt;span class="lnt">1640
&lt;/span>&lt;span class="lnt">1641
&lt;/span>&lt;span class="lnt">1642
&lt;/span>&lt;span class="lnt">1643
&lt;/span>&lt;span class="lnt">1644
&lt;/span>&lt;span class="lnt">1645
&lt;/span>&lt;span class="lnt">1646
&lt;/span>&lt;span class="lnt">1647
&lt;/span>&lt;span class="lnt">1648
&lt;/span>&lt;span class="lnt">1649
&lt;/span>&lt;span class="lnt">1650
&lt;/span>&lt;span class="lnt">1651
&lt;/span>&lt;span class="lnt">1652
&lt;/span>&lt;span class="lnt">1653
&lt;/span>&lt;span class="lnt">1654
&lt;/span>&lt;span class="lnt">1655
&lt;/span>&lt;span class="lnt">1656
&lt;/span>&lt;span class="lnt">1657
&lt;/span>&lt;span class="lnt">1658
&lt;/span>&lt;span class="lnt">1659
&lt;/span>&lt;span class="lnt">1660
&lt;/span>&lt;span class="lnt">1661
&lt;/span>&lt;span class="lnt">1662
&lt;/span>&lt;span class="lnt">1663
&lt;/span>&lt;span class="lnt">1664
&lt;/span>&lt;span class="lnt">1665
&lt;/span>&lt;span class="lnt">1666
&lt;/span>&lt;span class="lnt">1667
&lt;/span>&lt;span class="lnt">1668
&lt;/span>&lt;span class="lnt">1669
&lt;/span>&lt;span class="lnt">1670
&lt;/span>&lt;span class="lnt">1671
&lt;/span>&lt;span class="lnt">1672
&lt;/span>&lt;span class="lnt">1673
&lt;/span>&lt;span class="lnt">1674
&lt;/span>&lt;span class="lnt">1675
&lt;/span>&lt;span class="lnt">1676
&lt;/span>&lt;span class="lnt">1677
&lt;/span>&lt;span class="lnt">1678
&lt;/span>&lt;span class="lnt">1679
&lt;/span>&lt;span class="lnt">1680
&lt;/span>&lt;span class="lnt">1681
&lt;/span>&lt;span class="lnt">1682
&lt;/span>&lt;span class="lnt">1683
&lt;/span>&lt;span class="lnt">1684
&lt;/span>&lt;span class="lnt">1685
&lt;/span>&lt;span class="lnt">1686
&lt;/span>&lt;span class="lnt">1687
&lt;/span>&lt;span class="lnt">1688
&lt;/span>&lt;span class="lnt">1689
&lt;/span>&lt;span class="lnt">1690
&lt;/span>&lt;span class="lnt">1691
&lt;/span>&lt;span class="lnt">1692
&lt;/span>&lt;span class="lnt">1693
&lt;/span>&lt;span class="lnt">1694
&lt;/span>&lt;span class="lnt">1695
&lt;/span>&lt;span class="lnt">1696
&lt;/span>&lt;span class="lnt">1697
&lt;/span>&lt;span class="lnt">1698
&lt;/span>&lt;span class="lnt">1699
&lt;/span>&lt;span class="lnt">1700
&lt;/span>&lt;span class="lnt">1701
&lt;/span>&lt;span class="lnt">1702
&lt;/span>&lt;span class="lnt">1703
&lt;/span>&lt;span class="lnt">1704
&lt;/span>&lt;span class="lnt">1705
&lt;/span>&lt;span class="lnt">1706
&lt;/span>&lt;span class="lnt">1707
&lt;/span>&lt;span class="lnt">1708
&lt;/span>&lt;span class="lnt">1709
&lt;/span>&lt;span class="lnt">1710
&lt;/span>&lt;span class="lnt">1711
&lt;/span>&lt;span class="lnt">1712
&lt;/span>&lt;span class="lnt">1713
&lt;/span>&lt;span class="lnt">1714
&lt;/span>&lt;span class="lnt">1715
&lt;/span>&lt;span class="lnt">1716
&lt;/span>&lt;span class="lnt">1717
&lt;/span>&lt;span class="lnt">1718
&lt;/span>&lt;span class="lnt">1719
&lt;/span>&lt;span class="lnt">1720
&lt;/span>&lt;span class="lnt">1721
&lt;/span>&lt;span class="lnt">1722
&lt;/span>&lt;span class="lnt">1723
&lt;/span>&lt;span class="lnt">1724
&lt;/span>&lt;span class="lnt">1725
&lt;/span>&lt;span class="lnt">1726
&lt;/span>&lt;span class="lnt">1727
&lt;/span>&lt;span class="lnt">1728
&lt;/span>&lt;span class="lnt">1729
&lt;/span>&lt;span class="lnt">1730
&lt;/span>&lt;span class="lnt">1731
&lt;/span>&lt;span class="lnt">1732
&lt;/span>&lt;span class="lnt">1733
&lt;/span>&lt;span class="lnt">1734
&lt;/span>&lt;span class="lnt">1735
&lt;/span>&lt;span class="lnt">1736
&lt;/span>&lt;span class="lnt">1737
&lt;/span>&lt;span class="lnt">1738
&lt;/span>&lt;span class="lnt">1739
&lt;/span>&lt;span class="lnt">1740
&lt;/span>&lt;span class="lnt">1741
&lt;/span>&lt;span class="lnt">1742
&lt;/span>&lt;span class="lnt">1743
&lt;/span>&lt;span class="lnt">1744
&lt;/span>&lt;span class="lnt">1745
&lt;/span>&lt;span class="lnt">1746
&lt;/span>&lt;span class="lnt">1747
&lt;/span>&lt;span class="lnt">1748
&lt;/span>&lt;span class="lnt">1749
&lt;/span>&lt;span class="lnt">1750
&lt;/span>&lt;span class="lnt">1751
&lt;/span>&lt;span class="lnt">1752
&lt;/span>&lt;span class="lnt">1753
&lt;/span>&lt;span class="lnt">1754
&lt;/span>&lt;span class="lnt">1755
&lt;/span>&lt;span class="lnt">1756
&lt;/span>&lt;span class="lnt">1757
&lt;/span>&lt;span class="lnt">1758
&lt;/span>&lt;span class="lnt">1759
&lt;/span>&lt;span class="lnt">1760
&lt;/span>&lt;span class="lnt">1761
&lt;/span>&lt;span class="lnt">1762
&lt;/span>&lt;span class="lnt">1763
&lt;/span>&lt;span class="lnt">1764
&lt;/span>&lt;span class="lnt">1765
&lt;/span>&lt;span class="lnt">1766
&lt;/span>&lt;span class="lnt">1767
&lt;/span>&lt;span class="lnt">1768
&lt;/span>&lt;span class="lnt">1769
&lt;/span>&lt;span class="lnt">1770
&lt;/span>&lt;span class="lnt">1771
&lt;/span>&lt;span class="lnt">1772
&lt;/span>&lt;span class="lnt">1773
&lt;/span>&lt;span class="lnt">1774
&lt;/span>&lt;span class="lnt">1775
&lt;/span>&lt;span class="lnt">1776
&lt;/span>&lt;span class="lnt">1777
&lt;/span>&lt;span class="lnt">1778
&lt;/span>&lt;span class="lnt">1779
&lt;/span>&lt;span class="lnt">1780
&lt;/span>&lt;span class="lnt">1781
&lt;/span>&lt;span class="lnt">1782
&lt;/span>&lt;span class="lnt">1783
&lt;/span>&lt;span class="lnt">1784
&lt;/span>&lt;span class="lnt">1785
&lt;/span>&lt;span class="lnt">1786
&lt;/span>&lt;span class="lnt">1787
&lt;/span>&lt;span class="lnt">1788
&lt;/span>&lt;span class="lnt">1789
&lt;/span>&lt;span class="lnt">1790
&lt;/span>&lt;span class="lnt">1791
&lt;/span>&lt;span class="lnt">1792
&lt;/span>&lt;span class="lnt">1793
&lt;/span>&lt;span class="lnt">1794
&lt;/span>&lt;span class="lnt">1795
&lt;/span>&lt;span class="lnt">1796
&lt;/span>&lt;span class="lnt">1797
&lt;/span>&lt;span class="lnt">1798
&lt;/span>&lt;span class="lnt">1799
&lt;/span>&lt;span class="lnt">1800
&lt;/span>&lt;span class="lnt">1801
&lt;/span>&lt;span class="lnt">1802
&lt;/span>&lt;span class="lnt">1803
&lt;/span>&lt;span class="lnt">1804
&lt;/span>&lt;span class="lnt">1805
&lt;/span>&lt;span class="lnt">1806
&lt;/span>&lt;span class="lnt">1807
&lt;/span>&lt;span class="lnt">1808
&lt;/span>&lt;span class="lnt">1809
&lt;/span>&lt;span class="lnt">1810
&lt;/span>&lt;span class="lnt">1811
&lt;/span>&lt;span class="lnt">1812
&lt;/span>&lt;span class="lnt">1813
&lt;/span>&lt;span class="lnt">1814
&lt;/span>&lt;span class="lnt">1815
&lt;/span>&lt;span class="lnt">1816
&lt;/span>&lt;span class="lnt">1817
&lt;/span>&lt;span class="lnt">1818
&lt;/span>&lt;span class="lnt">1819
&lt;/span>&lt;span class="lnt">1820
&lt;/span>&lt;span class="lnt">1821
&lt;/span>&lt;span class="lnt">1822
&lt;/span>&lt;span class="lnt">1823
&lt;/span>&lt;span class="lnt">1824
&lt;/span>&lt;span class="lnt">1825
&lt;/span>&lt;span class="lnt">1826
&lt;/span>&lt;span class="lnt">1827
&lt;/span>&lt;span class="lnt">1828
&lt;/span>&lt;span class="lnt">1829
&lt;/span>&lt;span class="lnt">1830
&lt;/span>&lt;span class="lnt">1831
&lt;/span>&lt;span class="lnt">1832
&lt;/span>&lt;span class="lnt">1833
&lt;/span>&lt;span class="lnt">1834
&lt;/span>&lt;span class="lnt">1835
&lt;/span>&lt;span class="lnt">1836
&lt;/span>&lt;span class="lnt">1837
&lt;/span>&lt;span class="lnt">1838
&lt;/span>&lt;span class="lnt">1839
&lt;/span>&lt;span class="lnt">1840
&lt;/span>&lt;span class="lnt">1841
&lt;/span>&lt;span class="lnt">1842
&lt;/span>&lt;span class="lnt">1843
&lt;/span>&lt;span class="lnt">1844
&lt;/span>&lt;span class="lnt">1845
&lt;/span>&lt;span class="lnt">1846
&lt;/span>&lt;span class="lnt">1847
&lt;/span>&lt;span class="lnt">1848
&lt;/span>&lt;span class="lnt">1849
&lt;/span>&lt;span class="lnt">1850
&lt;/span>&lt;span class="lnt">1851
&lt;/span>&lt;span class="lnt">1852
&lt;/span>&lt;span class="lnt">1853
&lt;/span>&lt;span class="lnt">1854
&lt;/span>&lt;span class="lnt">1855
&lt;/span>&lt;span class="lnt">1856
&lt;/span>&lt;span class="lnt">1857
&lt;/span>&lt;span class="lnt">1858
&lt;/span>&lt;span class="lnt">1859
&lt;/span>&lt;span class="lnt">1860
&lt;/span>&lt;span class="lnt">1861
&lt;/span>&lt;span class="lnt">1862
&lt;/span>&lt;span class="lnt">1863
&lt;/span>&lt;span class="lnt">1864
&lt;/span>&lt;span class="lnt">1865
&lt;/span>&lt;span class="lnt">1866
&lt;/span>&lt;span class="lnt">1867
&lt;/span>&lt;span class="lnt">1868
&lt;/span>&lt;span class="lnt">1869
&lt;/span>&lt;span class="lnt">1870
&lt;/span>&lt;span class="lnt">1871
&lt;/span>&lt;span class="lnt">1872
&lt;/span>&lt;span class="lnt">1873
&lt;/span>&lt;span class="lnt">1874
&lt;/span>&lt;span class="lnt">1875
&lt;/span>&lt;span class="lnt">1876
&lt;/span>&lt;span class="lnt">1877
&lt;/span>&lt;span class="lnt">1878
&lt;/span>&lt;span class="lnt">1879
&lt;/span>&lt;span class="lnt">1880
&lt;/span>&lt;span class="lnt">1881
&lt;/span>&lt;span class="lnt">1882
&lt;/span>&lt;span class="lnt">1883
&lt;/span>&lt;span class="lnt">1884
&lt;/span>&lt;span class="lnt">1885
&lt;/span>&lt;span class="lnt">1886
&lt;/span>&lt;span class="lnt">1887
&lt;/span>&lt;span class="lnt">1888
&lt;/span>&lt;span class="lnt">1889
&lt;/span>&lt;span class="lnt">1890
&lt;/span>&lt;span class="lnt">1891
&lt;/span>&lt;span class="lnt">1892
&lt;/span>&lt;span class="lnt">1893
&lt;/span>&lt;span class="lnt">1894
&lt;/span>&lt;span class="lnt">1895
&lt;/span>&lt;span class="lnt">1896
&lt;/span>&lt;span class="lnt">1897
&lt;/span>&lt;span class="lnt">1898
&lt;/span>&lt;span class="lnt">1899
&lt;/span>&lt;span class="lnt">1900
&lt;/span>&lt;span class="lnt">1901
&lt;/span>&lt;span class="lnt">1902
&lt;/span>&lt;span class="lnt">1903
&lt;/span>&lt;span class="lnt">1904
&lt;/span>&lt;span class="lnt">1905
&lt;/span>&lt;span class="lnt">1906
&lt;/span>&lt;span class="lnt">1907
&lt;/span>&lt;span class="lnt">1908
&lt;/span>&lt;span class="lnt">1909
&lt;/span>&lt;span class="lnt">1910
&lt;/span>&lt;span class="lnt">1911
&lt;/span>&lt;span class="lnt">1912
&lt;/span>&lt;span class="lnt">1913
&lt;/span>&lt;span class="lnt">1914
&lt;/span>&lt;span class="lnt">1915
&lt;/span>&lt;span class="lnt">1916
&lt;/span>&lt;span class="lnt">1917
&lt;/span>&lt;span class="lnt">1918
&lt;/span>&lt;span class="lnt">1919
&lt;/span>&lt;span class="lnt">1920
&lt;/span>&lt;span class="lnt">1921
&lt;/span>&lt;span class="lnt">1922
&lt;/span>&lt;span class="lnt">1923
&lt;/span>&lt;span class="lnt">1924
&lt;/span>&lt;span class="lnt">1925
&lt;/span>&lt;span class="lnt">1926
&lt;/span>&lt;span class="lnt">1927
&lt;/span>&lt;span class="lnt">1928
&lt;/span>&lt;span class="lnt">1929
&lt;/span>&lt;span class="lnt">1930
&lt;/span>&lt;span class="lnt">1931
&lt;/span>&lt;span class="lnt">1932
&lt;/span>&lt;span class="lnt">1933
&lt;/span>&lt;span class="lnt">1934
&lt;/span>&lt;span class="lnt">1935
&lt;/span>&lt;span class="lnt">1936
&lt;/span>&lt;span class="lnt">1937
&lt;/span>&lt;span class="lnt">1938
&lt;/span>&lt;span class="lnt">1939
&lt;/span>&lt;span class="lnt">1940
&lt;/span>&lt;span class="lnt">1941
&lt;/span>&lt;span class="lnt">1942
&lt;/span>&lt;span class="lnt">1943
&lt;/span>&lt;span class="lnt">1944
&lt;/span>&lt;span class="lnt">1945
&lt;/span>&lt;span class="lnt">1946
&lt;/span>&lt;span class="lnt">1947
&lt;/span>&lt;span class="lnt">1948
&lt;/span>&lt;span class="lnt">1949
&lt;/span>&lt;span class="lnt">1950
&lt;/span>&lt;span class="lnt">1951
&lt;/span>&lt;span class="lnt">1952
&lt;/span>&lt;span class="lnt">1953
&lt;/span>&lt;span class="lnt">1954
&lt;/span>&lt;span class="lnt">1955
&lt;/span>&lt;span class="lnt">1956
&lt;/span>&lt;span class="lnt">1957
&lt;/span>&lt;span class="lnt">1958
&lt;/span>&lt;span class="lnt">1959
&lt;/span>&lt;span class="lnt">1960
&lt;/span>&lt;span class="lnt">1961
&lt;/span>&lt;span class="lnt">1962
&lt;/span>&lt;span class="lnt">1963
&lt;/span>&lt;span class="lnt">1964
&lt;/span>&lt;span class="lnt">1965
&lt;/span>&lt;span class="lnt">1966
&lt;/span>&lt;span class="lnt">1967
&lt;/span>&lt;span class="lnt">1968
&lt;/span>&lt;span class="lnt">1969
&lt;/span>&lt;span class="lnt">1970
&lt;/span>&lt;span class="lnt">1971
&lt;/span>&lt;span class="lnt">1972
&lt;/span>&lt;span class="lnt">1973
&lt;/span>&lt;span class="lnt">1974
&lt;/span>&lt;span class="lnt">1975
&lt;/span>&lt;span class="lnt">1976
&lt;/span>&lt;span class="lnt">1977
&lt;/span>&lt;span class="lnt">1978
&lt;/span>&lt;span class="lnt">1979
&lt;/span>&lt;span class="lnt">1980
&lt;/span>&lt;span class="lnt">1981
&lt;/span>&lt;span class="lnt">1982
&lt;/span>&lt;span class="lnt">1983
&lt;/span>&lt;span class="lnt">1984
&lt;/span>&lt;span class="lnt">1985
&lt;/span>&lt;span class="lnt">1986
&lt;/span>&lt;span class="lnt">1987
&lt;/span>&lt;span class="lnt">1988
&lt;/span>&lt;span class="lnt">1989
&lt;/span>&lt;span class="lnt">1990
&lt;/span>&lt;span class="lnt">1991
&lt;/span>&lt;span class="lnt">1992
&lt;/span>&lt;span class="lnt">1993
&lt;/span>&lt;span class="lnt">1994
&lt;/span>&lt;span class="lnt">1995
&lt;/span>&lt;span class="lnt">1996
&lt;/span>&lt;span class="lnt">1997
&lt;/span>&lt;span class="lnt">1998
&lt;/span>&lt;span class="lnt">1999
&lt;/span>&lt;span class="lnt">2000
&lt;/span>&lt;span class="lnt">2001
&lt;/span>&lt;span class="lnt">2002
&lt;/span>&lt;span class="lnt">2003
&lt;/span>&lt;span class="lnt">2004
&lt;/span>&lt;span class="lnt">2005
&lt;/span>&lt;span class="lnt">2006
&lt;/span>&lt;span class="lnt">2007
&lt;/span>&lt;span class="lnt">2008
&lt;/span>&lt;span class="lnt">2009
&lt;/span>&lt;span class="lnt">2010
&lt;/span>&lt;span class="lnt">2011
&lt;/span>&lt;span class="lnt">2012
&lt;/span>&lt;span class="lnt">2013
&lt;/span>&lt;span class="lnt">2014
&lt;/span>&lt;span class="lnt">2015
&lt;/span>&lt;span class="lnt">2016
&lt;/span>&lt;span class="lnt">2017
&lt;/span>&lt;span class="lnt">2018
&lt;/span>&lt;span class="lnt">2019
&lt;/span>&lt;span class="lnt">2020
&lt;/span>&lt;span class="lnt">2021
&lt;/span>&lt;span class="lnt">2022
&lt;/span>&lt;span class="lnt">2023
&lt;/span>&lt;span class="lnt">2024
&lt;/span>&lt;span class="lnt">2025
&lt;/span>&lt;span class="lnt">2026
&lt;/span>&lt;span class="lnt">2027
&lt;/span>&lt;span class="lnt">2028
&lt;/span>&lt;span class="lnt">2029
&lt;/span>&lt;span class="lnt">2030
&lt;/span>&lt;span class="lnt">2031
&lt;/span>&lt;span class="lnt">2032
&lt;/span>&lt;span class="lnt">2033
&lt;/span>&lt;span class="lnt">2034
&lt;/span>&lt;span class="lnt">2035
&lt;/span>&lt;span class="lnt">2036
&lt;/span>&lt;span class="lnt">2037
&lt;/span>&lt;span class="lnt">2038
&lt;/span>&lt;span class="lnt">2039
&lt;/span>&lt;span class="lnt">2040
&lt;/span>&lt;span class="lnt">2041
&lt;/span>&lt;span class="lnt">2042
&lt;/span>&lt;span class="lnt">2043
&lt;/span>&lt;span class="lnt">2044
&lt;/span>&lt;span class="lnt">2045
&lt;/span>&lt;span class="lnt">2046
&lt;/span>&lt;span class="lnt">2047
&lt;/span>&lt;span class="lnt">2048
&lt;/span>&lt;span class="lnt">2049
&lt;/span>&lt;span class="lnt">2050
&lt;/span>&lt;span class="lnt">2051
&lt;/span>&lt;span class="lnt">2052
&lt;/span>&lt;span class="lnt">2053
&lt;/span>&lt;span class="lnt">2054
&lt;/span>&lt;span class="lnt">2055
&lt;/span>&lt;span class="lnt">2056
&lt;/span>&lt;span class="lnt">2057
&lt;/span>&lt;span class="lnt">2058
&lt;/span>&lt;span class="lnt">2059
&lt;/span>&lt;span class="lnt">2060
&lt;/span>&lt;span class="lnt">2061
&lt;/span>&lt;span class="lnt">2062
&lt;/span>&lt;span class="lnt">2063
&lt;/span>&lt;span class="lnt">2064
&lt;/span>&lt;span class="lnt">2065
&lt;/span>&lt;span class="lnt">2066
&lt;/span>&lt;span class="lnt">2067
&lt;/span>&lt;span class="lnt">2068
&lt;/span>&lt;span class="lnt">2069
&lt;/span>&lt;span class="lnt">2070
&lt;/span>&lt;span class="lnt">2071
&lt;/span>&lt;span class="lnt">2072
&lt;/span>&lt;span class="lnt">2073
&lt;/span>&lt;span class="lnt">2074
&lt;/span>&lt;span class="lnt">2075
&lt;/span>&lt;span class="lnt">2076
&lt;/span>&lt;span class="lnt">2077
&lt;/span>&lt;span class="lnt">2078
&lt;/span>&lt;span class="lnt">2079
&lt;/span>&lt;span class="lnt">2080
&lt;/span>&lt;span class="lnt">2081
&lt;/span>&lt;span class="lnt">2082
&lt;/span>&lt;span class="lnt">2083
&lt;/span>&lt;span class="lnt">2084
&lt;/span>&lt;span class="lnt">2085
&lt;/span>&lt;span class="lnt">2086
&lt;/span>&lt;span class="lnt">2087
&lt;/span>&lt;span class="lnt">2088
&lt;/span>&lt;span class="lnt">2089
&lt;/span>&lt;span class="lnt">2090
&lt;/span>&lt;span class="lnt">2091
&lt;/span>&lt;span class="lnt">2092
&lt;/span>&lt;span class="lnt">2093
&lt;/span>&lt;span class="lnt">2094
&lt;/span>&lt;span class="lnt">2095
&lt;/span>&lt;span class="lnt">2096
&lt;/span>&lt;span class="lnt">2097
&lt;/span>&lt;span class="lnt">2098
&lt;/span>&lt;span class="lnt">2099
&lt;/span>&lt;span class="lnt">2100
&lt;/span>&lt;span class="lnt">2101
&lt;/span>&lt;span class="lnt">2102
&lt;/span>&lt;span class="lnt">2103
&lt;/span>&lt;span class="lnt">2104
&lt;/span>&lt;span class="lnt">2105
&lt;/span>&lt;span class="lnt">2106
&lt;/span>&lt;span class="lnt">2107
&lt;/span>&lt;span class="lnt">2108
&lt;/span>&lt;span class="lnt">2109
&lt;/span>&lt;span class="lnt">2110
&lt;/span>&lt;span class="lnt">2111
&lt;/span>&lt;span class="lnt">2112
&lt;/span>&lt;span class="lnt">2113
&lt;/span>&lt;span class="lnt">2114
&lt;/span>&lt;span class="lnt">2115
&lt;/span>&lt;span class="lnt">2116
&lt;/span>&lt;span class="lnt">2117
&lt;/span>&lt;span class="lnt">2118
&lt;/span>&lt;span class="lnt">2119
&lt;/span>&lt;span class="lnt">2120
&lt;/span>&lt;span class="lnt">2121
&lt;/span>&lt;span class="lnt">2122
&lt;/span>&lt;span class="lnt">2123
&lt;/span>&lt;span class="lnt">2124
&lt;/span>&lt;span class="lnt">2125
&lt;/span>&lt;span class="lnt">2126
&lt;/span>&lt;span class="lnt">2127
&lt;/span>&lt;span class="lnt">2128
&lt;/span>&lt;span class="lnt">2129
&lt;/span>&lt;span class="lnt">2130
&lt;/span>&lt;span class="lnt">2131
&lt;/span>&lt;span class="lnt">2132
&lt;/span>&lt;span class="lnt">2133
&lt;/span>&lt;span class="lnt">2134
&lt;/span>&lt;span class="lnt">2135
&lt;/span>&lt;span class="lnt">2136
&lt;/span>&lt;span class="lnt">2137
&lt;/span>&lt;span class="lnt">2138
&lt;/span>&lt;span class="lnt">2139
&lt;/span>&lt;span class="lnt">2140
&lt;/span>&lt;span class="lnt">2141
&lt;/span>&lt;span class="lnt">2142
&lt;/span>&lt;span class="lnt">2143
&lt;/span>&lt;span class="lnt">2144
&lt;/span>&lt;span class="lnt">2145
&lt;/span>&lt;span class="lnt">2146
&lt;/span>&lt;span class="lnt">2147
&lt;/span>&lt;span class="lnt">2148
&lt;/span>&lt;span class="lnt">2149
&lt;/span>&lt;span class="lnt">2150
&lt;/span>&lt;span class="lnt">2151
&lt;/span>&lt;span class="lnt">2152
&lt;/span>&lt;span class="lnt">2153
&lt;/span>&lt;span class="lnt">2154
&lt;/span>&lt;span class="lnt">2155
&lt;/span>&lt;span class="lnt">2156
&lt;/span>&lt;span class="lnt">2157
&lt;/span>&lt;span class="lnt">2158
&lt;/span>&lt;span class="lnt">2159
&lt;/span>&lt;span class="lnt">2160
&lt;/span>&lt;span class="lnt">2161
&lt;/span>&lt;span class="lnt">2162
&lt;/span>&lt;span class="lnt">2163
&lt;/span>&lt;span class="lnt">2164
&lt;/span>&lt;span class="lnt">2165
&lt;/span>&lt;span class="lnt">2166
&lt;/span>&lt;span class="lnt">2167
&lt;/span>&lt;span class="lnt">2168
&lt;/span>&lt;span class="lnt">2169
&lt;/span>&lt;span class="lnt">2170
&lt;/span>&lt;span class="lnt">2171
&lt;/span>&lt;span class="lnt">2172
&lt;/span>&lt;span class="lnt">2173
&lt;/span>&lt;span class="lnt">2174
&lt;/span>&lt;span class="lnt">2175
&lt;/span>&lt;span class="lnt">2176
&lt;/span>&lt;span class="lnt">2177
&lt;/span>&lt;span class="lnt">2178
&lt;/span>&lt;span class="lnt">2179
&lt;/span>&lt;span class="lnt">2180
&lt;/span>&lt;span class="lnt">2181
&lt;/span>&lt;span class="lnt">2182
&lt;/span>&lt;span class="lnt">2183
&lt;/span>&lt;span class="lnt">2184
&lt;/span>&lt;span class="lnt">2185
&lt;/span>&lt;span class="lnt">2186
&lt;/span>&lt;span class="lnt">2187
&lt;/span>&lt;span class="lnt">2188
&lt;/span>&lt;span class="lnt">2189
&lt;/span>&lt;span class="lnt">2190
&lt;/span>&lt;span class="lnt">2191
&lt;/span>&lt;span class="lnt">2192
&lt;/span>&lt;span class="lnt">2193
&lt;/span>&lt;span class="lnt">2194
&lt;/span>&lt;span class="lnt">2195
&lt;/span>&lt;span class="lnt">2196
&lt;/span>&lt;span class="lnt">2197
&lt;/span>&lt;span class="lnt">2198
&lt;/span>&lt;span class="lnt">2199
&lt;/span>&lt;span class="lnt">2200
&lt;/span>&lt;span class="lnt">2201
&lt;/span>&lt;span class="lnt">2202
&lt;/span>&lt;span class="lnt">2203
&lt;/span>&lt;span class="lnt">2204
&lt;/span>&lt;span class="lnt">2205
&lt;/span>&lt;span class="lnt">2206
&lt;/span>&lt;span class="lnt">2207
&lt;/span>&lt;span class="lnt">2208
&lt;/span>&lt;span class="lnt">2209
&lt;/span>&lt;span class="lnt">2210
&lt;/span>&lt;span class="lnt">2211
&lt;/span>&lt;span class="lnt">2212
&lt;/span>&lt;span class="lnt">2213
&lt;/span>&lt;span class="lnt">2214
&lt;/span>&lt;span class="lnt">2215
&lt;/span>&lt;span class="lnt">2216
&lt;/span>&lt;span class="lnt">2217
&lt;/span>&lt;span class="lnt">2218
&lt;/span>&lt;span class="lnt">2219
&lt;/span>&lt;span class="lnt">2220
&lt;/span>&lt;span class="lnt">2221
&lt;/span>&lt;span class="lnt">2222
&lt;/span>&lt;span class="lnt">2223
&lt;/span>&lt;span class="lnt">2224
&lt;/span>&lt;span class="lnt">2225
&lt;/span>&lt;span class="lnt">2226
&lt;/span>&lt;span class="lnt">2227
&lt;/span>&lt;span class="lnt">2228
&lt;/span>&lt;span class="lnt">2229
&lt;/span>&lt;span class="lnt">2230
&lt;/span>&lt;span class="lnt">2231
&lt;/span>&lt;span class="lnt">2232
&lt;/span>&lt;span class="lnt">2233
&lt;/span>&lt;span class="lnt">2234
&lt;/span>&lt;span class="lnt">2235
&lt;/span>&lt;span class="lnt">2236
&lt;/span>&lt;span class="lnt">2237
&lt;/span>&lt;span class="lnt">2238
&lt;/span>&lt;span class="lnt">2239
&lt;/span>&lt;span class="lnt">2240
&lt;/span>&lt;span class="lnt">2241
&lt;/span>&lt;span class="lnt">2242
&lt;/span>&lt;span class="lnt">2243
&lt;/span>&lt;span class="lnt">2244
&lt;/span>&lt;span class="lnt">2245
&lt;/span>&lt;span class="lnt">2246
&lt;/span>&lt;span class="lnt">2247
&lt;/span>&lt;span class="lnt">2248
&lt;/span>&lt;span class="lnt">2249
&lt;/span>&lt;span class="lnt">2250
&lt;/span>&lt;span class="lnt">2251
&lt;/span>&lt;span class="lnt">2252
&lt;/span>&lt;span class="lnt">2253
&lt;/span>&lt;span class="lnt">2254
&lt;/span>&lt;span class="lnt">2255
&lt;/span>&lt;span class="lnt">2256
&lt;/span>&lt;span class="lnt">2257
&lt;/span>&lt;span class="lnt">2258
&lt;/span>&lt;span class="lnt">2259
&lt;/span>&lt;span class="lnt">2260
&lt;/span>&lt;span class="lnt">2261
&lt;/span>&lt;span class="lnt">2262
&lt;/span>&lt;span class="lnt">2263
&lt;/span>&lt;span class="lnt">2264
&lt;/span>&lt;span class="lnt">2265
&lt;/span>&lt;span class="lnt">2266
&lt;/span>&lt;span class="lnt">2267
&lt;/span>&lt;span class="lnt">2268
&lt;/span>&lt;span class="lnt">2269
&lt;/span>&lt;span class="lnt">2270
&lt;/span>&lt;span class="lnt">2271
&lt;/span>&lt;span class="lnt">2272
&lt;/span>&lt;span class="lnt">2273
&lt;/span>&lt;span class="lnt">2274
&lt;/span>&lt;span class="lnt">2275
&lt;/span>&lt;span class="lnt">2276
&lt;/span>&lt;span class="lnt">2277
&lt;/span>&lt;span class="lnt">2278
&lt;/span>&lt;span class="lnt">2279
&lt;/span>&lt;span class="lnt">2280
&lt;/span>&lt;span class="lnt">2281
&lt;/span>&lt;span class="lnt">2282
&lt;/span>&lt;span class="lnt">2283
&lt;/span>&lt;span class="lnt">2284
&lt;/span>&lt;span class="lnt">2285
&lt;/span>&lt;span class="lnt">2286
&lt;/span>&lt;span class="lnt">2287
&lt;/span>&lt;span class="lnt">2288
&lt;/span>&lt;span class="lnt">2289
&lt;/span>&lt;span class="lnt">2290
&lt;/span>&lt;span class="lnt">2291
&lt;/span>&lt;span class="lnt">2292
&lt;/span>&lt;span class="lnt">2293
&lt;/span>&lt;span class="lnt">2294
&lt;/span>&lt;span class="lnt">2295
&lt;/span>&lt;span class="lnt">2296
&lt;/span>&lt;span class="lnt">2297
&lt;/span>&lt;span class="lnt">2298
&lt;/span>&lt;span class="lnt">2299
&lt;/span>&lt;span class="lnt">2300
&lt;/span>&lt;span class="lnt">2301
&lt;/span>&lt;span class="lnt">2302
&lt;/span>&lt;span class="lnt">2303
&lt;/span>&lt;span class="lnt">2304
&lt;/span>&lt;span class="lnt">2305
&lt;/span>&lt;span class="lnt">2306
&lt;/span>&lt;span class="lnt">2307
&lt;/span>&lt;span class="lnt">2308
&lt;/span>&lt;span class="lnt">2309
&lt;/span>&lt;span class="lnt">2310
&lt;/span>&lt;span class="lnt">2311
&lt;/span>&lt;span class="lnt">2312
&lt;/span>&lt;span class="lnt">2313
&lt;/span>&lt;span class="lnt">2314
&lt;/span>&lt;span class="lnt">2315
&lt;/span>&lt;span class="lnt">2316
&lt;/span>&lt;span class="lnt">2317
&lt;/span>&lt;span class="lnt">2318
&lt;/span>&lt;span class="lnt">2319
&lt;/span>&lt;span class="lnt">2320
&lt;/span>&lt;span class="lnt">2321
&lt;/span>&lt;span class="lnt">2322
&lt;/span>&lt;span class="lnt">2323
&lt;/span>&lt;span class="lnt">2324
&lt;/span>&lt;span class="lnt">2325
&lt;/span>&lt;span class="lnt">2326
&lt;/span>&lt;span class="lnt">2327
&lt;/span>&lt;span class="lnt">2328
&lt;/span>&lt;span class="lnt">2329
&lt;/span>&lt;span class="lnt">2330
&lt;/span>&lt;span class="lnt">2331
&lt;/span>&lt;span class="lnt">2332
&lt;/span>&lt;span class="lnt">2333
&lt;/span>&lt;span class="lnt">2334
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################# 不允许后台运行 docker 必须打开 #####################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">daemonize&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################# 基础网络相关 #####################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">bind&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">port&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">port&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################# tls相关 #####################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 如果不启用注释掉下面即可&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">port&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">tlsPort&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cert&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">file&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ssl&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">certs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">crt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">file&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ssl&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">certs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">key&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cert&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">file&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ssl&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">certs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">crt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">file&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ssl&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">certs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">key&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">pass&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ssl&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">certs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">secret&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dh&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">file&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ssl&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">certs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">ca&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cert&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">file&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ssl&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">certs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ca&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">crt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">ca&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cert&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dir&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ssl&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">certs&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">auth&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">clients&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">auth&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">clients&lt;/span> &lt;span class="n">optional&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">replication&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cluster&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">protocols&lt;/span> &lt;span class="s2">&amp;#34;TLSv1.2 TLSv1.3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">ciphers&lt;/span> &lt;span class="n">DEFAULT&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">MEDIUM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">ciphersuites&lt;/span> &lt;span class="n">TLS_CHACHA20_POLY1305_SHA256&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">prefer&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">ciphers&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">session&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">caching&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">session&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="mi">5000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">session&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">timeout&lt;/span> &lt;span class="mi">60&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################## 安全认证相关 ###################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 允许外网访问 no是允许&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">protected&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">mode&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">requirepass&lt;/span> &lt;span class="s2">&amp;#34;{password}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 同步密码 和管理员密码配置一样的，不然同步容易出问题&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">masterauth&lt;/span> &lt;span class="s2">&amp;#34;{password}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################## 多线程 ###################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">threads&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">do&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">reads&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">threads&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################## 持久化 ###################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 开启aof 其他不用配置用默认即可&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">appendonly&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">################################## 集 群 ###################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 开启集群 如果不用 注释掉即可&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cluster&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">enabled&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 节点配置 默认会在 data 目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cluster&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">file&lt;/span> &lt;span class="s2">&amp;#34;nodes.conf&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#集群超时&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cluster&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">timeout&lt;/span> &lt;span class="mi">5000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################## 可能需要的 ###################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 限制内存 acl控制等&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################## 后面是默认配置 ###################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis configuration file example.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note that in order to read the configuration file, Redis must be&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># started with the file path as first argument:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ./redis-server /path/to/redis.conf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note on units: when memory size is needed, it is possible to specify&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># it in the usual form of 1k 5GB 4M and so forth:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1k =&amp;gt; 1000 bytes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1kb =&amp;gt; 1024 bytes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1m =&amp;gt; 1000000 bytes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1mb =&amp;gt; 1024*1024 bytes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1g =&amp;gt; 1000000000 bytes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1gb =&amp;gt; 1024*1024*1024 bytes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># units are case insensitive so 1GB 1Gb 1gB are all the same.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################## INCLUDES ###################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Include one or more other config files here. This is useful if you&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># have a standard template that goes to all Redis servers but also need&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to customize a few per-server settings. Include files can include&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># other files, so use this wisely.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note that option &amp;#34;include&amp;#34; won&amp;#39;t be rewritten by command &amp;#34;CONFIG REWRITE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># from admin or Redis Sentinel. Since Redis always uses the last processed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># line as value of a configuration directive, you&amp;#39;d better put includes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># at the beginning of this file to avoid overwriting config change at runtime.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If instead you are interested in using includes to override configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># options, it is better to use include as the last line.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Included paths may contain wildcards. All files matching the wildcards will&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># be included in alphabetical order.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note that if an include path contains a wildcards but no files match it when&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the server is started, the include statement will be ignored and no error will&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># be emitted. It is safe, therefore, to include wildcard files from empty&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># directories.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># include /path/to/local.conf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># include /path/to/other.conf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># include /path/to/fragments/*.conf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################## MODULES #####################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Load modules at startup. If the server is not able to load modules&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># it will abort. It is possible to use multiple loadmodule directives.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># loadmodule /path/to/my_module.so&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># loadmodule /path/to/other_module.so&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################## NETWORK #####################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default, if no &amp;#34;bind&amp;#34; configuration directive is specified, Redis listens&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># for connections from all available network interfaces on the host machine.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># It is possible to listen to just one or multiple selected interfaces using&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the &amp;#34;bind&amp;#34; configuration directive, followed by one or more IP addresses.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Each address can be prefixed by &amp;#34;-&amp;#34;, which means that redis will not fail to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># start if the address is not available. Being not available only refers to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># addresses that does not correspond to any network interface. Addresses that&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># are already in use will always fail, and unsupported protocols will always BE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># silently skipped.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Examples:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># bind 192.168.1.100 10.0.0.1 # listens on two specific IPv4 addresses&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># bind 127.0.0.1 ::1 # listens on loopback IPv4 and IPv6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># bind * -::* # like the default, all available interfaces&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># internet, binding to all the interfaces is dangerous and will expose the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># instance to everybody on the internet. So by default we uncomment the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># following bind directive, that will force Redis to listen only on the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># IPv4 and IPv6 (if available) loopback interface addresses (this means Redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># will only be able to accept client connections from the same host that it is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># running on).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># COMMENT OUT THE FOLLOWING LINE.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># You will also need to set a password unless you explicitly disable protected&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># mode.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#-bind 127.0.0.1 -::1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default, outgoing connections (from replica to master, from Sentinel to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># instances, cluster bus, etc.) are not bound to a specific local address. In&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># most cases, this means the operating system will handle that based on routing&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and the interface through which the connection goes out.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Using bind-source-addr it is possible to configure a specific address to bind&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to, which may also affect how the connection gets routed.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># bind-source-addr 10.0.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Protected mode is a layer of security protection, in order to avoid that&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis instances left open on the internet are accessed and exploited.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When protected mode is on and the default user has no password, the server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># only accepts local connections from the IPv4 address (127.0.0.1), IPv6 address&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># (::1) or Unix domain sockets.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default protected mode is enabled. You should disable it only if&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># you are sure you want clients from other hosts to connect to Redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># even if no authentication is configured.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#-protected-mode yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis uses default hardened security configuration directives to reduce the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># attack surface on innocent users. Therefore, several sensitive configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># directives are immutable, and some potentially-dangerous commands are blocked.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Configuration directives that control files that Redis writes to (e.g., &amp;#39;dir&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and &amp;#39;dbfilename&amp;#39;) and that aren&amp;#39;t usually modified during runtime&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># are protected by making them immutable.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Commands that can increase the attack surface of Redis and that aren&amp;#39;t usually&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># called by users are blocked by default.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># These can be exposed to either all connections or just local ones by setting&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># each of the configs listed below to either of these values:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># no - Block for any connection (remain immutable)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yes - Allow for any connection (no protection)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># local - Allow only for local connections. Ones originating from the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># IPv4 address (127.0.0.1), IPv6 address (::1) or Unix domain sockets.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># enable-protected-configs no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># enable-debug-command no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># enable-module-command no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Accept connections on the specified port, default is 6379 (IANA #815344).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If port 0 is specified Redis will not listen on a TCP socket.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#-port 6379&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># TCP listen() backlog.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># In high requests-per-second environments you need a high backlog in order&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to avoid slow clients connection issues. Note that the Linux kernel&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># will silently truncate it to the value of /proc/sys/net/core/somaxconn so&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># make sure to raise both the value of somaxconn and tcp_max_syn_backlog&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in order to get the desired effect.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tcp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backlog&lt;/span> &lt;span class="mi">511&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Unix socket.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Specify the path for the Unix socket that will be used to listen for&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># incoming connections. There is no default, so Redis will not listen&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># on a unix socket when not specified.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># unixsocket /run/redis/redis-server.sock&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># unixsocketperm 700&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Close the connection after a client is idle for N seconds (0 to disable)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">timeout&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># TCP keepalive.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># of communication. This is useful for two reasons:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1) Detect dead peers.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2) Force network equipment in the middle to consider the connection to be&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># alive.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># On Linux, the specified value (in seconds) is the period used to send ACKs.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note that to close the connection the double of the time is needed.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># On other kernels the period depends on the kernel configuration.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># A reasonable value for this option is 300 seconds, which is the new&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis default starting with Redis 3.2.1.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tcp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">keepalive&lt;/span> &lt;span class="mi">300&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Apply OS-specific mechanism to mark the listening socket with the specified&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ID, to support advanced routing and filtering capabilities.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># On Linux, the ID represents a connection mark.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># On FreeBSD, the ID represents a socket cookie ID.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># On OpenBSD, the ID represents a route table ID.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The default value is 0, which implies no marking is required.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># socket-mark-id 0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################# TLS/SSL #####################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default, TLS/SSL is disabled. To enable it, the &amp;#34;tls-port&amp;#34; configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># directive can be used to define TLS-listening ports. To enable TLS on the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># default port, use:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># port 0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-port 6379&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Configure a X.509 certificate and private key to use for authenticating the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># server to connected clients, masters or cluster peers. These files should be&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># PEM formatted.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-cert-file redis.crt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-key-file redis.key&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If the key file is encrypted using a passphrase, it can be included here&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># as well.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-key-file-pass secret&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Normally Redis uses the same certificate for both server functions (accepting&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># connections) and client functions (replicating from a master, establishing&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster bus connections, etc.).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Sometimes certificates are issued with attributes that designate them as&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># client-only or server-only certificates. In that case it may be desired to use&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># different certificates for incoming (server) and outgoing (client)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># connections. To do that, use the following directives:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-client-cert-file client.crt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-client-key-file client.key&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If the key file is encrypted using a passphrase, it can be included here&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># as well.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-client-key-file-pass secret&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Configure a DH parameters file to enable Diffie-Hellman (DH) key exchange,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># required by older versions of OpenSSL (&amp;lt;3.0). Newer versions do not require&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># this configuration and recommend against it.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-dh-params-file redis.dh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Configure a CA certificate(s) bundle or directory to authenticate TLS/SSL&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># clients and peers. Redis requires an explicit configuration of at least one&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># of these, and will not implicitly use the system wide configuration.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-ca-cert-file ca.crt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-ca-cert-dir /etc/ssl/certs&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default, clients (including replica servers) on a TLS port are required&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to authenticate using valid client side certificates.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If &amp;#34;no&amp;#34; is specified, client certificates are not required and not accepted.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If &amp;#34;optional&amp;#34; is specified, client certificates are accepted and must be&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># valid if provided, but are not required.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-auth-clients no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-auth-clients optional&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default, a Redis replica does not attempt to establish a TLS connection&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># with its master.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Use the following directive to enable TLS on replication links.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-replication yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default, the Redis Cluster bus uses a plain TCP connection. To enable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># TLS for the bus protocol, use the following directive:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-cluster yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default, only TLSv1.2 and TLSv1.3 are enabled and it is highly recommended&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># that older formally deprecated versions are kept disabled to reduce the attack surface.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># You can explicitly specify TLS versions to support.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Allowed values are case insensitive and include &amp;#34;TLSv1&amp;#34;, &amp;#34;TLSv1.1&amp;#34;, &amp;#34;TLSv1.2&amp;#34;,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;#34;TLSv1.3&amp;#34; (OpenSSL &amp;gt;= 1.1.1) or any combination.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># To enable only TLSv1.2 and TLSv1.3, use:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-protocols &amp;#34;TLSv1.2 TLSv1.3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Configure allowed ciphers. See the ciphers(1ssl) manpage for more information&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># about the syntax of this string.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note: this configuration applies only to &amp;lt;= TLSv1.2.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-ciphers DEFAULT:!MEDIUM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Configure allowed TLSv1.3 ciphersuites. See the ciphers(1ssl) manpage for more&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># information about the syntax of this string, and specifically for TLSv1.3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ciphersuites.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-ciphersuites TLS_CHACHA20_POLY1305_SHA256&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When choosing a cipher, use the server&amp;#39;s preference instead of the client&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># preference. By default, the server follows the client&amp;#39;s preference.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-prefer-server-ciphers yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default, TLS session caching is enabled to allow faster and less expensive&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># reconnections by clients that support it. Use the following directive to disable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># caching.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-session-caching no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Change the default number of TLS sessions cached. A zero value sets the cache&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to unlimited size. The default size is 20480.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-session-cache-size 5000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Change the default timeout of cached TLS sessions. The default timeout is 300&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># seconds.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tls-session-cache-timeout 60&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################# GENERAL #####################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default Redis does not run as a daemon. Use &amp;#39;yes&amp;#39; if you need it.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note that Redis will write a pid file in /var/run/redis.pid when daemonized.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When Redis is supervised by upstart or systemd, this parameter has no impact.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#-daemonize yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If you run Redis from upstart or systemd, Redis can interact with your&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># supervision tree. Options:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># supervised no - no supervision interaction&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># supervised upstart - signal upstart by putting Redis into SIGSTOP mode&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># requires &amp;#34;expect stop&amp;#34; in your upstart job config&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># supervised systemd - signal systemd by writing READY=1 to $NOTIFY_SOCKET&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># on startup, and updating Redis status on a regular&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># basis.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># supervised auto - detect upstart or systemd method based on&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># UPSTART_JOB or NOTIFY_SOCKET environment variables&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note: these supervision methods only signal &amp;#34;process is ready.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># They do not enable continuous pings back to your supervisor.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The default is &amp;#34;no&amp;#34;. To run under upstart/systemd, you can simply uncomment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the line below:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># supervised auto&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If a pid file is specified, Redis writes it where specified at startup&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and removes it at exit.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When the server runs non daemonized, no pid file is created if none is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># specified in the configuration. When the server is daemonized, the pid file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is used even if not specified, defaulting to &amp;#34;/var/run/redis.pid&amp;#34;.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Creating a pid file is best effort: if Redis is not able to create it&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># nothing bad happens, the server will start and run normally.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note that on modern Linux systems &amp;#34;/run/redis.pid&amp;#34; is more conforming&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and should be used instead.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pidfile&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">redis&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">redis&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Specify the server verbosity level.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This can be one of:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># debug (a lot of information, useful for development/testing)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># verbose (many rarely useful info, but not a mess like the debug level)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># notice (moderately verbose, what you want in production probably)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># warning (only very important / critical messages are logged)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">loglevel&lt;/span> &lt;span class="n">notice&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Specify the log file name. Also the empty string can be used to force&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis to log on the standard output. Note that if you use standard&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># output for logging but daemonize, logs will be sent to /dev/null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">logfile&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nb">log&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">redis&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">redis&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># To enable logging to the system logger, just set &amp;#39;syslog-enabled&amp;#39; to yes,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and optionally update the other syslog parameters to suit your needs.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># syslog-enabled no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Specify the syslog identity.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># syslog-ident redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># syslog-facility local0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># To disable the built in crash log, which will possibly produce cleaner core&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># dumps when they are needed, uncomment the following:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># crash-log-enabled no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># To disable the fast memory check that&amp;#39;s run as part of the crash log, which&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># will possibly let redis terminate sooner, uncomment the following:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># crash-memcheck-enabled no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set the number of databases. The default database is DB 0, you can select&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># a different one on a per-connection basis using SELECT &amp;lt;dbid&amp;gt; where&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># dbid is a number between 0 and &amp;#39;databases&amp;#39;-1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">databases&lt;/span> &lt;span class="mi">16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default Redis shows an ASCII art logo only when started to log to the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># standard output and if the standard output is a TTY and syslog logging is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># disabled. Basically this means that normally a logo is displayed only in&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># interactive sessions.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># However it is possible to force the pre-4.0 behavior and always show a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ASCII art logo in startup logs by setting the following option to yes.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">always&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">logo&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default, Redis modifies the process title (as seen in &amp;#39;top&amp;#39; and &amp;#39;ps&amp;#39;) to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># provide some runtime information. It is possible to disable this and leave&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the process name as executed by setting the following to no.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">set&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">proc&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">title&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When changing the process title, Redis uses the following template to construct&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the modified title.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Template variables are specified in curly brackets. The following variables are&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># supported:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># {title} Name of process as executed if parent, or type of child process.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># {listen-addr} Bind address or &amp;#39;*&amp;#39; followed by TCP or TLS port listening on, or&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Unix socket if only that&amp;#39;s available.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># {server-mode} Special mode, i.e. &amp;#34;[sentinel]&amp;#34; or &amp;#34;[cluster]&amp;#34;.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># {port} TCP port listening on, or 0.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># {tls-port} TLS port listening on, or 0.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># {unixsocket} Unix domain socket listening on, or &amp;#34;&amp;#34;.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># {config-file} Name of configuration file used.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">proc&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">template&lt;/span> &lt;span class="s2">&amp;#34;{title} {listen-addr} {server-mode}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################ SNAPSHOTTING ################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Save the DB to disk.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># save &amp;lt;seconds&amp;gt; &amp;lt;changes&amp;gt; [&amp;lt;seconds&amp;gt; &amp;lt;changes&amp;gt; ...]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis will save the DB if the given number of seconds elapsed and it&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># surpassed the given number of write operations against the DB.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Snapshotting can be completely disabled with a single empty string argument&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># as in following example:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># save &amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Unless specified otherwise, by default Redis will save the DB:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * After 3600 seconds (an hour) if at least 1 change was performed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * After 300 seconds (5 minutes) if at least 100 changes were performed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * After 60 seconds if at least 10000 changes were performed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># You can set these explicitly by uncommenting the following line.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># save 3600 1 300 100 60 10000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default Redis will stop accepting writes if RDB snapshots are enabled&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># (at least one save point) and the latest background save failed.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This will make the user aware (in a hard way) that data is not persisting&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># on disk properly, otherwise chances are that no one will notice and some&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># disaster will happen.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If the background saving process will start working again Redis will&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># automatically allow writes again.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># However if you have setup your proper monitoring of the Redis server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and persistence, you may want to disable this feature so that Redis will&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># continue to work as usual even if there are problems with disk,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># permissions, and so forth.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">stop&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">writes&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">on&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">bgsave&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">error&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Compress string objects using LZF when dump .rdb databases?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default compression is enabled as it&amp;#39;s almost always a win.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If you want to save some CPU in the saving child set it to &amp;#39;no&amp;#39; but&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the dataset will likely be bigger if you have compressible values or keys.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">rdbcompression&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Since version 5 of RDB a CRC64 checksum is placed at the end of the file.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This makes the format more resistant to corruption but there is a performance&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># hit to pay (around 10%) when saving and loading RDB files, so you can disable it&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># for maximum performances.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># RDB files created with checksum disabled have a checksum of zero that will&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tell the loading code to skip the check.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">rdbchecksum&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Enables or disables full sanitization checks for ziplist and listpack etc when&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># loading an RDB or RESTORE payload. This reduces the chances of a assertion or&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># crash later on while processing commands.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Options:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># no - Never perform full sanitization&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yes - Always perform full sanitization&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># clients - Perform full sanitization only for user connections.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Excludes: RDB files, RESTORE commands received from the master&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># connection, and client connections which have the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># skip-sanitize-payload ACL flag.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The default should be &amp;#39;clients&amp;#39; but since it currently affects cluster&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># resharding via MIGRATE, it is temporarily set to &amp;#39;no&amp;#39; by default.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># sanitize-dump-payload no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The filename where to dump the DB&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dbfilename&lt;/span> &lt;span class="n">dump&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rdb&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Remove RDB files used by replication in instances without persistence&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># enabled. By default this option is disabled, however there are environments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># where for regulations or other security concerns, RDB files persisted on&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># disk by masters in order to feed replicas, or stored on disk by replicas&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in order to load them for the initial synchronization, should be deleted&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ASAP. Note that this option ONLY WORKS in instances that have both AOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and RDB persistence disabled, otherwise is completely ignored.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># An alternative (and sometimes better) way to obtain the same effect is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to use diskless replication on both master and replicas instances. However&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in the case of replicas, diskless is not always an option.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">rdb&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">del&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">sync&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">files&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The working directory.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The DB will be written inside this directory, with the filename specified&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># above using the &amp;#39;dbfilename&amp;#39; configuration directive.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The Append Only File will also be created inside this directory.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note that you must specify a directory here, not a file name.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dir&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################# REPLICATION #################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Master-Replica replication. Use replicaof to make a Redis instance a copy of&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># another Redis server. A few things to understand ASAP about Redis replication.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># +------------------+ +---------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># | Master | ---&amp;gt; | Replica |&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># | (receive writes) | | (exact copy) |&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># +------------------+ +---------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1) Redis replication is asynchronous, but you can configure a master to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># stop accepting writes if it appears to be not connected with at least&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># a given number of replicas.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2) Redis replicas are able to perform a partial resynchronization with the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># master if the replication link is lost for a relatively small amount of&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># time. You may want to configure the replication backlog size (see the next&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># sections of this file) with a sensible value depending on your needs.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 3) Replication is automatic and does not need user intervention. After a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># network partition replicas automatically try to reconnect to masters&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and resynchronize with them.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replicaof &amp;lt;masterip&amp;gt; &amp;lt;masterport&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If the master is password protected (using the &amp;#34;requirepass&amp;#34; configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># directive below) it is possible to tell the replica to authenticate before&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># starting the replication synchronization process, otherwise the master will&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># refuse the replica request.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># masterauth &amp;lt;master-password&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># However this is not enough if you are using Redis ACLs (for Redis version&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 6 or greater), and the default user is not capable of running the PSYNC&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># command and/or other commands needed for replication. In this case it&amp;#39;s&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># better to configure a special user to use with replication, and specify the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># masteruser configuration as such:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># masteruser &amp;lt;username&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When masteruser is specified, the replica will authenticate against its&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># master using the new AUTH form: AUTH &amp;lt;username&amp;gt; &amp;lt;password&amp;gt;.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When a replica loses its connection with the master, or when the replication&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is still in progress, the replica can act in two different ways:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1) if replica-serve-stale-data is set to &amp;#39;yes&amp;#39; (the default) the replica will&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># still reply to client requests, possibly with out of date data, or the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># data set may just be empty if this is the first synchronization.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2) If replica-serve-stale-data is set to &amp;#39;no&amp;#39; the replica will reply with error&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;#34;MASTERDOWN Link with MASTER is down and replica-serve-stale-data is set to &amp;#39;no&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to all data access commands, excluding commands such as:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># INFO, REPLICAOF, AUTH, SHUTDOWN, REPLCONF, ROLE, CONFIG, SUBSCRIBE,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># UNSUBSCRIBE, PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB, COMMAND, POST,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># HOST and LATENCY.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">replica&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">serve&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">stale&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># You can configure a replica instance to accept writes or not. Writing against&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># a replica instance may be useful to store some ephemeral data (because data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># written on a replica will be easily deleted after resync with the master) but&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># may also cause problems if clients are writing to it because of a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># misconfiguration.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Since Redis 2.6 by default replicas are read-only.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note: read only replicas are not designed to be exposed to untrusted clients&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># on the internet. It&amp;#39;s just a protection layer against misuse of the instance.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Still a read only replica exports by default all the administrative commands&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># such as CONFIG, DEBUG, and so forth. To a limited extent you can improve&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># security of read only replicas using &amp;#39;rename-command&amp;#39; to shadow all the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># administrative / dangerous commands.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">replica&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">only&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replication SYNC strategy: disk or socket.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># New replicas and reconnecting replicas that are not able to continue the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replication process just receiving differences, need to do what is called a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;#34;full synchronization&amp;#34;. An RDB file is transmitted from the master to the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replicas.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The transmission can happen in two different ways:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1) Disk-backed: The Redis master creates a new process that writes the RDB&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># file on disk. Later the file is transferred by the parent&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># process to the replicas incrementally.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2) Diskless: The Redis master creates a new process that directly writes the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># RDB file to replica sockets, without touching the disk at all.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># With disk-backed replication, while the RDB file is generated, more replicas&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># can be queued and served with the RDB file as soon as the current child&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># producing the RDB file finishes its work. With diskless replication instead&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># once the transfer starts, new replicas arriving will be queued and a new&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># transfer will start when the current one terminates.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When diskless replication is used, the master waits a configurable amount of&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># time (in seconds) before starting the transfer in the hope that multiple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replicas will arrive and the transfer can be parallelized.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># With slow disks and fast (large bandwidth) networks, diskless replication&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># works better.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">repl&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">diskless&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">sync&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When diskless replication is enabled, it is possible to configure the delay&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the server waits in order to spawn the child that transfers the RDB via socket&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to the replicas.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This is important since once the transfer starts, it is not possible to serve&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># new replicas arriving, that will be queued for the next RDB transfer, so the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># server waits a delay in order to let more replicas arrive.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The delay is specified in seconds, and by default is 5 seconds. To disable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># it entirely just set it to 0 seconds and the transfer will start ASAP.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">repl&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">diskless&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">sync&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">delay&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When diskless replication is enabled with a delay, it is possible to let&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the replication start before the maximum delay is reached if the maximum&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># number of replicas expected have connected. Default of 0 means that the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># maximum is not defined and Redis will wait the full delay.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">repl&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">diskless&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">sync&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">max&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">replicas&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -----------------------------------------------------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># WARNING: RDB diskless load is experimental. Since in this setup the replica&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># does not immediately store an RDB on disk, it may cause data loss during&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># failovers. RDB diskless load + Redis modules not handling I/O reads may also&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cause Redis to abort in case of I/O errors during the initial synchronization&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># stage with the master. Use only if you know what you are doing.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -----------------------------------------------------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replica can load the RDB it reads from the replication link directly from the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># socket, or store the RDB to a file and read that file after it was completely&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># received from the master.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># In many cases the disk is slower than the network, and storing and loading&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the RDB file may increase replication time (and even increase the master&amp;#39;s&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Copy on Write memory and replica buffers).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># However, parsing the RDB file directly from the socket may mean that we have&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to flush the contents of the current database before the full rdb was&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># received. For this reason we have the following options:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;#34;disabled&amp;#34; - Don&amp;#39;t use diskless load (store the rdb file to the disk first)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;#34;on-empty-db&amp;#34; - Use diskless load only when it is completely safe.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;#34;swapdb&amp;#34; - Keep current db contents in RAM while parsing the data directly&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># from the socket. Replicas in this mode can keep serving current&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># data set while replication is in progress, except for cases where&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># they can&amp;#39;t recognize master as having a data set from same&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replication history.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note that this requires sufficient memory, if you don&amp;#39;t have it,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># you risk an OOM kill.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">repl&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">diskless&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">load&lt;/span> &lt;span class="n">disabled&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Master send PINGs to its replicas in a predefined interval. It&amp;#39;s possible to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># change this interval with the repl_ping_replica_period option. The default&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># value is 10 seconds.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># repl-ping-replica-period 10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The following option sets the replication timeout for:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1) Bulk transfer I/O during SYNC, from the point of view of replica.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2) Master timeout from the point of view of replicas (data, pings).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 3) Replica timeout from the point of view of masters (REPLCONF ACK pings).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># It is important to make sure that this value is greater than the value&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># specified for repl-ping-replica-period otherwise a timeout will be detected&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># every time there is low traffic between the master and the replica. The default&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># value is 60 seconds.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># repl-timeout 60&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Disable TCP_NODELAY on the replica socket after SYNC?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If you select &amp;#34;yes&amp;#34; Redis will use a smaller number of TCP packets and&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># less bandwidth to send data to replicas. But this can add a delay for&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the data to appear on the replica side, up to 40 milliseconds with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Linux kernels using a default configuration.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If you select &amp;#34;no&amp;#34; the delay for data to appear on the replica side will&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># be reduced but more bandwidth will be used for replication.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default we optimize for low latency, but in very high traffic conditions&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># or when the master and replicas are many hops away, turning this to &amp;#34;yes&amp;#34; may&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># be a good idea.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">repl&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">disable&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tcp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">nodelay&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set the replication backlog size. The backlog is a buffer that accumulates&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replica data when replicas are disconnected for some time, so that when a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replica wants to reconnect again, often a full resync is not needed, but a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># partial resync is enough, just passing the portion of data the replica&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># missed while disconnected.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The bigger the replication backlog, the longer the replica can endure the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># disconnect and later be able to perform a partial resynchronization.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The backlog is only allocated if there is at least one replica connected.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># repl-backlog-size 1mb&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># After a master has no connected replicas for some time, the backlog will be&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># freed. The following option configures the amount of seconds that need to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># elapse, starting from the time the last replica disconnected, for the backlog&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># buffer to be freed.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note that replicas never free the backlog for timeout, since they may be&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># promoted to masters later, and should be able to correctly &amp;#34;partially&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># resynchronize&amp;#34; with other replicas: hence they should always accumulate backlog.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># A value of 0 means to never release the backlog.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># repl-backlog-ttl 3600&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The replica priority is an integer number published by Redis in the INFO&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># output. It is used by Redis Sentinel in order to select a replica to promote&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># into a master if the master is no longer working correctly.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># A replica with a low priority number is considered better for promotion, so&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># for instance if there are three replicas with priority 10, 100, 25 Sentinel&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># will pick the one with priority 10, that is the lowest.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># However a special priority of 0 marks the replica as not able to perform the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># role of master, so a replica with priority of 0 will never be selected by&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis Sentinel for promotion.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default the priority is 100.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">replica&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">priority&lt;/span> &lt;span class="mi">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The propagation error behavior controls how Redis will behave when it is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># unable to handle a command being processed in the replication stream from a master&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># or processed while reading from an AOF file. Errors that occur during propagation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># are unexpected, and can cause data inconsistency. However, there are edge cases&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in earlier versions of Redis where it was possible for the server to replicate or persist&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># commands that would fail on future versions. For this reason the default behavior&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is to ignore such errors and continue processing commands.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If an application wants to ensure there is no data divergence, this configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># should be set to &amp;#39;panic&amp;#39; instead. The value can also be set to &amp;#39;panic-on-replicas&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to only panic when a replica encounters an error on the replication stream. One of&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># these two panic values will become the default value in the future once there are&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># sufficient safety mechanisms in place to prevent false positive crashes.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># propagation-error-behavior ignore&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replica ignore disk write errors controls the behavior of a replica when it is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># unable to persist a write command received from its master to disk. By default,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># this configuration is set to &amp;#39;no&amp;#39; and will crash the replica in this condition.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># It is not recommended to change this default, however in order to be compatible&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># with older versions of Redis this config can be toggled to &amp;#39;yes&amp;#39; which will just&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># log a warning and execute the write command it got from the master.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replica-ignore-disk-write-errors no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -----------------------------------------------------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default, Redis Sentinel includes all replicas in its reports. A replica&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># can be excluded from Redis Sentinel&amp;#39;s announcements. An unannounced replica&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># will be ignored by the &amp;#39;sentinel replicas &amp;lt;master&amp;gt;&amp;#39; command and won&amp;#39;t be&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># exposed to Redis Sentinel&amp;#39;s clients.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This option does not change the behavior of replica-priority. Even with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replica-announced set to &amp;#39;no&amp;#39;, the replica can be promoted to master. To&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># prevent this behavior, set replica-priority to 0.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replica-announced yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># It is possible for a master to stop accepting writes if there are less than&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># N replicas connected, having a lag less or equal than M seconds.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The N replicas need to be in &amp;#34;online&amp;#34; state.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The lag in seconds, that must be &amp;lt;= the specified value, is calculated from&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the last ping received from the replica, that is usually sent every second.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This option does not GUARANTEE that N replicas will accept the write, but&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># will limit the window of exposure for lost writes in case not enough replicas&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># are available, to the specified number of seconds.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For example to require at least 3 replicas with a lag &amp;lt;= 10 seconds use:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># min-replicas-to-write 3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># min-replicas-max-lag 10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Setting one or the other to 0 disables the feature.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default min-replicas-to-write is set to 0 (feature disabled) and&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># min-replicas-max-lag is set to 10.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># A Redis master is able to list the address and port of the attached&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replicas in different ways. For example the &amp;#34;INFO replication&amp;#34; section&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># offers this information, which is used, among other tools, by&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis Sentinel in order to discover replica instances.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Another place where this info is available is in the output of the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;#34;ROLE&amp;#34; command of a master.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The listed IP address and port normally reported by a replica is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># obtained in the following way:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># IP: The address is auto detected by checking the peer address&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># of the socket used by the replica to connect with the master.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Port: The port is communicated by the replica during the replication&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># handshake, and is normally the port that the replica is using to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># listen for connections.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># However when port forwarding or Network Address Translation (NAT) is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># used, the replica may actually be reachable via different IP and port&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># pairs. The following two options can be used by a replica in order to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># report to its master a specific set of IP and port, so that both INFO&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and ROLE will report those values.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># There is no need to use both the options if you need to override just&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the port or the IP address.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replica-announce-ip 5.5.5.5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replica-announce-port 1234&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">############################### KEYS TRACKING #################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis implements server assisted support for client side caching of values.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This is implemented using an invalidation table that remembers, using&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># a radix key indexed by key name, what clients have which keys. In turn&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># this is used in order to send invalidation messages to clients. Please&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># check this page to understand more about the feature:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># https://redis.io/topics/client-side-caching&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When tracking is enabled for a client, all the read only queries are assumed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to be cached: this will force Redis to store information in the invalidation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># table. When keys are modified, such information is flushed away, and&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># invalidation messages are sent to the clients. However if the workload is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># heavily dominated by reads, Redis could use more and more memory in order&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to track the keys fetched by many clients.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For this reason it is possible to configure a maximum fill value for the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># invalidation table. By default it is set to 1M of keys, and once this limit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is reached, Redis will start to evict keys in the invalidation table&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># even if they were not modified, just to reclaim memory: this will in turn&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># force the clients to invalidate the cached values. Basically the table&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># maximum size is a trade off between the memory you want to spend server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># side to track information about who cached what, and the ability of clients&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to retain cached objects in memory.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If you set the value to 0, it means there are no limits, and Redis will&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># retain as many keys as needed in the invalidation table.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># In the &amp;#34;stats&amp;#34; INFO section, you can find information about the number of&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># keys in the invalidation table at every given moment.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note: when key tracking is used in broadcasting mode, no memory is used&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in the server side so this setting is useless.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tracking-table-max-keys 1000000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################## SECURITY ###################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Warning: since Redis is pretty fast, an outside user can try up to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1 million passwords per second against a modern box. This means that you&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># should use very strong passwords, otherwise they will be very easy to break.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note that because the password is really a shared secret between the client&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and the server, and should not be memorized by any human, the password&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># can be easily a long string from /dev/urandom or whatever, so by using a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># long and unguessable password no brute force attack will be possible.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis ACL users are defined in the following format:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># user &amp;lt;username&amp;gt; ... acl rules ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For example:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># user worker +@list +@connection ~jobs:* on &amp;gt;ffa9203c493aa99&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The special username &amp;#34;default&amp;#34; is used for new connections. If this user&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># has the &amp;#34;nopass&amp;#34; rule, then new connections will be immediately authenticated&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># as the &amp;#34;default&amp;#34; user without the need of any password provided via the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># AUTH command. Otherwise if the &amp;#34;default&amp;#34; user is not flagged with &amp;#34;nopass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the connections will start in not authenticated state, and will require&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># AUTH (or the HELLO command AUTH option) in order to be authenticated and&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># start to work.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The ACL rules that describe what a user can do are the following:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># on Enable the user: it is possible to authenticate as this user.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># off Disable the user: it&amp;#39;s no longer possible to authenticate&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># with this user, however the already authenticated connections&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># will still work.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># skip-sanitize-payload RESTORE dump-payload sanitization is skipped.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># sanitize-payload RESTORE dump-payload is sanitized (default).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># +&amp;lt;command&amp;gt; Allow the execution of that command.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># May be used with `|` for allowing subcommands (e.g &amp;#34;+config|get&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -&amp;lt;command&amp;gt; Disallow the execution of that command.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># May be used with `|` for blocking subcommands (e.g &amp;#34;-config|set&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># +@&amp;lt;category&amp;gt; Allow the execution of all the commands in such category&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># with valid categories are like @admin, @set, @sortedset, ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and so forth, see the full list in the server.c file where&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the Redis command table is described and defined.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The special category @all means all the commands, but currently&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># present in the server, and that will be loaded in the future&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># via modules.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># +&amp;lt;command&amp;gt;|first-arg Allow a specific first argument of an otherwise&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># disabled command. It is only supported on commands with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># no sub-commands, and is not allowed as negative form&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># like -SELECT|1, only additive starting with &amp;#34;+&amp;#34;. This&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># feature is deprecated and may be removed in the future.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># allcommands Alias for +@all. Note that it implies the ability to execute&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># all the future commands loaded via the modules system.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># nocommands Alias for -@all.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ~&amp;lt;pattern&amp;gt; Add a pattern of keys that can be mentioned as part of&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># commands. For instance ~* allows all the keys. The pattern&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is a glob-style pattern like the one of KEYS.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># It is possible to specify multiple patterns.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># %R~&amp;lt;pattern&amp;gt; Add key read pattern that specifies which keys can be read &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># from.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># %W~&amp;lt;pattern&amp;gt; Add key write pattern that specifies which keys can be&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># written to. &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># allkeys Alias for ~*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># resetkeys Flush the list of allowed keys patterns.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;amp;&amp;lt;pattern&amp;gt; Add a glob-style pattern of Pub/Sub channels that can be&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># accessed by the user. It is possible to specify multiple channel&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># patterns.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># allchannels Alias for &amp;amp;*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># resetchannels Flush the list of allowed channel patterns.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;gt;&amp;lt;password&amp;gt; Add this password to the list of valid password for the user.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For example &amp;gt;mypass will add &amp;#34;mypass&amp;#34; to the list.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This directive clears the &amp;#34;nopass&amp;#34; flag (see later).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;lt;&amp;lt;password&amp;gt; Remove this password from the list of valid passwords.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># nopass All the set passwords of the user are removed, and the user&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is flagged as requiring no password: it means that every&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># password will work against this user. If this directive is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># used for the default user, every new connection will be&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># immediately authenticated with the default user without&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># any explicit AUTH command required. Note that the &amp;#34;resetpass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># directive will clear this condition.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># resetpass Flush the list of allowed passwords. Moreover removes the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;#34;nopass&amp;#34; status. After &amp;#34;resetpass&amp;#34; the user has no associated&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># passwords and there is no way to authenticate without adding&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># some password (or setting it as &amp;#34;nopass&amp;#34; later).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># reset Performs the following actions: resetpass, resetkeys, off,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -@all. The user returns to the same state it has immediately&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># after its creation.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># (&amp;lt;options&amp;gt;) Create a new selector with the options specified within the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># parentheses and attach it to the user. Each option should be &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># space separated. The first character must be ( and the last &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># character must be ).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># clearselectors Remove all of the currently attached selectors. &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note this does not change the &amp;#34;root&amp;#34; user permissions,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># which are the permissions directly applied onto the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># user (outside the parentheses).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ACL rules can be specified in any order: for instance you can start with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># passwords, then flags, or key patterns. However note that the additive&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and subtractive rules will CHANGE MEANING depending on the ordering.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For instance see the following example:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># user alice on +@all -DEBUG ~* &amp;gt;somepassword&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This will allow &amp;#34;alice&amp;#34; to use all the commands with the exception of the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># DEBUG command, since +@all added all the commands to the set of the commands&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># alice can use, and later DEBUG was removed. However if we invert the order&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># of two ACL rules the result will be different:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># user alice on -DEBUG +@all ~* &amp;gt;somepassword&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Now DEBUG was removed when alice had yet no commands in the set of allowed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># commands, later all the commands are added, so the user will be able to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># execute everything.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Basically ACL rules are processed left-to-right.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The following is a list of command categories and their meanings:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * keyspace - Writing or reading from keys, databases, or their metadata &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in a type agnostic way. Includes DEL, RESTORE, DUMP, RENAME, EXISTS, DBSIZE,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># KEYS, EXPIRE, TTL, FLUSHALL, etc. Commands that may modify the keyspace,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># key or metadata will also have `write` category. Commands that only read&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the keyspace, key or metadata will have the `read` category.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * read - Reading from keys (values or metadata). Note that commands that don&amp;#39;t&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># interact with keys, will not have either `read` or `write`.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * write - Writing to keys (values or metadata)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * admin - Administrative commands. Normal applications will never need to use&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># these. Includes REPLICAOF, CONFIG, DEBUG, SAVE, MONITOR, ACL, SHUTDOWN, etc.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * dangerous - Potentially dangerous (each should be considered with care for&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># various reasons). This includes FLUSHALL, MIGRATE, RESTORE, SORT, KEYS,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># CLIENT, DEBUG, INFO, CONFIG, SAVE, REPLICAOF, etc.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * connection - Commands affecting the connection or other connections.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This includes AUTH, SELECT, COMMAND, CLIENT, ECHO, PING, etc.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * blocking - Potentially blocking the connection until released by another&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># command.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * fast - Fast O(1) commands. May loop on the number of arguments, but not the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># number of elements in the key.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * slow - All commands that are not Fast.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * pubsub - PUBLISH / SUBSCRIBE related&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * transaction - WATCH / MULTI / EXEC related commands.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * scripting - Scripting related.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * set - Data type: sets related.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * sortedset - Data type: zsets related.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * list - Data type: lists related.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * hash - Data type: hashes related.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * string - Data type: strings related.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * bitmap - Data type: bitmaps related.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * hyperloglog - Data type: hyperloglog related.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * geo - Data type: geo related.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * stream - Data type: streams related.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For more information about ACL configuration please refer to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the Redis web site at https://redis.io/topics/acl&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ACL LOG&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The ACL Log tracks failed commands and authentication events associated&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># with ACLs. The ACL Log is useful to troubleshoot failed commands blocked&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># by ACLs. The ACL Log is stored in memory. You can reclaim memory with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ACL LOG RESET. Define the maximum entry length of the ACL Log below.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">acllog&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">max&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">len&lt;/span> &lt;span class="mi">128&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Using an external ACL file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Instead of configuring users here in this file, it is possible to use&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># a stand-alone file just listing users. The two methods cannot be mixed:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># if you configure users here and at the same time you activate the external&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ACL file, the server will refuse to start.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The format of the external ACL user file is exactly the same as the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># format that is used inside redis.conf to describe users.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># aclfile /etc/redis/users.acl&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># IMPORTANT NOTE: starting with Redis 6 &amp;#34;requirepass&amp;#34; is just a compatibility&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># layer on top of the new ACL system. The option effect will be just setting&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the password for the default user. Clients will still authenticate using&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># AUTH &amp;lt;password&amp;gt; as usually, or more explicitly with AUTH default &amp;lt;password&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># if they follow the new protocol: both will work.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The requirepass is not compatible with aclfile option and the ACL LOAD&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># command, these will cause requirepass to be ignored.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># requirepass foobared&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># New users are initialized with restrictive permissions by default, via the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># equivalent of this ACL rule &amp;#39;off resetkeys -@all&amp;#39;. Starting with Redis 6.2, it&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is possible to manage access to Pub/Sub channels with ACL rules as well. The&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># default Pub/Sub channels permission if new users is controlled by the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># acl-pubsub-default configuration directive, which accepts one of these values:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># allchannels: grants access to all Pub/Sub channels&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># resetchannels: revokes access to all Pub/Sub channels&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># From Redis 7.0, acl-pubsub-default defaults to &amp;#39;resetchannels&amp;#39; permission.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># acl-pubsub-default resetchannels&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Command renaming (DEPRECATED).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ------------------------------------------------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># WARNING: avoid using this option if possible. Instead use ACLs to remove&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># commands from the default user, and put them only in some admin user you&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># create for administrative purposes.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ------------------------------------------------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># It is possible to change the name of dangerous commands in a shared&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># environment. For instance the CONFIG command may be renamed into something&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># hard to guess so that it will still be available for internal-use tools&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># but not available for general clients.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># It is also possible to completely kill a command by renaming it into&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># an empty string:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># rename-command CONFIG &amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Please note that changing the name of commands that are logged into the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># AOF file or transmitted to replicas may cause problems.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################### CLIENTS ####################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set the max number of connected clients at the same time. By default&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># this limit is set to 10000 clients, however if the Redis server is not&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># able to configure the process file limit to allow for the specified limit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the max number of allowed clients is set to the current file limit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># minus 32 (as Redis reserves a few file descriptors for internal uses).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Once the limit is reached Redis will close all the new connections sending&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># an error &amp;#39;max number of clients reached&amp;#39;.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># IMPORTANT: When Redis Cluster is used, the max number of connections is also&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># shared with the cluster bus: every node in the cluster will use two&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># connections, one incoming and another outgoing. It is important to size the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># limit accordingly in case of very large clusters.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># maxclients 10000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">############################## MEMORY MANAGEMENT ################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set a memory usage limit to the specified amount of bytes.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When the memory limit is reached Redis will try to remove keys&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># according to the eviction policy selected (see maxmemory-policy).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If Redis can&amp;#39;t remove keys according to the policy, or if the policy is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># set to &amp;#39;noeviction&amp;#39;, Redis will start to reply with errors to commands&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># that would use more memory, like SET, LPUSH, and so on, and will continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to reply to read-only commands like GET.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This option is usually useful when using Redis as an LRU or LFU cache, or to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># set a hard memory limit for an instance (using the &amp;#39;noeviction&amp;#39; policy).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># WARNING: If you have replicas attached to an instance with maxmemory on,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the size of the output buffers needed to feed the replicas are subtracted&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># from the used memory count, so that network problems / resyncs will&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># not trigger a loop where keys are evicted, and in turn the output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># buffer of replicas is full with DELs of keys evicted triggering the deletion&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># of more keys, and so forth until the database is completely emptied.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># In short... if you have replicas attached it is suggested that you set a lower&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># limit for maxmemory so that there is some free RAM on the system for replica&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># output buffers (but this is not needed if the policy is &amp;#39;noeviction&amp;#39;).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># maxmemory &amp;lt;bytes&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># MAXMEMORY POLICY: how Redis will select what to remove when maxmemory&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is reached. You can select one from the following behaviors:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># volatile-lru -&amp;gt; Evict using approximated LRU, only keys with an expire set.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># allkeys-lru -&amp;gt; Evict any key using approximated LRU.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># volatile-lfu -&amp;gt; Evict using approximated LFU, only keys with an expire set.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># allkeys-lfu -&amp;gt; Evict any key using approximated LFU.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># volatile-random -&amp;gt; Remove a random key having an expire set.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># allkeys-random -&amp;gt; Remove a random key, any key.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># volatile-ttl -&amp;gt; Remove the key with the nearest expire time (minor TTL)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># noeviction -&amp;gt; Don&amp;#39;t evict anything, just return an error on write operations.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># LRU means Least Recently Used&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># LFU means Least Frequently Used&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Both LRU, LFU and volatile-ttl are implemented using approximated&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># randomized algorithms.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note: with any of the above policies, when there are no suitable keys for&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># eviction, Redis will return an error on write operations that require&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># more memory. These are usually commands that create new keys, add data or&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># modify existing keys. A few examples are: SET, INCR, HSET, LPUSH, SUNIONSTORE,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># SORT (due to the STORE argument), and EXEC (if the transaction includes any&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># command that requires memory).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The default is:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># maxmemory-policy noeviction&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># LRU, LFU and minimal TTL algorithms are not precise algorithms but approximated&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># algorithms (in order to save memory), so you can tune it for speed or&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># accuracy. By default Redis will check five keys and pick the one that was&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># used least recently, you can change the sample size using the following&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># configuration directive.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The default of 5 produces good enough results. 10 Approximates very closely&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># true LRU but costs more CPU. 3 is faster but not very accurate.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># maxmemory-samples 5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Eviction processing is designed to function well with the default setting.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If there is an unusually large amount of write traffic, this value may need to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># be increased. Decreasing this value may reduce latency at the risk of&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># eviction processing effectiveness&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 0 = minimum latency, 10 = default, 100 = process without regard to latency&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># maxmemory-eviction-tenacity 10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Starting from Redis 5, by default a replica will ignore its maxmemory setting&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># (unless it is promoted to master after a failover or manually). It means&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># that the eviction of keys will be just handled by the master, sending the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># DEL commands to the replica as keys evict in the master side.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This behavior ensures that masters and replicas stay consistent, and is usually&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># what you want, however if your replica is writable, or you want the replica&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to have a different memory setting, and you are sure all the writes performed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to the replica are idempotent, then you may change this default (but be sure&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to understand what you are doing).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note that since the replica by default does not evict, it may end using more&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># memory than the one set via maxmemory (there are certain buffers that may&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># be larger on the replica, or data structures may sometimes take more memory&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and so forth). So make sure you monitor your replicas and make sure they&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># have enough memory to never hit a real out-of-memory condition before the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># master hits the configured maxmemory setting.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replica-ignore-maxmemory yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis reclaims expired keys in two ways: upon access when those keys are&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># found to be expired, and also in background, in what is called the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;#34;active expire key&amp;#34;. The key space is slowly and interactively scanned&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># looking for expired keys to reclaim, so that it is possible to free memory&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># of keys that are expired and will never be accessed again in a short time.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The default effort of the expire cycle will try to avoid having more than&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ten percent of expired keys still in memory, and will try to avoid consuming&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># more than 25% of total memory and to add latency to the system. However&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># it is possible to increase the expire &amp;#34;effort&amp;#34; that is normally set to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;#34;1&amp;#34;, to a greater value, up to the value &amp;#34;10&amp;#34;. At its maximum value the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># system will use more CPU, longer cycles (and technically may introduce&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># more latency), and will tolerate less already expired keys still present&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in the system. It&amp;#39;s a tradeoff between memory, CPU and latency.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># active-expire-effort 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">############################# LAZY FREEING ####################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis has two primitives to delete keys. One is called DEL and is a blocking&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># deletion of the object. It means that the server stops processing new commands&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in order to reclaim all the memory associated with an object in a synchronous&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># way. If the key deleted is associated with a small object, the time needed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in order to execute the DEL command is very small and comparable to most other&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># O(1) or O(log_N) commands in Redis. However if the key is associated with an&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># aggregated value containing millions of elements, the server can block for&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># a long time (even seconds) in order to complete the operation.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For the above reasons Redis also offers non blocking deletion primitives&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># such as UNLINK (non blocking DEL) and the ASYNC option of FLUSHALL and&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># FLUSHDB commands, in order to reclaim memory in background. Those commands&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># are executed in constant time. Another thread will incrementally free the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># object in the background as fast as possible.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># DEL, UNLINK and ASYNC option of FLUSHALL and FLUSHDB are user-controlled.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># It&amp;#39;s up to the design of the application to understand when it is a good&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># idea to use one or the other. However the Redis server sometimes has to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># delete keys or flush the whole database as a side effect of other operations.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Specifically Redis deletes objects independently of a user call in the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># following scenarios:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1) On eviction, because of the maxmemory and maxmemory policy configurations,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in order to make room for new data, without going over the specified&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># memory limit.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2) Because of expire: when a key with an associated time to live (see the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># EXPIRE command) must be deleted from memory.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 3) Because of a side effect of a command that stores data on a key that may&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># already exist. For example the RENAME command may delete the old key&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># content when it is replaced with another one. Similarly SUNIONSTORE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># or SORT with STORE option may delete existing keys. The SET command&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># itself removes any old content of the specified key in order to replace&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># it with the specified string.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 4) During replication, when a replica performs a full resynchronization with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># its master, the content of the whole database is removed in order to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># load the RDB file just transferred.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># In all the above cases the default is to delete objects in a blocking way,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># like if DEL was called. However you can configure each case specifically&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in order to instead release memory in a non-blocking way like if UNLINK&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># was called, using the following configuration directives.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">lazyfree&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">lazy&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">eviction&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">lazyfree&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">lazy&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">expire&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">lazyfree&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">lazy&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">del&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">replica&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">lazy&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">flush&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># It is also possible, for the case when to replace the user code DEL calls&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># with UNLINK calls is not easy, to modify the default behavior of the DEL&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># command to act exactly like UNLINK, using the following configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># directive:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">lazyfree&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">lazy&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">del&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># FLUSHDB, FLUSHALL, SCRIPT FLUSH and FUNCTION FLUSH support both asynchronous and synchronous&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># deletion, which can be controlled by passing the [SYNC|ASYNC] flags into the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># commands. When neither flag is passed, this directive will be used to determine&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># if the data should be deleted asynchronously.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">lazyfree&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">lazy&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">flush&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################ THREADED I/O #################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis is mostly single threaded, however there are certain threaded&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># operations such as UNLINK, slow I/O accesses and other things that are&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># performed on side threads.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Now it is also possible to handle Redis clients socket reads and writes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in different I/O threads. Since especially writing is so slow, normally&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis users use pipelining in order to speed up the Redis performances per&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># core, and spawn multiple instances in order to scale more. Using I/O&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># threads it is possible to easily speedup two times Redis without resorting&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to pipelining nor sharding of the instance.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default threading is disabled, we suggest enabling it only in machines&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># that have at least 4 or more cores, leaving at least one spare core.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Using more than 8 threads is unlikely to help much. We also recommend using&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># threaded I/O only if you actually have performance problems, with Redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># instances being able to use a quite big percentage of CPU time, otherwise&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># there is no point in using this feature.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># So for instance if you have a four cores boxes, try to use 2 or 3 I/O&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># threads, if you have a 8 cores, try to use 6 threads. In order to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># enable I/O threads use the following configuration directive:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># io-threads 4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Setting io-threads to 1 will just use the main thread as usual.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When I/O threads are enabled, we only use threads for writes, that is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to thread the write(2) syscall and transfer the client buffers to the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># socket. However it is also possible to enable threading of reads and&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># protocol parsing using the following configuration directive, by setting&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># it to yes:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># io-threads-do-reads no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Usually threading reads doesn&amp;#39;t help much.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># NOTE 1: This configuration directive cannot be changed at runtime via&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># CONFIG SET. Also, this feature currently does not work when SSL is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># enabled.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># NOTE 2: If you want to test the Redis speedup using redis-benchmark, make&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># sure you also run the benchmark itself in threaded mode, using the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># --threads option to match the number of Redis threads, otherwise you&amp;#39;ll not&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># be able to notice the improvements.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">############################ KERNEL OOM CONTROL ##############################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># On Linux, it is possible to hint the kernel OOM killer on what processes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># should be killed first when out of memory.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Enabling this feature makes Redis actively control the oom_score_adj value&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># for all its processes, depending on their role. The default scores will&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># attempt to have background child processes killed before all others, and&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replicas killed before masters.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis supports these options:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># no: Don&amp;#39;t make changes to oom-score-adj (default).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yes: Alias to &amp;#34;relative&amp;#34; see below.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># absolute: Values in oom-score-adj-values are written as is to the kernel.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># relative: Values are used relative to the initial value of oom_score_adj when&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the server starts and are then clamped to a range of -1000 to 1000.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Because typically the initial value is 0, they will often match the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># absolute values.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">oom&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">score&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">adj&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When oom-score-adj is used, this directive controls the specific values used&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># for master, replica and background child processes. Values range -2000 to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2000 (higher means more likely to be killed).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Unprivileged processes (not root, and without CAP_SYS_RESOURCE capabilities)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># can freely increase their value, but not decrease it below its initial&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># settings. This means that setting oom-score-adj to &amp;#34;relative&amp;#34; and setting the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># oom-score-adj-values to positive values will always succeed.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">oom&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">score&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">adj&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">values&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">200&lt;/span> &lt;span class="mi">800&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#################### KERNEL transparent hugepage CONTROL ######################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Usually the kernel Transparent Huge Pages control is set to &amp;#34;madvise&amp;#34; or&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># or &amp;#34;never&amp;#34; by default (/sys/kernel/mm/transparent_hugepage/enabled), in which&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># case this config has no effect. On systems in which it is set to &amp;#34;always&amp;#34;,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># redis will attempt to disable it specifically for the redis process in order&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to avoid latency problems specifically with fork(2) and CoW.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If for some reason you prefer to keep it enabled, you can set this config to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;#34;no&amp;#34; and the kernel global to &amp;#34;always&amp;#34;.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">disable&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">thp&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">############################## APPEND ONLY MODE ###############################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default Redis asynchronously dumps the dataset on disk. This mode is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># good enough in many applications, but an issue with the Redis process or&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># a power outage may result into a few minutes of writes lost (depending on&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the configured save points).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The Append Only File is an alternative persistence mode that provides&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># much better durability. For instance using the default data fsync policy&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># (see later in the config file) Redis can lose just one second of writes in a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># dramatic event like a server power outage, or a single write if something&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># wrong with the Redis process itself happens, but the operating system is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># still running correctly.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># AOF and RDB persistence can be enabled at the same time without problems.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If the AOF is enabled on startup Redis will load the AOF, that is the file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># with the better durability guarantees.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Please check https://redis.io/topics/persistence for more information.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#-appendonly no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The base name of the append only file.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis 7 and newer use a set of append-only files to persist the dataset&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and changes applied to it. There are two basic types of files in use:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># - Base files, which are a snapshot representing the complete state of the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># dataset at the time the file was created. Base files can be either in&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the form of RDB (binary serialized) or AOF (textual commands).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># - Incremental files, which contain additional commands that were applied&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to the dataset following the previous file.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># In addition, manifest files are used to track the files and the order in&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># which they were created and should be applied.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Append-only file names are created by Redis following a specific pattern.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The file name&amp;#39;s prefix is based on the &amp;#39;appendfilename&amp;#39; configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># parameter, followed by additional information about the sequence and type.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For example, if appendfilename is set to appendonly.aof, the following file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># names could be derived:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># - appendonly.aof.1.base.rdb as a base file.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># - appendonly.aof.1.incr.aof, appendonly.aof.2.incr.aof as incremental files.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># - appendonly.aof.manifest as a manifest file.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">appendfilename&lt;/span> &lt;span class="s2">&amp;#34;appendonly.aof&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For convenience, Redis stores all persistent append-only files in a dedicated&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># directory. The name of the directory is determined by the appenddirname&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># configuration parameter.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">appenddirname&lt;/span> &lt;span class="s2">&amp;#34;appendonlydir&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The fsync() call tells the Operating System to actually write data on disk&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># instead of waiting for more data in the output buffer. Some OS will really flush&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># data on disk, some other OS will just try to do it ASAP.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis supports three different modes:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># no: don&amp;#39;t fsync, just let the OS flush the data when it wants. Faster.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># always: fsync after every write to the append only log. Slow, Safest.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># everysec: fsync only one time every second. Compromise.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The default is &amp;#34;everysec&amp;#34;, as that&amp;#39;s usually the right compromise between&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># speed and data safety. It&amp;#39;s up to you to understand if you can relax this to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;#34;no&amp;#34; that will let the operating system flush the output buffer when&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># it wants, for better performances (but if you can live with the idea of&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># some data loss consider the default persistence mode that&amp;#39;s snapshotting),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># or on the contrary, use &amp;#34;always&amp;#34; that&amp;#39;s very slow but a bit safer than&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># everysec.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># More details please check the following article:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># http://antirez.com/post/redis-persistence-demystified.html&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If unsure, use &amp;#34;everysec&amp;#34;.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># appendfsync always&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">appendfsync&lt;/span> &lt;span class="n">everysec&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># appendfsync no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When the AOF fsync policy is set to always or everysec, and a background&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># saving process (a background save or AOF log background rewriting) is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># performing a lot of I/O against the disk, in some Linux configurations&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis may block too long on the fsync() call. Note that there is no fix for&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># this currently, as even performing fsync in a different thread will block&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># our synchronous write(2) call.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># In order to mitigate this problem it&amp;#39;s possible to use the following option&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># that will prevent fsync() from being called in the main process while a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># BGSAVE or BGREWRITEAOF is in progress.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This means that while another child is saving, the durability of Redis is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the same as &amp;#34;appendfsync no&amp;#34;. In practical terms, this means that it is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># possible to lose up to 30 seconds of log in the worst scenario (with the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># default Linux settings).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If you have latency problems turn this to &amp;#34;yes&amp;#34;. Otherwise leave it as&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;#34;no&amp;#34; that is the safest pick from the point of view of durability.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">no&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">appendfsync&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">on&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">rewrite&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Automatic rewrite of the append only file.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis is able to automatically rewrite the log file implicitly calling&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># BGREWRITEAOF when the AOF log size grows by the specified percentage.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This is how it works: Redis remembers the size of the AOF file after the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># latest rewrite (if no rewrite has happened since the restart, the size of&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the AOF at startup is used).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This base size is compared to the current size. If the current size is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># bigger than the specified percentage, the rewrite is triggered. Also&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># you need to specify a minimal size for the AOF file to be rewritten, this&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is useful to avoid rewriting the AOF file even if the percentage increase&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is reached but it is still pretty small.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Specify a percentage of zero in order to disable the automatic AOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># rewrite feature.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">auto&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">aof&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">rewrite&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">percentage&lt;/span> &lt;span class="mi">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">auto&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">aof&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">rewrite&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">min&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="mi">64&lt;/span>&lt;span class="n">mb&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># An AOF file may be found to be truncated at the end during the Redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># startup process, when the AOF data gets loaded back into memory.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This may happen when the system where Redis is running&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># crashes, especially when an ext4 filesystem is mounted without the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># data=ordered option (however this can&amp;#39;t happen when Redis itself&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># crashes or aborts but the operating system still works correctly).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis can either exit with an error when this happens, or load as much&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># data as possible (the default now) and start if the AOF file is found&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to be truncated at the end. The following option controls this behavior.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If aof-load-truncated is set to yes, a truncated AOF file is loaded and&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the Redis server starts emitting a log to inform the user of the event.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Otherwise if the option is set to no, the server aborts with an error&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and refuses to start. When the option is set to no, the user requires&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to fix the AOF file using the &amp;#34;redis-check-aof&amp;#34; utility before to restart&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the server.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note that if the AOF file will be found to be corrupted in the middle&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the server will still exit with an error. This option only applies when&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis will try to read more data from the AOF file but not enough bytes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># will be found.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">aof&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">load&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">truncated&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis can create append-only base files in either RDB or AOF formats. Using&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the RDB format is always faster and more efficient, and disabling it is only&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># supported for backward compatibility purposes.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">aof&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">rdb&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">preamble&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis supports recording timestamp annotations in the AOF to support restoring&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the data from a specific point-in-time. However, using this capability changes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the AOF format in a way that may not be compatible with existing AOF parsers.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">aof&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">timestamp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">enabled&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################ SHUTDOWN #####################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Maximum time to wait for replicas when shutting down, in seconds.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># During shut down, a grace period allows any lagging replicas to catch up with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the latest replication offset before the master exists. This period can&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># prevent data loss, especially for deployments without configured disk backups.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The &amp;#39;shutdown-timeout&amp;#39; value is the grace period&amp;#39;s duration in seconds. It is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># only applicable when the instance has replicas. To disable the feature, set&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the value to 0.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># shutdown-timeout 10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When Redis receives a SIGINT or SIGTERM, shutdown is initiated and by default&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># an RDB snapshot is written to disk in a blocking operation if save points are configured.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The options used on signaled shutdown can include the following values:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># default: Saves RDB snapshot only if save points are configured.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Waits for lagging replicas to catch up.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># save: Forces a DB saving operation even if no save points are configured.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># nosave: Prevents DB saving operation even if one or more save points are configured.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># now: Skips waiting for lagging replicas.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># force: Ignores any errors that would normally prevent the server from exiting.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Any combination of values is allowed as long as &amp;#34;save&amp;#34; and &amp;#34;nosave&amp;#34; are not set simultaneously.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: &amp;#34;nosave force now&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># shutdown-on-sigint default&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># shutdown-on-sigterm default&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################ NON-DETERMINISTIC LONG BLOCKING COMMANDS #####################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Maximum time in milliseconds for EVAL scripts, functions and in some cases&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># modules&amp;#39; commands before Redis can start processing or rejecting other clients.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If the maximum execution time is reached Redis will start to reply to most&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># commands with a BUSY error.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># In this state Redis will only allow a handful of commands to be executed.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For instance, SCRIPT KILL, FUNCTION KILL, SHUTDOWN NOSAVE and possibly some&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># module specific &amp;#39;allow-busy&amp;#39; commands.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># SCRIPT KILL and FUNCTION KILL will only be able to stop a script that did not&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yet call any write commands, so SHUTDOWN NOSAVE may be the only way to stop&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the server in the case a write command was already issued by the script when&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the user doesn&amp;#39;t want to wait for the natural termination of the script.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The default is 5 seconds. It is possible to set it to 0 or a negative value&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to disable this mechanism (uninterrupted execution). Note that in the past&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># this config had a different name, which is now an alias, so both of these do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the same:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># lua-time-limit 5000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># busy-reply-threshold 5000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################ REDIS CLUSTER ###############################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Normal Redis instances can&amp;#39;t be part of a Redis Cluster; only nodes that are&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># started as cluster nodes can. In order to start a Redis instance as a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster node enable the cluster support uncommenting the following:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-enabled yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Every cluster node has a cluster configuration file. This file is not&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># intended to be edited by hand. It is created and updated by Redis nodes.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Every Redis Cluster node requires a different cluster configuration file.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Make sure that instances running in the same system do not have&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># overlapping cluster configuration file names.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-config-file nodes-6379.conf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Cluster node timeout is the amount of milliseconds a node must be unreachable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># for it to be considered in failure state.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Most other internal time limits are a multiple of the node timeout.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-node-timeout 15000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The cluster port is the port that the cluster bus will listen for inbound connections on. When set &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to the default value, 0, it will be bound to the command port + 10000. Setting this value requires &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># you to specify the cluster bus port when executing cluster meet.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-port 0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># A replica of a failing master will avoid to start a failover if its data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># looks too old.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># There is no simple way for a replica to actually have an exact measure of&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># its &amp;#34;data age&amp;#34;, so the following two checks are performed:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1) If there are multiple replicas able to failover, they exchange messages&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in order to try to give an advantage to the replica with the best&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replication offset (more data from the master processed).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replicas will try to get their rank by offset, and apply to the start&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># of the failover a delay proportional to their rank.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2) Every single replica computes the time of the last interaction with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># its master. This can be the last ping or command received (if the master&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is still in the &amp;#34;connected&amp;#34; state), or the time that elapsed since the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># disconnection with the master (if the replication link is currently down).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If the last interaction is too old, the replica will not try to failover&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># at all.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The point &amp;#34;2&amp;#34; can be tuned by user. Specifically a replica will not perform&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the failover if, since the last interaction with the master, the time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># elapsed is greater than:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># (node-timeout * cluster-replica-validity-factor) + repl-ping-replica-period&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># So for example if node-timeout is 30 seconds, and the cluster-replica-validity-factor&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is 10, and assuming a default repl-ping-replica-period of 10 seconds, the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replica will not try to failover if it was not able to talk with the master&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># for longer than 310 seconds.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># A large cluster-replica-validity-factor may allow replicas with too old data to failover&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># a master, while a too small value may prevent the cluster from being able to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># elect a replica at all.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For maximum availability, it is possible to set the cluster-replica-validity-factor&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to a value of 0, which means, that replicas will always try to failover the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># master regardless of the last time they interacted with the master.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># (However they&amp;#39;ll always try to apply a delay proportional to their&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># offset rank).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Zero is the only value able to guarantee that when all the partitions heal&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the cluster will always be able to continue.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-replica-validity-factor 10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Cluster replicas are able to migrate to orphaned masters, that are masters&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># that are left without working replicas. This improves the cluster ability&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to resist to failures as otherwise an orphaned master can&amp;#39;t be failed over&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in case of failure if it has no working replicas.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replicas migrate to orphaned masters only if there are still at least a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># given number of other working replicas for their old master. This number&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is the &amp;#34;migration barrier&amp;#34;. A migration barrier of 1 means that a replica&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># will migrate only if there is at least 1 other working replica for its master&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and so forth. It usually reflects the number of replicas you want for every&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># master in your cluster.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Default is 1 (replicas migrate only if their masters remain with at least&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># one replica). To disable migration just set it to a very large value or&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># set cluster-allow-replica-migration to &amp;#39;no&amp;#39;.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># A value of 0 can be set but is useful only for debugging and dangerous&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in production.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-migration-barrier 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Turning off this option allows to use less automatic cluster configuration.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># It both disables migration to orphaned masters and migration from masters&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># that became empty.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Default is &amp;#39;yes&amp;#39; (allow automatic migrations).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-allow-replica-migration yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default Redis Cluster nodes stop accepting queries if they detect there&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is at least a hash slot uncovered (no available node is serving it).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This way if the cluster is partially down (for example a range of hash slots&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># are no longer covered) all the cluster becomes, eventually, unavailable.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># It automatically returns available as soon as all the slots are covered again.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># However sometimes you want the subset of the cluster which is working,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to continue to accept queries for the part of the key space that is still&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># covered. In order to do so, just set the cluster-require-full-coverage&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># option to no.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-require-full-coverage yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This option, when set to yes, prevents replicas from trying to failover its&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># master during master failures. However the replica can still perform a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># manual failover, if forced to do so.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This is useful in different scenarios, especially in the case of multiple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># data center operations, where we want one side to never be promoted if not&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in the case of a total DC failure.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-replica-no-failover no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This option, when set to yes, allows nodes to serve read traffic while the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster is in a down state, as long as it believes it owns the slots.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This is useful for two cases. The first case is for when an application&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># doesn&amp;#39;t require consistency of data during node failures or network partitions.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># One example of this is a cache, where as long as the node has the data it&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># should be able to serve it.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The second use case is for configurations that don&amp;#39;t meet the recommended&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># three shards but want to enable cluster mode and scale later. A&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># master outage in a 1 or 2 shard configuration causes a read/write outage to the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># entire cluster without this option set, with it set there is only a write outage.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Without a quorum of masters, slot ownership will not change automatically.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-allow-reads-when-down no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This option, when set to yes, allows nodes to serve pubsub shard traffic while&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the cluster is in a down state, as long as it believes it owns the slots.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This is useful if the application would like to use the pubsub feature even when&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the cluster global stable state is not OK. If the application wants to make sure only&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># one shard is serving a given channel, this feature should be kept as yes.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-allow-pubsubshard-when-down yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Cluster link send buffer limit is the limit on the memory usage of an individual&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster bus link&amp;#39;s send buffer in bytes. Cluster links would be freed if they exceed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># this limit. This is to primarily prevent send buffers from growing unbounded on links&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># toward slow peers (E.g. PubSub messages being piled up).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This limit is disabled by default. Enable this limit when &amp;#39;mem_cluster_links&amp;#39; INFO field&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and/or &amp;#39;send-buffer-allocated&amp;#39; entries in the &amp;#39;CLUSTER LINKS` command output continuously increase.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Minimum limit of 1gb is recommended so that cluster link buffer can fit in at least a single&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># PubSub message by default. (client-query-buffer-limit default value is 1gb)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-link-sendbuf-limit 0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Clusters can configure their announced hostname using this config. This is a common use case for &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># applications that need to use TLS Server Name Indication (SNI) or dealing with DNS based&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># routing. By default this value is only shown as additional metadata in the CLUSTER SLOTS&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># command, but can be changed using &amp;#39;cluster-preferred-endpoint-type&amp;#39; config. This value is &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># communicated along the clusterbus to all nodes, setting it to an empty string will remove &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the hostname and also propagate the removal.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-announce-hostname &amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Clusters can advertise how clients should connect to them using either their IP address,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># a user defined hostname, or by declaring they have no endpoint. Which endpoint is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># shown as the preferred endpoint is set by using the cluster-preferred-endpoint-type&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># config with values &amp;#39;ip&amp;#39;, &amp;#39;hostname&amp;#39;, or &amp;#39;unknown-endpoint&amp;#39;. This value controls how&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the endpoint returned for MOVED/ASKING requests as well as the first field of CLUSTER SLOTS. &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If the preferred endpoint type is set to hostname, but no announced hostname is set, a &amp;#39;?&amp;#39; &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># will be returned instead.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When a cluster advertises itself as having an unknown endpoint, it&amp;#39;s indicating that&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the server doesn&amp;#39;t know how clients can reach the cluster. This can happen in certain &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># networking situations where there are multiple possible routes to the node, and the &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># server doesn&amp;#39;t know which one the client took. In this case, the server is expecting&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the client to reach out on the same endpoint it used for making the last request, but use&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the port provided in the response.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-preferred-endpoint-type ip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># In order to setup your cluster make sure to read the documentation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># available at https://redis.io web site.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">########################## CLUSTER DOCKER/NAT support ########################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># In certain deployments, Redis Cluster nodes address discovery fails, because&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># addresses are NAT-ted or because ports are forwarded (the typical case is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Docker and other containers).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># In order to make Redis Cluster working in such environments, a static&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># configuration where each node knows its public address is needed. The&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># following four options are used for this scope, and are:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * cluster-announce-ip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * cluster-announce-port&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * cluster-announce-tls-port&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># * cluster-announce-bus-port&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Each instructs the node about its address, client ports (for connections&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># without and with TLS) and cluster message bus port. The information is then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># published in the header of the bus packets so that other nodes will be able to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># correctly map the address of the node publishing the information.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If cluster-tls is set to yes and cluster-announce-tls-port is omitted or set&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to zero, then cluster-announce-port refers to the TLS port. Note also that&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-announce-tls-port has no effect if cluster-tls is set to no.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If the above options are not used, the normal Redis Cluster auto-detection&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># will be used instead.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note that when remapped, the bus port may not be at the fixed offset of&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># clients port + 10000, so you can specify any port and bus-port depending&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># on how they get remapped. If the bus-port is not set, a fixed offset of&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 10000 will be used as usual.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-announce-ip 10.1.1.5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-announce-tls-port 6379&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-announce-port 0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cluster-announce-bus-port 6380&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################## SLOW LOG ###################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The Redis Slow Log is a system to log queries that exceeded a specified&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># execution time. The execution time does not include the I/O operations&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># like talking with the client, sending the reply and so forth,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># but just the time needed to actually execute the command (this is the only&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># stage of command execution where the thread is blocked and can not serve&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># other requests in the meantime).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># You can configure the slow log with two parameters: one tells Redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># what is the execution time, in microseconds, to exceed in order for the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># command to get logged, and the other parameter is the length of the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># slow log. When a new command is logged the oldest one is removed from the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># queue of logged commands.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The following time is expressed in microseconds, so 1000000 is equivalent&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to one second. Note that a negative number disables the slow log, while&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># a value of zero forces the logging of every command.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">slowlog&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">log&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">slower&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">than&lt;/span> &lt;span class="mi">10000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># There is no limit to this length. Just be aware that it will consume memory.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># You can reclaim memory used by the slow log with SLOWLOG RESET.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">slowlog&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">max&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">len&lt;/span> &lt;span class="mi">128&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################ LATENCY MONITOR ##############################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The Redis latency monitoring subsystem samples different operations&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># at runtime in order to collect data related to possible sources of&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># latency of a Redis instance.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Via the LATENCY command this information is available to the user that can&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># print graphs and obtain reports.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The system only logs operations that were performed in a time equal or&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># greater than the amount of milliseconds specified via the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># latency-monitor-threshold configuration directive. When its value is set&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to zero, the latency monitor is turned off.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default latency monitoring is disabled since it is mostly not needed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># if you don&amp;#39;t have latency issues, and collecting data has a performance&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># impact, that while very small, can be measured under big load. Latency&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># monitoring can easily be enabled at runtime using the command&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;#34;CONFIG SET latency-monitor-threshold &amp;lt;milliseconds&amp;gt;&amp;#34; if needed.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">latency&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">monitor&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">threshold&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">################################ LATENCY TRACKING ##############################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The Redis extended latency monitoring tracks the per command latencies and enables&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># exporting the percentile distribution via the INFO latencystats command,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and cumulative latency distributions (histograms) via the LATENCY command.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default, the extended latency monitoring is enabled since the overhead&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># of keeping track of the command latency is very small.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># latency-tracking yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default the exported latency percentiles via the INFO latencystats command&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># are the p50, p99, and p999.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># latency-tracking-info-percentiles 50 99 99.9&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">############################# EVENT NOTIFICATION ##############################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis can notify Pub/Sub clients about events happening in the key space.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This feature is documented at https://redis.io/topics/notifications&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For instance if keyspace events notification is enabled, and a client&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># performs a DEL operation on key &amp;#34;foo&amp;#34; stored in the Database 0, two&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># messages will be published via Pub/Sub:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># PUBLISH __keyspace@0__:foo del&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># PUBLISH __keyevent@0__:del foo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># It is possible to select the events that Redis will notify among a set&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># of classes. Every class is identified by a single character:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># K Keyspace events, published with __keyspace@&amp;lt;db&amp;gt;__ prefix.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># E Keyevent events, published with __keyevent@&amp;lt;db&amp;gt;__ prefix.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># g Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># $ String commands&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># l List commands&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># s Set commands&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># h Hash commands&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># z Sorted set commands&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># x Expired events (events generated every time a key expires)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># e Evicted events (events generated when a key is evicted for maxmemory)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># n New key events (Note: not included in the &amp;#39;A&amp;#39; class)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># t Stream commands&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># d Module key type events&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># m Key-miss events (Note: It is not included in the &amp;#39;A&amp;#39; class)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># A Alias for g$lshzxetd, so that the &amp;#34;AKE&amp;#34; string means all the events&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># (Except key-miss events which are excluded from &amp;#39;A&amp;#39; due to their&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># unique nature).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The &amp;#34;notify-keyspace-events&amp;#34; takes as argument a string that is composed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># of zero or multiple characters. The empty string means that notifications&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># are disabled.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example: to enable list and generic events, from the point of view of the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># event name, use:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># notify-keyspace-events Elg&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example 2: to get the stream of the expired keys subscribing to channel&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># name __keyevent@0__:expired use:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># notify-keyspace-events Ex&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default all notifications are disabled because most users don&amp;#39;t need&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># this feature and the feature has some overhead. Note that if you don&amp;#39;t&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># specify at least one of K or E, no events will be delivered.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">notify&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">keyspace&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">events&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">############################### ADVANCED CONFIG ###############################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Hashes are encoded using a memory efficient data structure when they have a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># small number of entries, and the biggest entry does not exceed a given&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># threshold. These thresholds can be configured using the following directives.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">hash&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">max&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">listpack&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">entries&lt;/span> &lt;span class="mi">512&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">hash&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">max&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">listpack&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="mi">64&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Lists are also encoded in a special way to save a lot of space.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The number of entries allowed per internal list node can be specified&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># as a fixed maximum size or a maximum number of elements.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For a fixed maximum size, use -5 through -1, meaning:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -5: max size: 64 Kb &amp;lt;-- not recommended for normal workloads&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -4: max size: 32 Kb &amp;lt;-- not recommended&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -3: max size: 16 Kb &amp;lt;-- probably not recommended&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -2: max size: 8 Kb &amp;lt;-- good&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -1: max size: 4 Kb &amp;lt;-- good&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Positive numbers mean store up to _exactly_ that number of elements&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># per list node.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The highest performing option is usually -2 (8 Kb size) or -1 (4 Kb size),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># but if your use case is unique, adjust the settings as necessary.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">list&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">max&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">listpack&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Lists may also be compressed.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Compress depth is the number of quicklist ziplist nodes from *each* side of&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the list to *exclude* from compression. The head and tail of the list&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># are always uncompressed for fast push/pop operations. Settings are:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 0: disable all list compression&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1: depth 1 means &amp;#34;don&amp;#39;t start compressing until after 1 node into the list,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># going from either the head or tail&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># So: [head]-&amp;gt;node-&amp;gt;node-&amp;gt;...-&amp;gt;node-&amp;gt;[tail]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># [head], [tail] will always be uncompressed; inner nodes will compress.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2: [head]-&amp;gt;[next]-&amp;gt;node-&amp;gt;node-&amp;gt;...-&amp;gt;node-&amp;gt;[prev]-&amp;gt;[tail]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2 here means: don&amp;#39;t compress head or head-&amp;gt;next or tail-&amp;gt;prev or tail,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># but compress all nodes between them.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 3: [head]-&amp;gt;[next]-&amp;gt;[next]-&amp;gt;node-&amp;gt;node-&amp;gt;...-&amp;gt;node-&amp;gt;[prev]-&amp;gt;[prev]-&amp;gt;[tail]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># etc.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">list&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">compress&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">depth&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Sets have a special encoding in just one case: when a set is composed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># of just strings that happen to be integers in radix 10 in the range&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># of 64 bit signed integers.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The following configuration setting sets the limit in the size of the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># set in order to use this special memory saving encoding.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">set&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">max&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">intset&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">entries&lt;/span> &lt;span class="mi">512&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Similarly to hashes and lists, sorted sets are also specially encoded in&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># order to save a lot of space. This encoding is only used when the length and&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># elements of a sorted set are below the following limits:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">zset&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">max&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">listpack&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">entries&lt;/span> &lt;span class="mi">128&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">zset&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">max&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">listpack&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="mi">64&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># HyperLogLog sparse representation bytes limit. The limit includes the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 16 bytes header. When an HyperLogLog using the sparse representation crosses&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># this limit, it is converted into the dense representation.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># A value greater than 16000 is totally useless, since at that point the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># dense representation is more memory efficient.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The suggested value is ~ 3000 in order to have the benefits of&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the space efficient encoding without slowing down too much PFADD,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># which is O(N) with the sparse encoding. The value can be raised to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ~ 10000 when CPU is not a concern, but space is, and the data set is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># composed of many HyperLogLogs with cardinality in the 0 - 15000 range.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">hll&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">sparse&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">max&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">bytes&lt;/span> &lt;span class="mi">3000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Streams macro node max size / items. The stream data structure is a radix&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tree of big nodes that encode multiple items inside. Using this configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># it is possible to configure how big a single node can be in bytes, and the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># maximum number of items it may contain before switching to a new node when&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># appending new stream entries. If any of the following settings are set to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># zero, the limit is ignored, so for instance it is possible to set just a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># max entries limit by setting max-bytes to 0 and max-entries to the desired&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># value.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">stream&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">max&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">bytes&lt;/span> &lt;span class="mi">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">stream&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">max&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">entries&lt;/span> &lt;span class="mi">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># order to help rehashing the main Redis hash table (the one mapping top-level&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># keys to values). The hash table implementation Redis uses (see dict.c)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># performs a lazy rehashing: the more operation you run into a hash table&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># that is rehashing, the more rehashing &amp;#34;steps&amp;#34; are performed, so if the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># server is idle the rehashing is never complete and some more memory is used&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># by the hash table.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The default is to use this millisecond 10 times every second in order to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># actively rehash the main dictionaries, freeing memory when possible.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If unsure:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># use &amp;#34;activerehashing no&amp;#34; if you have hard latency requirements and it is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># not a good thing in your environment that Redis can reply from time to time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to queries with 2 milliseconds delay.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># use &amp;#34;activerehashing yes&amp;#34; if you don&amp;#39;t have such hard requirements but&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># want to free memory asap when possible.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">activerehashing&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The client output buffer limits can be used to force disconnection of clients&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># that are not reading data from the server fast enough for some reason (a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># common reason is that a Pub/Sub client can&amp;#39;t consume messages as fast as the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># publisher can produce them).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The limit can be set differently for the three different classes of clients:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># normal -&amp;gt; normal clients including MONITOR clients&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># replica -&amp;gt; replica clients&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># pubsub -&amp;gt; clients subscribed to at least one pubsub channel or pattern&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The syntax of every client-output-buffer-limit directive is the following:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># client-output-buffer-limit &amp;lt;class&amp;gt; &amp;lt;hard limit&amp;gt; &amp;lt;soft limit&amp;gt; &amp;lt;soft seconds&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># A client is immediately disconnected once the hard limit is reached, or if&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the soft limit is reached and remains reached for the specified number of&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># seconds (continuously).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># So for instance if the hard limit is 32 megabytes and the soft limit is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 16 megabytes / 10 seconds, the client will get disconnected immediately&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># if the size of the output buffers reach 32 megabytes, but will also get&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># disconnected if the client reaches 16 megabytes and continuously overcomes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the limit for 10 seconds.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default normal clients are not limited because they don&amp;#39;t receive data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># without asking (in a push way), but just after a request, so only&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># asynchronous clients may create a scenario where data is requested faster&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># than it can read.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Instead there is a default limit for pubsub and replica clients, since&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># subscribers and replicas receive data in a push fashion.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note that it doesn&amp;#39;t make sense to set the replica clients output buffer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># limit lower than the repl-backlog-size config (partial sync will succeed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and then replica will get disconnected).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Such a configuration is ignored (the size of repl-backlog-size will be used).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This doesn&amp;#39;t have memory consumption implications since the replica client&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># will share the backlog buffers memory.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Both the hard or the soft limit can be disabled by setting them to zero.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">client&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">output&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">buffer&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">limit&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">client&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">output&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">buffer&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">limit&lt;/span> &lt;span class="n">replica&lt;/span> &lt;span class="mi">256&lt;/span>&lt;span class="n">mb&lt;/span> &lt;span class="mi">64&lt;/span>&lt;span class="n">mb&lt;/span> &lt;span class="mi">60&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">client&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">output&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">buffer&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">limit&lt;/span> &lt;span class="n">pubsub&lt;/span> &lt;span class="mi">32&lt;/span>&lt;span class="n">mb&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="n">mb&lt;/span> &lt;span class="mi">60&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Client query buffers accumulate new commands. They are limited to a fixed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># amount by default in order to avoid that a protocol desynchronization (for&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># instance due to a bug in the client) will lead to unbound memory usage in&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the query buffer. However you can configure it here if you have very special&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># needs, such us huge multi/exec requests or alike.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># client-query-buffer-limit 1gb&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># In some scenarios client connections can hog up memory leading to OOM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># errors or data eviction. To avoid this we can cap the accumulated memory&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># used by all client connections (all pubsub and normal clients). Once we&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># reach that limit connections will be dropped by the server freeing up&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># memory. The server will attempt to drop the connections using the most &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># memory first. We call this mechanism &amp;#34;client eviction&amp;#34;.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Client eviction is configured using the maxmemory-clients setting as follows:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 0 - client eviction is disabled (default)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># A memory value can be used for the client eviction threshold,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># for example:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># maxmemory-clients 1g&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># A percentage value (between 1% and 100%) means the client eviction threshold&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is based on a percentage of the maxmemory setting. For example to set client&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># eviction at 5% of maxmemory:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># maxmemory-clients 5%&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># In the Redis protocol, bulk requests, that are, elements representing single&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># strings, are normally limited to 512 mb. However you can change this limit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># here, but must be 1mb or greater&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># proto-max-bulk-len 512mb&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis calls an internal function to perform many background tasks, like&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># closing connections of clients in timeout, purging expired keys that are&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># never requested, and so forth.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Not all tasks are performed with the same frequency, but Redis checks for&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tasks to perform according to the specified &amp;#34;hz&amp;#34; value.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># By default &amp;#34;hz&amp;#34; is set to 10. Raising the value will use more CPU when&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis is idle, but at the same time will make Redis more responsive when&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># there are many keys expiring at the same time, and timeouts may be&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># handled with more precision.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The range is between 1 and 500, however a value over 100 is usually not&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># a good idea. Most users should use the default of 10 and raise this up to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 100 only in environments where very low latency is required.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">hz&lt;/span> &lt;span class="mi">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Normally it is useful to have an HZ value which is proportional to the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># number of clients connected. This is useful in order, for instance, to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># avoid too many clients are processed for each background task invocation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in order to avoid latency spikes.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Since the default HZ value by default is conservatively set to 10, Redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># offers, and enables by default, the ability to use an adaptive HZ value&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># which will temporarily raise when there are many connected clients.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When dynamic HZ is enabled, the actual configured HZ will be used&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># as a baseline, but multiples of the configured HZ value will be actually&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># used as needed once more clients are connected. In this way an idle&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># instance will use very little CPU time while a busy instance will be&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># more responsive.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dynamic&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">hz&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When a child rewrites the AOF file, if the following option is enabled&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the file will be fsync-ed every 4 MB of data generated. This is useful&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in order to commit the file to the disk more incrementally and avoid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># big latency spikes.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">aof&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">rewrite&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">incremental&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">fsync&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># When redis saves RDB file, if the following option is enabled&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the file will be fsync-ed every 4 MB of data generated. This is useful&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in order to commit the file to the disk more incrementally and avoid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># big latency spikes.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">rdb&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">save&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">incremental&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">fsync&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis LFU eviction (see maxmemory setting) can be tuned. However it is a good&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># idea to start with the default settings and only change them after investigating&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># how to improve the performances and how the keys LFU change over time, which&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is possible to inspect via the OBJECT FREQ command.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># There are two tunable parameters in the Redis LFU implementation: the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># counter logarithm factor and the counter decay time. It is important to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># understand what the two parameters mean before changing them.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The LFU counter is just 8 bits per key, it&amp;#39;s maximum value is 255, so Redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># uses a probabilistic increment with logarithmic behavior. Given the value&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># of the old counter, when a key is accessed, the counter is incremented in&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># this way:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1. A random number R between 0 and 1 is extracted.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2. A probability P is calculated as 1/(old_value*lfu_log_factor+1).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 3. The counter is incremented only if R &amp;lt; P.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The default lfu-log-factor is 10. This is a table of how the frequency&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># counter changes with a different number of accesses with different&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># logarithmic factors:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># +--------+------------+------------+------------+------------+------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># | factor | 100 hits | 1000 hits | 100K hits | 1M hits | 10M hits |&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># +--------+------------+------------+------------+------------+------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># | 0 | 104 | 255 | 255 | 255 | 255 |&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># +--------+------------+------------+------------+------------+------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># | 1 | 18 | 49 | 255 | 255 | 255 |&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># +--------+------------+------------+------------+------------+------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># | 10 | 10 | 18 | 142 | 255 | 255 |&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># +--------+------------+------------+------------+------------+------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># | 100 | 8 | 11 | 49 | 143 | 255 |&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># +--------+------------+------------+------------+------------+------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># NOTE: The above table was obtained by running the following commands:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># redis-benchmark -n 1000000 incr foo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># redis-cli object freq foo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># NOTE 2: The counter initial value is 5 in order to give new objects a chance&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to accumulate hits.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The counter decay time is the time, in minutes, that must elapse in order&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># for the key counter to be divided by two (or decremented if it has a value&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># less &amp;lt;= 10).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The default value for the lfu-decay-time is 1. A special value of 0 means to&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># decay the counter every time it happens to be scanned.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># lfu-log-factor 10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># lfu-decay-time 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">########################### ACTIVE DEFRAGMENTATION #######################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># What is active defragmentation?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Active (online) defragmentation allows a Redis server to compact the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># spaces left between small allocations and deallocations of data in memory,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># thus allowing to reclaim back memory.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Fragmentation is a natural process that happens with every allocator (but&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># less so with Jemalloc, fortunately) and certain workloads. Normally a server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># restart is needed in order to lower the fragmentation, or at least to flush&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># away all the data and create it again. However thanks to this feature&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># implemented by Oran Agra for Redis 4.0 this process can happen at runtime&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in a &amp;#34;hot&amp;#34; way, while the server is running.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Basically when the fragmentation is over a certain level (see the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># configuration options below) Redis will start to create new copies of the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># values in contiguous memory regions by exploiting certain specific Jemalloc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># features (in order to understand if an allocation is causing fragmentation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and to allocate it in a better place), and at the same time, will release the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># old copies of the data. This process, repeated incrementally for all the keys&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># will cause the fragmentation to drop back to normal values.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Important things to understand:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1. This feature is disabled by default, and only works if you compiled Redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to use the copy of Jemalloc we ship with the source code of Redis.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This is the default with Linux builds.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2. You never need to enable this feature if you don&amp;#39;t have fragmentation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># issues.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 3. Once you experience fragmentation, you can enable this feature when&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># needed with the command &amp;#34;CONFIG SET activedefrag yes&amp;#34;.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The configuration parameters are able to fine tune the behavior of the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># defragmentation process. If you are not sure about what they mean it is&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># a good idea to leave the defaults untouched.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Active defragmentation is disabled by default&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># activedefrag no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Minimum amount of fragmentation waste to start active defrag&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># active-defrag-ignore-bytes 100mb&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Minimum percentage of fragmentation to start active defrag&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># active-defrag-threshold-lower 10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Maximum percentage of fragmentation at which we use maximum effort&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># active-defrag-threshold-upper 100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Minimal effort for defrag in CPU percentage, to be used when the lower&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># threshold is reached&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># active-defrag-cycle-min 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Maximal effort for defrag in CPU percentage, to be used when the upper&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># threshold is reached&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># active-defrag-cycle-max 25&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Maximum number of set/hash/zset/list fields that will be processed from&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the main dictionary scan&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># active-defrag-max-scan-fields 1000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Jemalloc background thread for purging will be enabled by default&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">jemalloc&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">bg&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">thread&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># It is possible to pin different threads and processes of Redis to specific&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># CPUs in your system, in order to maximize the performances of the server.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This is useful both in order to pin different Redis threads in different&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># CPUs, but also in order to make sure that multiple Redis instances running&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># in the same host will be pinned to different CPUs.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Normally you can do this using the &amp;#34;taskset&amp;#34; command, however it is also&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># possible to this via Redis configuration directly, both in Linux and FreeBSD.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># You can pin the server/IO threads, bio threads, aof rewrite child process, and&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the bgsave child process. The syntax to specify the cpu list is the same as&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the taskset command:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set redis server/io threads to cpu affinity 0,2,4,6:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># server_cpulist 0-7:2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set bio threads to cpu affinity 1,3:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># bio_cpulist 1,3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set aof rewrite child process to cpu affinity 8,9,10,11:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># aof_rewrite_cpulist 8-11&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set bgsave child process to cpu affinity 1,10,11&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># bgsave_cpulist 1,10-11&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># In some cases redis will emit warnings and even refuse to start if it detects&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># that the system is in bad state, it is possible to suppress these warnings&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># by setting the following config which takes a space delimited list of warnings&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># to suppress&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ignore-warnings ARM64-COW-BUG&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>golang stream 和redis之间实现订阅和发送的</title><link>https://dev.leiyanhui.com/mq/redis-stream-mq/</link><pubDate>Sat, 19 Aug 2023 05:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/mq/redis-stream-mq/</guid><description>&lt;p>简单的实现，但是完成了 发布和订阅 ack 的操作&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;span class="lnt">83
&lt;/span>&lt;span class="lnt">84
&lt;/span>&lt;span class="lnt">85
&lt;/span>&lt;span class="lnt">86
&lt;/span>&lt;span class="lnt">87
&lt;/span>&lt;span class="lnt">88
&lt;/span>&lt;span class="lnt">89
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;ac_file&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;context&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;do_redis&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;do_time&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;time&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;github.com/redis/go-redis/v9&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">cfgCommon&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">redisDb&lt;/span> &lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UniversalClient&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ctx&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Background&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">cfgCommon&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">ac_file&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Get_serv_cfg_local_and_redis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cfgCommon&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//从本机和redis按照策略更新和获取配置文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">redisDb&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">do_redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetRedisDb_Client&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cfgCommon&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 发布消息到指定 Stream&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">redisDb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">XAdd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">XAddArgs&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Stream&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;mystream&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// Stream 名称&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Values&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{}{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;key1&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;value1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;key2&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;value2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}).&lt;/span>&lt;span class="nf">Result&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Failed to publish message:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 创建消费者组&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">groupName&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="s">&amp;#34;mygroup&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// _, err := redisDb.XGroupCreateMkStream(ctx, &amp;#34;mystream&amp;#34;, groupName, &amp;#34;$&amp;#34;).Result()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//_, err = redisDb.XGroupCreate(ctx, &amp;#34;mystream&amp;#34;, groupName, &amp;#34;$&amp;#34;).Result() //$ 是从末尾开始接受&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">redisDb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">XGroupCreate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;mystream&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">groupName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Result&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1">//0 是从头开始&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Failed to create consumer group:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Second&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 创建一个新的消息处理协程&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="nf">sub_get&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 在主协程中等待退出信号&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">select&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">sub_get&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">pubsub&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">redisDb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">XReadGroup&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">XReadGroupArgs&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Group&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;mygroup&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Consumer&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Streams&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s">&amp;#34;mystream&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Streams: []string{&amp;#34;mystream&amp;#34;, &amp;#34;0-0&amp;#34;},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Count&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Block&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">messages&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">pubsub&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Result&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Failed to read from stream:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">msg&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">messages&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">Messages&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Consumer %s received message from Stream %s with ID: %s, data: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">messages&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">Stream&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">msg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">msg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Values&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 确认已处理消息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">redisDb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">XAck&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;mystream&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;mygroup&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">msg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ID&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Result&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Failed to acknowledge message:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> else {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> // 从 messages 切片中移除已处理的消息
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> messages[0].Messages = messages[0].Messages[1:]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>redis集群一键导入到json以及 从json导出</title><link>https://dev.leiyanhui.com/mq/redis-json/</link><pubDate>Fri, 18 Aug 2023 12:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/mq/redis-json/</guid><description>&lt;p>实现 从redis单节点或者整个集群导出导入数据到json文件。&lt;/p>
&lt;p>redis-dump 也可以有同样的功能的，他已经5年多不更新了 而且 只支持有限的数据类型，更不支持 Cluster。&lt;/p>
&lt;p>没啥技术含量，花了30分钟写完。&lt;/p>
&lt;p>也可以导入到mysql,文末有参考（未测试，这部分代码由chatGPT完成）&lt;/p>
&lt;h2 id="特性和基本算法">特性和基本算法：
&lt;/h2>&lt;p>支持集群和单节点 和主从模式，因为我一直没用过哨兵集群，所以未测试，理论上也支持。&lt;br>
支持10种redis数据类型，详情看代码 &lt;br>
因为主要是为了 cluster模式，从节点可能太多，所以数据直接从主节点导出。
如果是单机模式/主从/哨兵模式，会直接导出。如果是 cluster 模式，会先查询出主节点，然后依次连接主节点导出（不连接从节点 是因为从节点太多，再去每一个节点选一个从节点太复杂也没必要） &lt;br>
导出 : 先判断是不是集群，如果不是，直接扫描所有key 依次导出。如果是集群 找到主节点，依次扫描所有key 导出。&lt;br>
导入：直接按照类型导入即可，集群会自己分片&lt;/p>
&lt;h2 id="代码">代码
&lt;/h2>&lt;h3 id="一些代码里面没有的说明">一些代码里面没有的说明
&lt;/h3>&lt;p>do_redis 只是连接redis集群去了，GetRedisDb_Client 的 代码参考：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">redis_addr_arr&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">redis_addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;,&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="c1">//redis_addr 是集群的每一个节点的ip:端口。如果是单节点 就一个即可&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">redis_addr_arr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">//连接到集群&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">redisClient&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewClusterClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ClusterOptions&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Addrs&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">redis_addr_arr&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">redis_psw&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">redisClient&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Options&lt;/span>&lt;span class="p">{&lt;/span> &lt;span class="c1">//连接到单点&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Addr&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">redis_addr&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">redis_psw&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">DB&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">redis_Clusterpsw&lt;/span> &lt;span class="p">=&lt;/span>&lt;span class="s">&amp;#34;12332434&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="完整代码">完整代码
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;span class="lnt">173
&lt;/span>&lt;span class="lnt">174
&lt;/span>&lt;span class="lnt">175
&lt;/span>&lt;span class="lnt">176
&lt;/span>&lt;span class="lnt">177
&lt;/span>&lt;span class="lnt">178
&lt;/span>&lt;span class="lnt">179
&lt;/span>&lt;span class="lnt">180
&lt;/span>&lt;span class="lnt">181
&lt;/span>&lt;span class="lnt">182
&lt;/span>&lt;span class="lnt">183
&lt;/span>&lt;span class="lnt">184
&lt;/span>&lt;span class="lnt">185
&lt;/span>&lt;span class="lnt">186
&lt;/span>&lt;span class="lnt">187
&lt;/span>&lt;span class="lnt">188
&lt;/span>&lt;span class="lnt">189
&lt;/span>&lt;span class="lnt">190
&lt;/span>&lt;span class="lnt">191
&lt;/span>&lt;span class="lnt">192
&lt;/span>&lt;span class="lnt">193
&lt;/span>&lt;span class="lnt">194
&lt;/span>&lt;span class="lnt">195
&lt;/span>&lt;span class="lnt">196
&lt;/span>&lt;span class="lnt">197
&lt;/span>&lt;span class="lnt">198
&lt;/span>&lt;span class="lnt">199
&lt;/span>&lt;span class="lnt">200
&lt;/span>&lt;span class="lnt">201
&lt;/span>&lt;span class="lnt">202
&lt;/span>&lt;span class="lnt">203
&lt;/span>&lt;span class="lnt">204
&lt;/span>&lt;span class="lnt">205
&lt;/span>&lt;span class="lnt">206
&lt;/span>&lt;span class="lnt">207
&lt;/span>&lt;span class="lnt">208
&lt;/span>&lt;span class="lnt">209
&lt;/span>&lt;span class="lnt">210
&lt;/span>&lt;span class="lnt">211
&lt;/span>&lt;span class="lnt">212
&lt;/span>&lt;span class="lnt">213
&lt;/span>&lt;span class="lnt">214
&lt;/span>&lt;span class="lnt">215
&lt;/span>&lt;span class="lnt">216
&lt;/span>&lt;span class="lnt">217
&lt;/span>&lt;span class="lnt">218
&lt;/span>&lt;span class="lnt">219
&lt;/span>&lt;span class="lnt">220
&lt;/span>&lt;span class="lnt">221
&lt;/span>&lt;span class="lnt">222
&lt;/span>&lt;span class="lnt">223
&lt;/span>&lt;span class="lnt">224
&lt;/span>&lt;span class="lnt">225
&lt;/span>&lt;span class="lnt">226
&lt;/span>&lt;span class="lnt">227
&lt;/span>&lt;span class="lnt">228
&lt;/span>&lt;span class="lnt">229
&lt;/span>&lt;span class="lnt">230
&lt;/span>&lt;span class="lnt">231
&lt;/span>&lt;span class="lnt">232
&lt;/span>&lt;span class="lnt">233
&lt;/span>&lt;span class="lnt">234
&lt;/span>&lt;span class="lnt">235
&lt;/span>&lt;span class="lnt">236
&lt;/span>&lt;span class="lnt">237
&lt;/span>&lt;span class="lnt">238
&lt;/span>&lt;span class="lnt">239
&lt;/span>&lt;span class="lnt">240
&lt;/span>&lt;span class="lnt">241
&lt;/span>&lt;span class="lnt">242
&lt;/span>&lt;span class="lnt">243
&lt;/span>&lt;span class="lnt">244
&lt;/span>&lt;span class="lnt">245
&lt;/span>&lt;span class="lnt">246
&lt;/span>&lt;span class="lnt">247
&lt;/span>&lt;span class="lnt">248
&lt;/span>&lt;span class="lnt">249
&lt;/span>&lt;span class="lnt">250
&lt;/span>&lt;span class="lnt">251
&lt;/span>&lt;span class="lnt">252
&lt;/span>&lt;span class="lnt">253
&lt;/span>&lt;span class="lnt">254
&lt;/span>&lt;span class="lnt">255
&lt;/span>&lt;span class="lnt">256
&lt;/span>&lt;span class="lnt">257
&lt;/span>&lt;span class="lnt">258
&lt;/span>&lt;span class="lnt">259
&lt;/span>&lt;span class="lnt">260
&lt;/span>&lt;span class="lnt">261
&lt;/span>&lt;span class="lnt">262
&lt;/span>&lt;span class="lnt">263
&lt;/span>&lt;span class="lnt">264
&lt;/span>&lt;span class="lnt">265
&lt;/span>&lt;span class="lnt">266
&lt;/span>&lt;span class="lnt">267
&lt;/span>&lt;span class="lnt">268
&lt;/span>&lt;span class="lnt">269
&lt;/span>&lt;span class="lnt">270
&lt;/span>&lt;span class="lnt">271
&lt;/span>&lt;span class="lnt">272
&lt;/span>&lt;span class="lnt">273
&lt;/span>&lt;span class="lnt">274
&lt;/span>&lt;span class="lnt">275
&lt;/span>&lt;span class="lnt">276
&lt;/span>&lt;span class="lnt">277
&lt;/span>&lt;span class="lnt">278
&lt;/span>&lt;span class="lnt">279
&lt;/span>&lt;span class="lnt">280
&lt;/span>&lt;span class="lnt">281
&lt;/span>&lt;span class="lnt">282
&lt;/span>&lt;span class="lnt">283
&lt;/span>&lt;span class="lnt">284
&lt;/span>&lt;span class="lnt">285
&lt;/span>&lt;span class="lnt">286
&lt;/span>&lt;span class="lnt">287
&lt;/span>&lt;span class="lnt">288
&lt;/span>&lt;span class="lnt">289
&lt;/span>&lt;span class="lnt">290
&lt;/span>&lt;span class="lnt">291
&lt;/span>&lt;span class="lnt">292
&lt;/span>&lt;span class="lnt">293
&lt;/span>&lt;span class="lnt">294
&lt;/span>&lt;span class="lnt">295
&lt;/span>&lt;span class="lnt">296
&lt;/span>&lt;span class="lnt">297
&lt;/span>&lt;span class="lnt">298
&lt;/span>&lt;span class="lnt">299
&lt;/span>&lt;span class="lnt">300
&lt;/span>&lt;span class="lnt">301
&lt;/span>&lt;span class="lnt">302
&lt;/span>&lt;span class="lnt">303
&lt;/span>&lt;span class="lnt">304
&lt;/span>&lt;span class="lnt">305
&lt;/span>&lt;span class="lnt">306
&lt;/span>&lt;span class="lnt">307
&lt;/span>&lt;span class="lnt">308
&lt;/span>&lt;span class="lnt">309
&lt;/span>&lt;span class="lnt">310
&lt;/span>&lt;span class="lnt">311
&lt;/span>&lt;span class="lnt">312
&lt;/span>&lt;span class="lnt">313
&lt;/span>&lt;span class="lnt">314
&lt;/span>&lt;span class="lnt">315
&lt;/span>&lt;span class="lnt">316
&lt;/span>&lt;span class="lnt">317
&lt;/span>&lt;span class="lnt">318
&lt;/span>&lt;span class="lnt">319
&lt;/span>&lt;span class="lnt">320
&lt;/span>&lt;span class="lnt">321
&lt;/span>&lt;span class="lnt">322
&lt;/span>&lt;span class="lnt">323
&lt;/span>&lt;span class="lnt">324
&lt;/span>&lt;span class="lnt">325
&lt;/span>&lt;span class="lnt">326
&lt;/span>&lt;span class="lnt">327
&lt;/span>&lt;span class="lnt">328
&lt;/span>&lt;span class="lnt">329
&lt;/span>&lt;span class="lnt">330
&lt;/span>&lt;span class="lnt">331
&lt;/span>&lt;span class="lnt">332
&lt;/span>&lt;span class="lnt">333
&lt;/span>&lt;span class="lnt">334
&lt;/span>&lt;span class="lnt">335
&lt;/span>&lt;span class="lnt">336
&lt;/span>&lt;span class="lnt">337
&lt;/span>&lt;span class="lnt">338
&lt;/span>&lt;span class="lnt">339
&lt;/span>&lt;span class="lnt">340
&lt;/span>&lt;span class="lnt">341
&lt;/span>&lt;span class="lnt">342
&lt;/span>&lt;span class="lnt">343
&lt;/span>&lt;span class="lnt">344
&lt;/span>&lt;span class="lnt">345
&lt;/span>&lt;span class="lnt">346
&lt;/span>&lt;span class="lnt">347
&lt;/span>&lt;span class="lnt">348
&lt;/span>&lt;span class="lnt">349
&lt;/span>&lt;span class="lnt">350
&lt;/span>&lt;span class="lnt">351
&lt;/span>&lt;span class="lnt">352
&lt;/span>&lt;span class="lnt">353
&lt;/span>&lt;span class="lnt">354
&lt;/span>&lt;span class="lnt">355
&lt;/span>&lt;span class="lnt">356
&lt;/span>&lt;span class="lnt">357
&lt;/span>&lt;span class="lnt">358
&lt;/span>&lt;span class="lnt">359
&lt;/span>&lt;span class="lnt">360
&lt;/span>&lt;span class="lnt">361
&lt;/span>&lt;span class="lnt">362
&lt;/span>&lt;span class="lnt">363
&lt;/span>&lt;span class="lnt">364
&lt;/span>&lt;span class="lnt">365
&lt;/span>&lt;span class="lnt">366
&lt;/span>&lt;span class="lnt">367
&lt;/span>&lt;span class="lnt">368
&lt;/span>&lt;span class="lnt">369
&lt;/span>&lt;span class="lnt">370
&lt;/span>&lt;span class="lnt">371
&lt;/span>&lt;span class="lnt">372
&lt;/span>&lt;span class="lnt">373
&lt;/span>&lt;span class="lnt">374
&lt;/span>&lt;span class="lnt">375
&lt;/span>&lt;span class="lnt">376
&lt;/span>&lt;span class="lnt">377
&lt;/span>&lt;span class="lnt">378
&lt;/span>&lt;span class="lnt">379
&lt;/span>&lt;span class="lnt">380
&lt;/span>&lt;span class="lnt">381
&lt;/span>&lt;span class="lnt">382
&lt;/span>&lt;span class="lnt">383
&lt;/span>&lt;span class="lnt">384
&lt;/span>&lt;span class="lnt">385
&lt;/span>&lt;span class="lnt">386
&lt;/span>&lt;span class="lnt">387
&lt;/span>&lt;span class="lnt">388
&lt;/span>&lt;span class="lnt">389
&lt;/span>&lt;span class="lnt">390
&lt;/span>&lt;span class="lnt">391
&lt;/span>&lt;span class="lnt">392
&lt;/span>&lt;span class="lnt">393
&lt;/span>&lt;span class="lnt">394
&lt;/span>&lt;span class="lnt">395
&lt;/span>&lt;span class="lnt">396
&lt;/span>&lt;span class="lnt">397
&lt;/span>&lt;span class="lnt">398
&lt;/span>&lt;span class="lnt">399
&lt;/span>&lt;span class="lnt">400
&lt;/span>&lt;span class="lnt">401
&lt;/span>&lt;span class="lnt">402
&lt;/span>&lt;span class="lnt">403
&lt;/span>&lt;span class="lnt">404
&lt;/span>&lt;span class="lnt">405
&lt;/span>&lt;span class="lnt">406
&lt;/span>&lt;span class="lnt">407
&lt;/span>&lt;span class="lnt">408
&lt;/span>&lt;span class="lnt">409
&lt;/span>&lt;span class="lnt">410
&lt;/span>&lt;span class="lnt">411
&lt;/span>&lt;span class="lnt">412
&lt;/span>&lt;span class="lnt">413
&lt;/span>&lt;span class="lnt">414
&lt;/span>&lt;span class="lnt">415
&lt;/span>&lt;span class="lnt">416
&lt;/span>&lt;span class="lnt">417
&lt;/span>&lt;span class="lnt">418
&lt;/span>&lt;span class="lnt">419
&lt;/span>&lt;span class="lnt">420
&lt;/span>&lt;span class="lnt">421
&lt;/span>&lt;span class="lnt">422
&lt;/span>&lt;span class="lnt">423
&lt;/span>&lt;span class="lnt">424
&lt;/span>&lt;span class="lnt">425
&lt;/span>&lt;span class="lnt">426
&lt;/span>&lt;span class="lnt">427
&lt;/span>&lt;span class="lnt">428
&lt;/span>&lt;span class="lnt">429
&lt;/span>&lt;span class="lnt">430
&lt;/span>&lt;span class="lnt">431
&lt;/span>&lt;span class="lnt">432
&lt;/span>&lt;span class="lnt">433
&lt;/span>&lt;span class="lnt">434
&lt;/span>&lt;span class="lnt">435
&lt;/span>&lt;span class="lnt">436
&lt;/span>&lt;span class="lnt">437
&lt;/span>&lt;span class="lnt">438
&lt;/span>&lt;span class="lnt">439
&lt;/span>&lt;span class="lnt">440
&lt;/span>&lt;span class="lnt">441
&lt;/span>&lt;span class="lnt">442
&lt;/span>&lt;span class="lnt">443
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;ac_file&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;coder&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;context&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;do_redis&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;do_time&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;encoding/json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;os&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;strconv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;strings&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;github.com/redis/go-redis/v9&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">cfgCommon&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">redisDb&lt;/span> &lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UniversalClient&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">redisDb_back&lt;/span> &lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UniversalClient&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ctx&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Background&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">nowTimestamp&lt;/span> &lt;span class="kt">int64&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">cfgCommon&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">ac_file&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Get_serv_cfg_local_and_redis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cfgCommon&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//从本机和redis按照策略更新和获取配置文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">redisDb&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">do_redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetRedisDb_Client&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cfgCommon&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">redisDb_back&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">do_redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetRedisBackDb_Client&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cfgCommon&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="nx">do_time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NowTimestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">nowTimestamp&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//秒 时间戳定时器 避免程序多次调用&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">Save_toJson&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;redis_db_date.json&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">redisDb&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//load_from_json(&amp;#34;redis_db_date.json&amp;#34;, redisDb)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">load_from_json&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;redis_db_date.json&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">redisDb_back&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//fmt.Println(&amp;#34;操作完成&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">load_from_json&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">filename&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">db&lt;/span> &lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UniversalClient&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">filename&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error reading file:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">restore_redis_db&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">Save_toJson&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">filename&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">db&lt;/span> &lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UniversalClient&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">redis_db_date&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 判断客户端是否连接到 Redis 集群&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ClusterClient&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 获取集群节点信息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">stateCmd&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ClusterNodes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Background&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">stateCmd&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Result&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">redis_Clusterpsw&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">coder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">JsonGetStr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cfgCommon&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;redis&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;db&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//单独配置一下密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 解析主节点信息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">lines&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;\n&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">line&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">lines&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fields&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fields&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">line&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fields&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">fields&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s">&amp;#34;master&amp;#34;&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">fields&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s">&amp;#34;myself,master&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">nodeAddr&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">fields&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">add&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">nodeAddr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;@&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">masterClient&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Options&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Addr&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">add&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">redis_Clusterpsw&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">redis_db_dateThis&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">back_redis_db&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">masterClient&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">m1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">m2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">redis_db_date&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">json&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Unmarshal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">redis_db_date&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">m1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;redis_db_date&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">redis_db_dateThis&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">json&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Unmarshal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">redis_db_dateThis&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">m2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;redis_db_dateThis&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">add&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">m2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// 合并两个映射&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">k&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">m2&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">m1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">v&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">mergedData&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">json&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Marshal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">m1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 将合并后的映射重新编码为 JSON 字符串&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;mergedData&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">redis_db_date&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">mergedData&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">masterClient&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">redis_db_date&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nf">back_redis_db&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">db&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">tmp_data&lt;/span> &lt;span class="kd">interface&lt;/span>&lt;span class="p">{}&lt;/span> &lt;span class="c1">// 创建一个空接口用于解析 JSON 数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">errJson&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">json&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Unmarshal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">redis_db_date&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">tmp_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">errJson&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;redis_db_date 解析 JSON 失败:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">errJson&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">formattedJSON&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">json&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">MarshalIndent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">tmp_data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34; &amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 格式化 JSON 数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;redis_db_date 格式化 JSON 失败:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">redis_db_date&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">formattedJSON&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WriteFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">filename&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">redis_db_date&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mo">0644&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error writing file:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">restore_redis_db&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">jsonData&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">db&lt;/span> &lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UniversalClient&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 解析导出的 JSON 数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">importedData&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">json&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Unmarshal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">jsonData&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">importedData&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error unmarshalling JSON data:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 遍历导入的数据并根据类型将其存储到 Redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">value&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">importedData&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dataMap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid data format for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dataType&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dataMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">].(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid data type for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dataValue&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dataMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid data value for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">switch&lt;/span> &lt;span class="nx">dataType&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;string&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dataValue&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Err&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error setting value for key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;list&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">RPush&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dataValue&lt;/span>&lt;span class="p">.([]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Err&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error pushing values to list key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;hash&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">hashValues&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dataValue&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid hash values for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">HMSet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">hashValues&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Err&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error setting hash values for key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;set&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SAdd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dataValue&lt;/span>&lt;span class="p">.([]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Err&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error adding values to set key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;zset&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">zsetValues&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dataValue&lt;/span>&lt;span class="p">.([]&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid sorted set values for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">zsetEntries&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Z&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">zsetValue&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">zsetValues&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">scoreStr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">zsetValue&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;score&amp;#34;&lt;/span>&lt;span class="p">].(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid sorted set entry score for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">score&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">strconv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ParseFloat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">scoreStr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">64&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error parsing score for key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">member&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">zsetValue&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">].(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid sorted set entry member for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">zsetEntries&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">zsetEntries&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Score&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">score&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Member&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">member&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ZAdd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">zsetEntries&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Err&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error adding values to sorted set key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;bitmaps&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">bitmapsValues&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dataValue&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="kt">int64&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid bitmaps values for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetBit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">bitmapsValues&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="nf">Err&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error setting bitmaps values for key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;hyperloglogs&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">hyperloglogsValues&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dataValue&lt;/span>&lt;span class="p">.([]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid hyperloglogs values for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">PFAdd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">hyperloglogsValues&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Err&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error setting hyperloglogs values for key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;geospatial&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">geospatialValues&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dataValue&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid geospatial values for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">geoLocation&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">GeoLocation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">member&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">coordinates&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">geospatialValues&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">coordinateMap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">coordinates&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid geospatial coordinate for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">longitudeStr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">coordinateMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;longitude&amp;#34;&lt;/span>&lt;span class="p">].(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid geospatial longitude for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">latitudeStr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">coordinateMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;latitude&amp;#34;&lt;/span>&lt;span class="p">].(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid geospatial latitude for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">longitude&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">strconv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ParseFloat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">longitudeStr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">64&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error parsing longitude for key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">latitude&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">strconv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ParseFloat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">latitudeStr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">64&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error parsing latitude for key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">geoLocation&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">geoLocation&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">GeoLocation&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">member&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Longitude&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">longitude&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Latitude&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">latitude&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GeoAdd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">geoLocation&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Err&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error adding values to geospatial key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;bitfield&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">bitfieldValues&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dataValue&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid bitfield values for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">BitField&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">bitfieldValues&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Err&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error setting bitfield values for key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;stream&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">streamEntries&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dataValue&lt;/span>&lt;span class="p">.([]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid stream entries for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Del&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 这里需要根据情况判断是否应该先删掉 对应的key 不然原来key内stream有更大的id大的数据的情况下无法写入更小id的数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">entry&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">streamEntries&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">entryMap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">entry&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid stream entry for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">streamID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">entryMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;ID&amp;#34;&lt;/span>&lt;span class="p">].(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid stream ID for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">streamValues&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">entryMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;Values&amp;#34;&lt;/span>&lt;span class="p">].(&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid values for stream entry with ID %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">streamID&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">XAdd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">XAddArgs&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Stream&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ID&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">streamID&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Values&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">streamValues&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}).&lt;/span>&lt;span class="nf">Err&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error adding entry to stream key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">default&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Unsupported data type for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">back_redis_db&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">db&lt;/span> &lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UniversalClient&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">jsonData&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 获取所有键&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">keys&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Keys&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;*&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Val&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 创建一个空的 map 用于存储结果&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 遍历键并获取对应的值和类型&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">keys&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dataType&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Val&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 根据不同的数据类型获取值&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">switch&lt;/span> &lt;span class="nx">dataType&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;string&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">value&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Val&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{}{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dataType&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;list&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">values&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">LRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Val&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{}{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dataType&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">values&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;hash&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">values&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">HGetAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Val&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{}{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dataType&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">values&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;set&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">values&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SMembers&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Val&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{}{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dataType&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">values&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;zset&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">values&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ZRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Val&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{}{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dataType&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">values&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;bitmaps&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">value&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetBit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Val&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{}{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dataType&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;hyperloglogs&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">value&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">PFCount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Val&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{}{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dataType&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;geospatial&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">values&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GeoRadius&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">GeoRadiusQuery&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">Unit&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;km&amp;#34;&lt;/span>&lt;span class="p">}).&lt;/span>&lt;span class="nf">Val&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{}{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dataType&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">values&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;bitfield&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">value&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">BitField&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;GET&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;u4&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Val&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{}{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dataType&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;stream&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">streamValues&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">XRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;-&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;+&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Val&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{}{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dataType&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">streamValues&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">default&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Unsupported data type for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 将结果转换为 JSON 格式&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">jsonData&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">json&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">MarshalIndent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">result&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34; &amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error marshalling data to JSON:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="导入导出到mysql">导入导出到mysql
&lt;/h2>&lt;p>未经测试，也实在没必要&lt;/p>
&lt;p>数据库结构&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mytable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AUTO_INCREMENT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="k">key&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="k">type&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">created_at&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TIMESTAMP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CURRENT_TIMESTAMP&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>代码部分&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">back_redis_db&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 查询MySQL中的数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">rows&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">mysqlDb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Query&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;SELECT key, type, value FROM mytable&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error querying MySQL:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 遍历查询结果并根据类型将数据存储到Redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Next&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dataType&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">value&lt;/span> &lt;span class="nx">sql&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">NullString&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Scan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">dataType&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error scanning MySQL rows:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Valid&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid value for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">switch&lt;/span> &lt;span class="nx">dataType&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;string&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">redisDb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">String&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Err&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error setting value for key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;list&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 查询MySQL中的列表值并将其存储到Redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">listValues&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">mysqlDb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Query&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;SELECT value FROM mytable WHERE key = ? AND type = ?&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dataType&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error querying list values for key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nx">listValues&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">values&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">listValues&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Next&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">v&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">listValues&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Scan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error scanning list values for key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">values&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">values&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">redisDb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">RPush&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">values&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Err&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error pushing values to list key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 其他数据类型的处理类似...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">default&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Unsupported data type for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Err&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error iterating MySQL rows:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">restore_mysql_db&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">jsonData&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 解析导出的 JSON 数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">importedData&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">json&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Unmarshal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">jsonData&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">importedData&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error unmarshalling JSON data:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 遍历导入的数据并根据类型将其存储到MySQL&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">value&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">importedData&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dataMap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid data format for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dataType&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dataMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">].(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid data type for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dataValue&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dataMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Invalid data value for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">switch&lt;/span> &lt;span class="nx">dataType&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;string&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">mysqlDb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Exec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;INSERT INTO mytable (key, type, value) VALUES (?, ?, ?)&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dataType&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dataValue&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error inserting value for key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;list&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">values&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dataValue&lt;/span>&lt;span class="p">.([]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">values&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">mysqlDb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Exec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;INSERT INTO mytable (key, type, value) VALUES (?, ?, ?)&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dataType&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error inserting value for key %s: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 其他数据类型的处理类似...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">default&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Unsupported data type for key %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>redis 替代 mqtt 和自定义协议 作为物联网设备通讯的 可行性</title><link>https://dev.leiyanhui.com/mq/redis-mq/</link><pubDate>Fri, 18 Aug 2023 05:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/mq/redis-mq/</guid><description>&lt;p>本文只针对笔者自己的项目情况，不使用redis，而且使用更专业的消息队列服务器的存在有更充分的理由。&lt;/p>
&lt;h2 id="选择的原因">选择的原因
&lt;/h2>&lt;h3 id="性能天花板">性能天花板
&lt;/h3>&lt;p>从树莓派到志强，redis是所有mq服务器的天花板。&lt;br>
自己手撸的简单hash map查询 业务添加一些 都比不过redis，而且在大量数据的情况下，查询和操作速度更是直线下滑。想做到极致的性能优化需要大量繁重工作，不如直接拿来就用&lt;/p>
&lt;h3 id="简单灵活的高可用性集群">简单灵活的高可用性集群
&lt;/h3>&lt;p>哨兵模式和主从模式也不是不能用。&lt;br>
cluster 虽然必须要最少3主3从才能实现高可用性，但是很容易满足。3台云服务器即可 互为主从 并集群，可以在线扩容，在线收缩，简单灵活可靠。&lt;/p>
&lt;h3 id="低流量消耗的轻量化协议">低流量消耗的轻量化协议
&lt;/h3>&lt;p>redis 是基于tcp的简单文本协议，没有协议头，没有校验码，没有封装，每一个字节都是有效必须的数据，大大节省服务器带宽资源&lt;/p>
&lt;h3 id="活跃的老项目良好的向上兼容">活跃的老项目良好的向上兼容
&lt;/h3>&lt;p>redis至今依旧维持较为频繁的功能和性能更新&lt;/p>
&lt;h3 id="免中间件">免中间件
&lt;/h3>&lt;p>1、工作量小 服务器上不需要再运行太多程序，开发工作小很多（在大并发环境一个中间件 真的很需要时间调试优化）&lt;br>
2、节省服务器开支&lt;/p>
&lt;h3 id="性能下限高">性能下限高
&lt;/h3>&lt;p>团队里面的实习生，只要不让他碰redis扩展module的代码，再烂的代码也不会影响整体运行&lt;/p>
&lt;h2 id="不用更专业的mq的原因">不用更专业的mq的原因
&lt;/h2>&lt;p>现有的主流mq服务， 性能都低于redis,在集群扩展上也都远远不如redis灵活和高效。&lt;br>
部分mq自带的消息持久化储存 性能更是一般，外部储存方式 多了一层转换。很多mq可能已经很轻量，但是相对 redis 还是差了一些。 Kafka RocketMQ Apollo ZeroMQ ActiveMQ RabbitMQ emqx Mosquitto 情况差不多，不展开细说&lt;br>
集群方面，要么死板复杂不能热扩容收缩，要么集群后单机性能会掉&lt;/p>
&lt;h2 id="不使用-lotdb的原因">不使用 loTDB的原因
&lt;/h2>&lt;p>没有看到loTDB的压测数据，自己简单测试过后性能不理想&lt;/p>
&lt;h2 id="不自己开发私有协议的原因">不自己开发私有协议的原因
&lt;/h2>&lt;p>私有协议 可以灵活使用 tcp/udp 包括上层websocket。但是集群部署 还有大量map的操作 开发工作量比较大。&lt;br>
另外 golang在 大并发情况下 资源占用要比C高很多，引入epoll可以降低一些，但是开发工作量还是不低。&lt;/p>
&lt;h2 id="物联网设备通讯要求">物联网设备通讯要求
&lt;/h2>&lt;h3 id="基本">基本
&lt;/h3>&lt;p>包括多数物联网设备的的要求 我手上的项目情况有以下要求：&lt;/p>
&lt;ul>
&lt;li>低成本、可快速扩展、高可用性集群&lt;/li>
&lt;li>部分功能要求消息必须送达：例如 报警信息&lt;/li>
&lt;li>部分消息 要求 只可以送达1次，不可重复送达：例如 提醒消息&lt;/li>
&lt;li>部分数据允许少量丢失: 例如设备实时采集的数据&lt;/li>
&lt;li>设备24小时开机，不停上报数据。对服务器处理和记录能力有一定要求（最主要是服务器成本要低）&lt;/li>
&lt;li>设备离线通知和报警&lt;/li>
&lt;li>设备和用户app可以直接进行通讯，当然 这里指的还是服务器转发消息&lt;/li>
&lt;li>qps的严格限制，防止服务器被拉垮&lt;/li>
&lt;li>部分功能需要 tls加密通讯&lt;/li>
&lt;li>消息需要选择性的持久化和转存&lt;/li>
&lt;/ul>
&lt;h3 id="tcp和udp">tcp和udp
&lt;/h3>&lt;p>国内环境下 部分地区部分时段udp 丢包严重。另外udp每次都需要带一定字数的token信息 虽然减少了握手环节，但是对于 少量频繁的数据通讯 就会明显增加服务器流量开支&lt;br>
ws协议，有更好，没有可以接受，毕竟物联网设备直接tcp udp是没问题的。&lt;/p>
&lt;h3 id="自定义协议和现有协议的选择">自定义协议和现有协议的选择
&lt;/h3>&lt;p>自定义协议tcp/udp 自然是更好，但是之前的项目开发经验让我明白 还是要权衡利弊一下。&lt;/p>
&lt;h3 id="数据的序列化和反序列化">数据的序列化和反序列化
&lt;/h3>&lt;p>考虑到服务器资源的占用，json 肯定是最不可取的。msgpack反序列化性能还可以，但是比json并不能降低太多带宽。 所以开发阶段用json或者msgpack,后期还是要换成protobuf。&lt;/p>
&lt;h2 id="用redis实现上面的功能的逐一说明">用redis实现上面的功能的逐一说明
&lt;/h2>&lt;p>因为redis 本身不适合作为面向用户的消息队列服务，所以有一些问题需要额外处理。&lt;/p>
&lt;ul>
&lt;li>使用redis6.0 以后的tls 解决加密通讯&lt;/li>
&lt;li>务必使用redis7.0以后版本的 acl 精确控制到key和指令&lt;/li>
&lt;li>使用stream 处理 必到达的消息 和 之发送一次的消息&lt;/li>
&lt;li>使用sub 处理一次性不需要储存 可以容许丢失的消息&lt;/li>
&lt;li>redis开启数据持久化，但是后端需要定期把历史消息转储存到sql，防止redis内的历史消息占用内存多大&lt;/li>
&lt;li>集群 cluster 解决高可用性和灵活扩展性&lt;/li>
&lt;li>redis 集群客户端 在物联网设备 和 app端 socket 手撸。使用{key}标识符，把单一个物联网设备的数据固定到一个节点上即可，然后客户端自动从任意一个节点得到负责的节点地址。&lt;/li>
&lt;li>设备离线通知： 后端程序 连到redis 定时扫描 客户端连接信息，找出应在线但是未连接的客户端&lt;/li>
&lt;/ul>
&lt;h2 id="关于权限控制和防恶意用户">关于权限控制和防恶意用户
&lt;/h2>&lt;ul>
&lt;li>key访问权限和指令限制：使用redis7.0以后版本的 acl 限制 物联网客户端可用指令和可写key&lt;/li>
&lt;li>后端程序 通过扫描redis客户端信息，拉黑频繁多次连接的用户&lt;/li>
&lt;li>key 内容大小限制：简单的方案 依旧是后端程序定期扫描bigkey。我的方案，自己开发一个简单的redis 模块 来限制，比如 用 lyh.get 限制客户端请求太大的字符串 key lyh.set限制 写入太大的数据&lt;/li>
&lt;li>客户端qps限制：1是后端定时扫描 hot key 找到异常用户 拉黑 2、自定义模块 创建全局hash map记录用户操作频率 进行限制&lt;/li>
&lt;/ul>
&lt;h2 id="其他安全措施">其他安全措施
&lt;/h2>&lt;p>毕竟redis 不是设计为了面向非可信用户的mq服务器。 一些防患措施还是是要做一下。&lt;/p>
&lt;ul>
&lt;li>配置 maxmemory-clients 并经常监控&lt;/li>
&lt;li>tls和明文tcp 都使用，优先使用tls,在负载过大情况下，临时切换到明文，并紧急扩容集群。&lt;/li>
&lt;li>为了避免可能的安全隐患，客户端应该预留一组redis服务器地址：
这组服务器 应该由可以过滤转发tcp指令的程序反代redis 在redis出现未知漏洞的情况下使用&lt;/li>
&lt;li>关键性指令 重命名 或者禁用掉&lt;/li>
&lt;li>redis 使用普通无ssh权限的用户运行&lt;/li>
&lt;li>iptable，限制单ip连接频率和连接数&lt;/li>
&lt;li>如果内容很重要，记得定时备份 redis的持久化文件&lt;/li>
&lt;li>核心数据如果使用redis储存，需要和客户端可以访问的redis 做隔离。&lt;/li>
&lt;/ul>
&lt;h2 id="优点">优点
&lt;/h2>&lt;p>1、高性能&lt;br>
2、高可用性&lt;br>
3、高扩展性&lt;br>
4、没有中间件，只有后台整理和维护件，后端工作量很少&lt;br>
5、低服务器成本，cpu、内存、带宽占用都不会太高&lt;/p>
&lt;h2 id="最后说一下缺点">最后说一下缺点
&lt;/h2>&lt;ul>
&lt;li>在嵌入式设备上 因为没有支持redis集群的客户端（甚至部分环境也没有可用的redis客户端），需要自己实现 ，不过因为我们允许这部分客户端能使用指令很少，所以并不复杂。知道redis 就是 命令+换行 来通讯的就够了&lt;/li>
&lt;li>需要redis自定义模块 进行高阶防护 不过真的不难，尤其是对熟悉C的嵌入式开发人员，当然其他语言也可以&lt;/li>
&lt;li>云厂商的redis通常不可以导入自定义模块&lt;/li>
&lt;li>redis目前不支持websocket 官方说后续有可能会支持，在确实需要的情况下可以起一个后端程序转发ws到redis&lt;br>
golang实现的：https://dev.leiyanhui.com/golang/ws-redis/&lt;br>
官方进展关注: &lt;a class="link" href="https://github.com/orgs/redis/projects/4/views/1?filterQuery=http&amp;amp;pane=issue&amp;amp;itemId=24785018" target="_blank" rel="noopener"
>https://github.com/orgs/redis/projects/4/views/1?filterQuery=http&amp;pane=issue&amp;itemId=24785018&lt;/a>&lt;/li>
&lt;li>redis目前不支持auth验证次数限制 8年了还没添加的功能 ，8年后的今天我们依旧需要自己在防火墙限制过滤auth指令&lt;br>
官方进展关注：https://github.com/redis/redis/pull/1241&lt;/li>
&lt;li>redis目前不能避免单一用户多次连接，需要自己后端扫描，官方没有支持计划,暂时可以用iptable略微临时限制 和后台扫描。我已经自己修改完成redis的自动离线重复登陆的用户 目前运行良好。&lt;/li>
&lt;li>redis目前不能尽快自动踢出 没有进行 auth 的空连接 ，暂时只能自己在iptable限制，不过根据我的使用 多数mq服务器 都不支持。&lt;/li>
&lt;li>redis acl的持久化在rdb/aof文件中，目前是可以手动保持到acl文本文件的，不过这里有一个pull 是 等待批准 状态 &lt;a class="link" href="https://github.com/redis/redis/pull/10369" target="_blank" rel="noopener"
>https://github.com/redis/redis/pull/10369&lt;/a>&lt;/li>
&lt;li>redis auth 没有防止穷举的措施 目前暂时没有解决办法，客户端可以在一秒内发起几万次auth请求，拖垮redis，只能等待官方更新 &lt;a class="link" href="https://github.com/redis/redis/pull/11554" target="_blank" rel="noopener"
>https://github.com/redis/redis/pull/11554&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="权衡后">权衡后
&lt;/h2>&lt;p>因为现有app和小程序端，依赖http/ws协议，不能直接连接redis 所以app端是无法直接引入，通过服务器端口搭建ws转发到redis又再次引入了中间件 &lt;br>
auth 指令没有使用限制，以及 auth之前不能通过自定义模块的方式来替代auth,所以导致此问题 除了修改redis源码和等待官方更新之外，可以通过防火墙适当防止一下，然后暂时无解（云厂商的公网redis一般直接限制了最大连接数）&lt;/p></description></item><item><title>redis 整个集群导出到json的方法</title><link>https://dev.leiyanhui.com/web/redis-dump/</link><pubDate>Wed, 16 Aug 2023 08:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/web/redis-dump/</guid><description>&lt;p>有时候 我们的集群可能只是为了高可用，数据并不是那么大，那么可以不用aof rdp 直接导出虽然慢一些但是json可能更直观&lt;/p>
&lt;p>redis-dump 不好用，所以为 自己写了一个 ： &lt;a class="link" href="https://dev.leiyanhui.com/mq/redis-json/" target="_blank" rel="noopener"
>https://dev.leiyanhui.com/mq/redis-json/&lt;/a>&lt;/p>
&lt;h1 id="安装">安装
&lt;/h1>&lt;p>基于debian12&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt install ruby ruby-dev gcc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo gem install redis-dump
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="确定节点分别情况">确定节点分别情况
&lt;/h1>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">CLUSTER NODES
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="暂停你redis的写入业务">暂停你redis的写入业务
&lt;/h1>&lt;p>或者你容许部分丢失的话，也无所谓&lt;/p>
&lt;h1 id="分别导出每一个节点的数据">分别导出每一个节点的数据
&lt;/h1>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">redis-dump -u:ut97WiD9SvUQtJ@127.0.0.1:6001 &amp;gt; /tmp/6001.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">redis-dump -u:ut97WiD9SvUQtJ@127.0.0.1:6001 -d 0 &amp;gt; 6001.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">redis-dump -u:ut97WiD9SvUQtJ@127.0.0.1:6002 -d 0 &amp;gt; 6002.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">redis-dump -u:ut97WiD9SvUQtJ@127.0.0.1:6003 -d 0 &amp;gt; 6003.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果运行的时候出错，可能需要安装rvm和新版ruby。或者直接用docker版的&lt;/p>
&lt;p>所以 。。。可能直接 scp 回来更方便&lt;/p></description></item><item><title>redis走websocket的方法</title><link>https://dev.leiyanhui.com/golang/ws-redis/</link><pubDate>Tue, 15 Aug 2023 08:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/golang/ws-redis/</guid><description>&lt;p>redis目前最新版本7.2 依旧不支持websocket.不过看核心团队已经准备开始支持。&lt;/p>
&lt;p>websocket 更容易部署到servless等场景，也更加容易通过cdn 防火墙之类的管理。&lt;/p>
&lt;p>用golang可以简单的反向代理过去。&lt;/p>
&lt;p>因为逻辑简单，所以性能还是很强的。只是增加了多于的网络的开支。在目前情况下 过渡使用是没有问题的。&lt;/p>
&lt;p>另外有一个国人写的 用go实现的redis： &lt;a class="link" href="https://github.com/HDT3213/godis" target="_blank" rel="noopener"
>https://github.com/HDT3213/godis&lt;/a> 可以简单的修改为ws&lt;/p>
&lt;p>不过目前还不支持 steam 。&lt;/p>
&lt;p>当然目前没有可用的 客户端，需要自己手撸。但是命令直接转发效果是一样的。&lt;/p>
&lt;p>下面是一个简单的实现，你也可以完成AUTH部分 方便使用acl。&lt;/p>
&lt;p>这样反代后 对 不支持 集群的客户端 也非常友好&lt;/p>
&lt;p>客户端测试&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;gt; wscat -c ws://localhost:8080/websocket
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Connected (press CTRL+C to quit)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; set wstest 123
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt; OK
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;context&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;strings&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;github.com/gorilla/websocket&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;github.com/redis/go-redis/v9&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">redisClient&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ClusterClient&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 初始化Redis集群客户端&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">redisClient&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewClusterClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ClusterOptions&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Addrs&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s">&amp;#34;localhost:6001&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;localhost:6002&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;localhost:6003&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;localhost:6004&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;localhost:6005&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;localhost:6006&amp;#34;&lt;/span>&lt;span class="p">},&lt;/span> &lt;span class="c1">// 替换为真实的Redis节点地址&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;ut97WiD9SvUQtJ&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 替换为你的Redis密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">HandleFunc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/websocket&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">handleWebSocket&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fatal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ListenAndServe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;:8080&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">handleWebSocket&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResponseWriter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 升级HTTP连接为WebSocket连接&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">upgrader&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">websocket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Upgrader&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">conn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">upgrader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Upgrade&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;WebSocket upgrade failed:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 读取WebSocket消息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">msg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadMessage&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;WebSocket read failed:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 转发请求到Redis集群&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">inputArgs&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fields&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">msg&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">args&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{},&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">inputArgs&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">inputArgs&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">args&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">v&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">redisClient&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Do&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Background&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">args&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Result&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Redis publish failed:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WriteMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">websocket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">TextMessage&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Error&lt;/span>&lt;span class="p">()))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;res&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Received message: %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">msg&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 发送响应给WebSocket客户端&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WriteMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">websocket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">TextMessage&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;WebSocket write failed:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>redis hash list set zset 的对比和使用</title><link>https://dev.leiyanhui.com/web/redis-hash-set-list/</link><pubDate>Fri, 17 Mar 2023 08:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/web/redis-hash-set-list/</guid><description>&lt;h2 id="速度">速度
&lt;/h2>&lt;h3 id="遍历速度">遍历速度
&lt;/h3>&lt;p>Set = list &amp;gt; hash&lt;/p>
&lt;h3 id="插入删除速度">插入删除速度
&lt;/h3>&lt;p>Hash = set &amp;gt; list&lt;/p>
&lt;h3 id="随机访问速度">随机访问速度
&lt;/h3>&lt;p>hash = list &amp;gt; set&lt;/p>
&lt;h2 id="重复">重复
&lt;/h2>&lt;p>list 有序可重复,存入顺序和取出顺序完全相同 &lt;br>
set 无序不可重复,存入的顺序和取出的顺序不一定一致 会自动去重 &lt;br>
zset 有序 &lt;br>
hash key不可重复，value可以重复&lt;/p></description></item><item><title>同一台机器搭建多个redis实例 并测试主从同步</title><link>https://dev.leiyanhui.com/web/redis-more/</link><pubDate>Thu, 23 Feb 2023 07:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/web/redis-more/</guid><description>&lt;p>场景：
核心数据 主从同步 持久化&lt;br>
非核心 大并发 可以接受丢失但是尽量不丢失的，主从同步 ，从机持久化&lt;br>
日志类数据 需要转存 但是可以接受丢失 不开主从 不持久化&lt;/p>
&lt;p>最简单的方法 还是创建多个实例来处理。下面记录过程。&lt;/p>
&lt;h5 id="redis">redis
&lt;/h5>&lt;h6 id="准备配置文件">准备配置文件
&lt;/h6>&lt;p>需要三个实例，分别 是 ①核心数据 需要同步容灾 需要持久化 需要oss转存 ②临时数据 处理一些 limt 验证码等 不持久 不同步 ③设备日志临时存储 限制大小可丢一部分&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">wget http://repo.huaweicloud.com/redis/redis-7.0.8.tar.gz &lt;span class="c1">#菊花家 官网https://github.com/redis/redis/archive/7.0.8.tar.gz&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar -zxvf redis-7.0.8.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp ./redis-7.0.8/redis.conf /root/redis/redis-template.conf &lt;span class="c1">#备份一份&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm -rf redis-7.0.8*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h6 id="修改配置">修改配置
&lt;/h6>&lt;p>持久化 ，只有main节点需要 并且是混合持久化 即：1秒aof一次 根据规则再压缩，默认配置文件 是关闭 rdb的但是开了 appendfsync everysec 1秒一次 以及 aof-use-rdb-preamble ，增长比例 &lt;code>auto-aof-rewrite-percentage&lt;/code> 为100 文件大小 auto-aof-rewrite-min-size 64mb ，no-appendfsync-on-rewrite 默认为 no 就是 主线程和和子线程冲突 的时候，等待 会偶发堵塞但是不会丢数据。cache的 也默认开持久化，暂时不关闭，no-appendfsync-on-rewrite 改为yes 就是冲突的时候用硬盘缓存解决。 默认持久化文件：dump.rdb appendonly.aof&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">redisName&lt;/span>&lt;span class="o">=&lt;/span>db
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm -rf /data/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">main&lt;/span>&lt;span class="si">}&lt;/span>* &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> cp /root/redis/redis-template.conf /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s@# requirepass foobared@requirepass cx6hYJcCpZybXT112233@g&amp;#34;&lt;/span> /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf &lt;span class="c1">#修改密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s@appendonly no@appendonly yes@g&amp;#34;&lt;/span> /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf &lt;span class="c1"># appendonly 打开混合持久化&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s@bind 127.0.0.1 -::1@#bind 127.0.0.1 -::1@g&amp;#34;&lt;/span> /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf &lt;span class="c1"># ip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#启动 新版docker的redis 需要手动指定配置文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker stop &lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> docker rm &lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -itd --name &lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span> --hostname &lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span> -p 6381:6379 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf:/redis.conf -v /root/redis/date-&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>:/data --restart&lt;span class="o">=&lt;/span>always &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> redis:7.0.8-alpine3.17 redis-server /redis.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker logs -f -t --since&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;2020-02-08&amp;#34;&lt;/span> --tail&lt;span class="o">=&lt;/span>&lt;span class="m">50&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#其他&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s@no-appendfsync-on-rewrite no@no-appendfsync-on-rewrite yes@g&amp;#34;&lt;/span> /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf &lt;span class="c1">#避开堵塞但是可能会丢数据 &amp;lt;不建议&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>ram&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">redisName&lt;/span>&lt;span class="o">=&lt;/span>ram
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm -rf /data/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">main&lt;/span>&lt;span class="si">}&lt;/span>* &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> cp /root/redis/redis-template.conf /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s@# requirepass foobared@requirepass cx6hYJcCpZybXT112233@g&amp;#34;&lt;/span> /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf &lt;span class="c1">#修改密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s@bind 127.0.0.1 -::1@#bind 127.0.0.1 -::1@g&amp;#34;&lt;/span> /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf &lt;span class="c1"># ip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s1">&amp;#39;s@# save &amp;#34;&amp;#34;@save &amp;#34;&amp;#34;@g&amp;#39;&lt;/span> /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf &lt;span class="c1"># 取消持久化&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker stop &lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> docker rm &lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -itd --name &lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span> --hostname &lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span> -p 6382:6379 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf:/redis.conf --restart&lt;span class="o">=&lt;/span>always &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> redis:7.0.8-alpine3.17 redis-server /redis.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>devlog&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">redisName&lt;/span>&lt;span class="o">=&lt;/span>devlog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm -rf /data/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>* &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> cp /root/redis/redis-template.conf /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s@# requirepass foobared@requirepass cx6hYJcCpZybXT112233@g&amp;#34;&lt;/span> /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf &lt;span class="c1">#修改密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s@bind 127.0.0.1 -::1@#bind 127.0.0.1 -::1@g&amp;#34;&lt;/span> /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf &lt;span class="c1"># ip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s1">&amp;#39;s@# save &amp;#34;&amp;#34;@save &amp;#34;&amp;#34;@g&amp;#39;&lt;/span> /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf &lt;span class="c1"># 取消持久化&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 执行 ram的命令创建docker之前 再 限制一下大小&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s@# maxmemory &amp;lt;bytes&amp;gt;@maxmemory 268435456@g&amp;#34;&lt;/span> /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf &lt;span class="c1">#限制 256M&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s@# maxmemory &amp;lt;bytes&amp;gt;@maxmemory 536870912@g&amp;#34;&lt;/span> /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf &lt;span class="c1">#限制 512M&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s@# maxmemory &amp;lt;bytes&amp;gt;@maxmemory 1073741824@g&amp;#34;&lt;/span> /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf &lt;span class="c1">#限制 1G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker stop &lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> docker rm &lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -itd --name &lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span> --hostname &lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span> -p 6383:6379 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf:/redis.conf --restart&lt;span class="o">=&lt;/span>always &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> redis:7.0.8-alpine3.17 redis-server /redis.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">redis命令查看限制：info memory
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最后 创建一个 slave-test 作为从机测试&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">redisName&lt;/span>&lt;span class="o">=&lt;/span>slave-test
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm -rf /data/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>* &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> cp /root/redis/redis-template.conf /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s@# requirepass foobared@requirepass cx6hYJcCpZybXT112233@g&amp;#34;&lt;/span> /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf &lt;span class="c1">#修改密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s@bind 127.0.0.1 -::1@#bind 127.0.0.1 -::1@g&amp;#34;&lt;/span> /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf &lt;span class="c1"># ip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s1">&amp;#39;s@# save &amp;#34;&amp;#34;@save &amp;#34;&amp;#34;@g&amp;#39;&lt;/span> /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf &lt;span class="c1"># 取消持久化&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s1">&amp;#39;s@# masterauth &amp;lt;master-password&amp;gt;@masterauth cx6hYJcCpZybXT112233@g&amp;#39;&lt;/span> /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf &lt;span class="c1"># 设置主的密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker stop &lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> docker rm &lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -itd --name &lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span> --hostname &lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span> -p 6389:6379 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v /root/redis/&lt;span class="si">${&lt;/span>&lt;span class="nv">redisName&lt;/span>&lt;span class="si">}&lt;/span>.conf:/redis.conf --restart&lt;span class="o">=&lt;/span>always &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> redis:7.0.8-alpine3.17 redis-server /redis.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker restart slave-test
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 切换为 从机&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker &lt;span class="nb">exec&lt;/span> -it slave-test redis-cli -h localhost -p &lt;span class="m">6379&lt;/span> -a cx6hYJcCpZybXT112233 SLAVEOF 10.1.1.111 &lt;span class="m">6381&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 切换为 主机&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker &lt;span class="nb">exec&lt;/span> -it slave-test redis-cli -h localhost -p &lt;span class="m">6379&lt;/span> -a cx6hYJcCpZybXT112233 slaveof NO ONE
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;ul>
&lt;li>从机 从主机 同步的数据，如果主机是持久化，从级没有开启，但是丛机 会持久化这部分数据。&lt;/li>
&lt;li>从机可以从0数据 或者有一部分数据 或者 有其他数据 开始切换为从机模式&lt;/li>
&lt;li>从机 的数据 在开启 主从 后 会丢失，从机进入从模式后 无法写入数据&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;p>在简单的逻辑下，可以用shell脚本 免登录处理。&lt;/p>
&lt;p>强制关闭 程序后，再进行切换操作。&lt;/p></description></item><item><title>golang 操作redis大全</title><link>https://dev.leiyanhui.com/golang/redis/</link><pubDate>Thu, 24 Mar 2022 08:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/golang/redis/</guid><description>&lt;h2 id="相关">相关
&lt;/h2>&lt;p>redis 命令中文手册 &lt;a class="link" href="https://redis.com.cn/commands.html" target="_blank" rel="noopener"
>https://redis.com.cn/commands.html&lt;/a>&lt;br>
redis hash list set zset 的对比和使用 &lt;a class="link" href="https://dev.leiyanhui.com/web/redis-hash-set-list/" target="_blank" rel="noopener"
>https://dev.leiyanhui.com/web/redis-hash-set-list/&lt;/a> &lt;br>
golang 常用数据类型转换 &lt;a class="link" href="https://dev.leiyanhui.com/c/golang-string-byte-int-float-map-json/" target="_blank" rel="noopener"
>https://dev.leiyanhui.com/c/golang-string-byte-int-float-map-json/&lt;/a>&lt;br>
go redis客户端手册【没啥可看的】 &lt;a class="link" href="https://redis.uptrace.dev/zh/guide/" target="_blank" rel="noopener"
>https://redis.uptrace.dev/zh/guide/&lt;/a>&lt;br>
go中文手册 还不错 &lt;a class="link" href="http://c.biancheng.net/golang/intro/" target="_blank" rel="noopener"
>http://c.biancheng.net/golang/intro/&lt;/a>&lt;br>
英文手册 实例不全，但是细节都有 &lt;a class="link" href="https://pkg.go.dev/github.com/redis/go-redis/v9@v9.0.2" target="_blank" rel="noopener"
>https://pkg.go.dev/github.com/redis/go-redis/v9@v9.0.2&lt;/a>&lt;br>
本文主要内容转载自 &lt;a class="link" href="https://www.cnblogs.com/itbsl/p/14198111.htm" target="_blank" rel="noopener"
>https://www.cnblogs.com/itbsl/p/14198111.htm&lt;/a> 感谢 itbsl，另外增加了一部分内容&lt;/p>
&lt;h2 id="项目初始化">项目初始化
&lt;/h2>&lt;p>这里用redis/go-redis/v9&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">go mod init demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">go get github.com/redis/go-redis/v9
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="连接redis">连接redis
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">package&lt;/span> &lt;span class="n">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;context&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;github.com/go-redis/redis/v8&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span>&lt;span class="n">Background返回一个非空的Context&lt;/span>&lt;span class="err">。&lt;/span> &lt;span class="err">它永远不会被取消，没有值，也没有期限。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span>&lt;span class="err">它通常在&lt;/span>&lt;span class="n">main函数&lt;/span>&lt;span class="err">，初始化和测试时使用，并用作传入请求的顶级上下文。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">ctx&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Background&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">func&lt;/span> &lt;span class="n">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rdb&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">NewClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Options&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Addr&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;172.16.147.128:6379&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">DB&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pong&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">err&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">rdb&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Ping&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Result&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fmt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;连接redis出错，错误信息：%v&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fmt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;成功连接redis&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="基本指令">基本指令
&lt;/h2>&lt;h3 id="keys根据正则获取keys">Keys():根据正则获取keys
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">//*表示获取所有的key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">keys, err := rdb.Keys(ctx, &amp;#34;*&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="rename-renamenx--重命名key">Rename RenameNX 重命名key
&lt;/h3>&lt;p>Redis Renamenx 命令用于在新的 key 不存在时修改 key 的名称 。若 key 不存在返回错误。&lt;br>
Redis RENAME 命令用于修改 key 的名字为 newkey 。若key 不存在返回错误。如果newkey存在 将会被覆盖。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="n">Client&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">Rename&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">newkey&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">StatusCmd&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="n">Client&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">RenameNX&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">newkey&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">BoolCmd&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="type获取key对应值得类型">Type():获取key对应值得类型
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">vType, err := rdb.Type(ctx, &amp;#34;key&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="del-删除key">del 删除key
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">n, err := rdb.Del(ctx, &amp;#34;key1&amp;#34;, &amp;#34;key2&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Printf(&amp;#34;成功删除了 %v 个\n&amp;#34;, n)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="exists检测缓存项是否存在">Exists():检测缓存项是否存在
&lt;/h3>&lt;p>注：Exists()方法可以传入多个key,返回的第一个结果表示存在的key的数量,不过工作中我们一般不同时判断多个key是否存在，一般就判断一个key,所以判断是否大于0即可，如果判断判断传入的多个key是否都存在，则返回的结果的值要和传入的key的数量相等&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">n, err := rdb.Exists(ctx, &amp;#34;key1&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if n &amp;gt; 0 {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fmt.Println(&amp;#34;存在&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">} else {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fmt.Println(&amp;#34;不存在&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="expireexpireat设置有效期">Expire(),ExpireAt():设置有效期
&lt;/h3>&lt;p>需要在设置好了缓存项后，再设置有效期
Expire()方法是设置某个时间段(time.Duration)后过期，ExpireAt()方法是在某个时间点(time.Time)过期失效&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">res, err := rdb.Expire(ctx, &amp;#34;key&amp;#34;, time.Minute * 2).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if res {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fmt.Println(&amp;#34;设置成功&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">} else {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fmt.Println(&amp;#34;设置失败&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">res, err = rdb.ExpireAt(ctx, &amp;#34;key2&amp;#34;, time.Now()).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if res {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fmt.Println(&amp;#34;设置成功&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">} else {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fmt.Println(&amp;#34;设置失败&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="ttlpttl获取有效期">TTL(),PTTL():获取有效期
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">//设置一分钟的有效期
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rdb.Expire(ctx, &amp;#34;key&amp;#34;, time.Minute)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//获取剩余有效期,单位:秒(s)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ttl, err := rdb.TTL(ctx, &amp;#34;key&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Println(ttl)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//获取剩余有效期,单位:毫秒(ms)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pttl, err := rdb.PTTL(ctx, &amp;#34;key&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Println(pttl)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="dbsize查看当前数据库key的数量">DBSize():查看当前数据库key的数量
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">num, err := rdb.DBSize(ctx).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Printf(&amp;#34;数据库有 %v 个缓存项\n&amp;#34;, num)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="flushdb清空当前数据">FlushDB():清空当前数据
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">//清空当前数据库，因为连接的是索引为0的数据库，所以清空的就是0号数据库
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">res, err := rdb.FlushDB(ctx).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Println(res)//OK
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="flushall清空所有数据库">FlushAll():清空所有数据库
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">res, err := rdb.FlushAll(ctx).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Println(res)//OK
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="字符串string类型">字符串(string)类型
&lt;/h2>&lt;h3 id="set设置">Set():设置
&lt;/h3>&lt;p>仅仅支持字符串(包含数字)操作，不支持内置数据编码功能。如果需要存储Go的非字符串类型，需要提前手动序列化，获取时再反序列化。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">_, err := rdb.Ping(ctx).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//fmt.Println(pong, err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if err != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fmt.Printf(&amp;#34;连接redis出错，错误信息：%v&amp;#34;, err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//Set方法的最后一个参数表示过期时间，0表示永不过期
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">err = rdb.Set(ctx, &amp;#34;key1&amp;#34;, &amp;#34;value1&amp;#34;, 0).Err()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if err != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> panic(err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//key2将会在两分钟后过期失效
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">err = rdb.Set(ctx, &amp;#34;key2&amp;#34;, &amp;#34;value2&amp;#34;, time.Minute * 2).Err()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if err != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> panic(err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="setex设置并指定过期时间">SetEX():设置并指定过期时间
&lt;/h3>&lt;p>设置键的同时，设置过期时间&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">err := rdb.SetEX(ctx, &amp;#34;key&amp;#34;, &amp;#34;value&amp;#34;, time.Hour * 2).Err()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if err != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> panic(err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="setnx设置并指定过期时间">SetNX():设置并指定过期时间
&lt;/h3>&lt;p>注：SetNX()与SetEX()的区别是，SexNX()仅当key不存在的时候才设置，如果key已经存在则不做任何操作，而SetEX()方法不管该key是否已经存在缓存中直接覆盖&lt;/p>
&lt;p>介绍了SetNX()与SetEX()的区别后，还有一点需要注意的时候，如果我们想知道我们调用SetNX()是否设置成功了，可以接着调用Result()方法，返回的第一个值表示是否设置成功了，如果返回false,说明缓存Key已经存在，此次操作虽然没有错误，但是是没有起任何效果的。如果返回true，表示在此之前key是不存在缓存中的，操作是成功的&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">res, err := rdb.SetNX(ctx, &amp;#34;key&amp;#34;, &amp;#34;value&amp;#34;, time.Minute).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if res {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fmt.Println(&amp;#34;设置成功&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">} else {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fmt.Printf(&amp;#34;key已经存在缓存中，设置失败&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="get">get
&lt;/h3>&lt;p>如果要获取的key在缓存中并不存在，Get()方法将会返回redis.Nil&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">err := rdb.Set(ctx, &amp;#34;key&amp;#34;, &amp;#34;value&amp;#34;, 0).Err()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">val, err := rdb.Get(ctx, &amp;#34;key&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Printf(&amp;#34;key: %v\n&amp;#34;, val)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">val2, err := rdb.Get(ctx, &amp;#34;key-not-exist&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if err == redis.Nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fmt.Println(&amp;#34;key不存在&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">} else if err != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> panic(err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">} else {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fmt.Printf(&amp;#34;值为: %v\n&amp;#34;, val2)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="getrange字符串截取">GetRange():字符串截取
&lt;/h3>&lt;p>GetRange()方法可以用来截取字符串的部分内容,第二个参数是下标索引的开始位置，第三个参数是下标索引的结束位置(不是要截取的长度) &lt;br>
注：即使key不存在，调用GetRange()也不会报错，只是返回的截取结果是空&amp;quot;&amp;quot;,可以使用fmt.Printf(&amp;quot;%q\n&amp;quot;, val)来打印测试&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">err := rdb.Set(ctx, &amp;#34;key&amp;#34;, &amp;#34;Hello World!&amp;#34;, 0).Err()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if err != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> panic(err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">val, err := rdb.GetRange(ctx, &amp;#34;key&amp;#34;, 1, 4).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Printf(&amp;#34;key: %v\n&amp;#34;, val) //截取到的内容为: ello
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="incr增加1">Incr():增加+1
&lt;/h3>&lt;p>Incr()、IncrBy()都是操作数字，对数字进行增加的操作，incr是执行原子加1操作，incrBy是增加指定的数&lt;br>
所谓原子操作是指不会被线程调度机制打断的操作：这种操作一旦开始，就一直运行到结束，中间不会有任何context witch(切换到另一个线程).&lt;br>
(1)在单线程中，能够在单条指令中完成的操作都可以认为是“原子操作”，因为中断只能发生于指令之间。&lt;br>
(2)在多线程中，不能被其它进程(线程)打算的操作叫原子操作。&lt;br>
Redis单命令的原子性主要得益于Redis的单线程&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">val, err := rdb.Incr(ctx, &amp;#34;number&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Printf(&amp;#34;key当前的值为: %v\n&amp;#34;, val)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="incrby按指定步长增加">IncrBy():按指定步长增加
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">val, err := rdb.IncrBy(ctx, &amp;#34;number&amp;#34;, 12).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Printf(&amp;#34;key当前的值为: %v\n&amp;#34;, val)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="decr减少-1">Decr():减少-1
&lt;/h3>&lt;p>Decr()和DecrBy()方法是对数字进行减的操作，和Incr正好相反&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">val, err := rdb.Decr(ctx, &amp;#34;number&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Printf(&amp;#34;key当前的值为: %v\n&amp;#34;, val)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="decrby按指定步长减少">DecrBy():按指定步长减少
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">val, err := rdb.DecrBy(ctx, &amp;#34;number&amp;#34;, 12).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Printf(&amp;#34;key当前的值为: %v\n&amp;#34;, val)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="append追加">Append():追加
&lt;/h3>&lt;p>Append()表示往字符串后面追加元素，返回值是字符串的总长度&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">err := rdb.Set(ctx, &amp;#34;key&amp;#34;, &amp;#34;hello&amp;#34;, 0).Err()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if err != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> panic(err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">length, err := rdb.Append(ctx, &amp;#34;key&amp;#34;, &amp;#34; world!&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if err != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> panic(err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Printf(&amp;#34;当前缓存key的长度为: %v\n&amp;#34;, length) //12
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">val, err := rdb.Get(ctx, &amp;#34;key&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if err != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> panic(err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Printf(&amp;#34;当前缓存key的值为: %v\n&amp;#34;, val) //hello world!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="strlen获取长度">StrLen():获取长度
&lt;/h3>&lt;p>StrLen()方法可以获取字符串的长度&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">err := rdb.Set(ctx, &amp;#34;key&amp;#34;, &amp;#34;hello world!&amp;#34;, 0).Err()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if err != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> panic(err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">length, err := rdb.StrLen(ctx, &amp;#34;key&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if err != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> panic(err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Printf(&amp;#34;当前缓存key的长度为: %v\n&amp;#34;, length) //12
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="更多">更多
&lt;/h3>&lt;p>如上所述都是常用的字符串操作，此外，字符串(string)类型还有MGet()、Mset()、MSetNX()等同时操作多个key的方法，详见：https://pkg.go.dev/github.com/go-redis/redis/v9&lt;/p>
&lt;h2 id="列表list类型">列表(list)类型
&lt;/h2>&lt;h3 id="lpush将元素压入链表">LPush():将元素压入链表
&lt;/h3>&lt;p>可以使用LPush()方法将数据从左侧压入链表,也可以从右侧压如链表，对应的方法是RPush()&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">//返回值是当前列表元素的数量
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">n, err := rdb.LPush(ctx, &amp;#34;list&amp;#34;, 1, 2, 3).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if err != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> panic(err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Println(n)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="linsert在某个位置插入新元素">LInsert():在某个位置插入新元素
&lt;/h3>&lt;p>位置的判断，是根据相对的参考元素判断.&lt;br>
注：即使key列表里有多个值为100的元素，也只会在第一个值为100的元素前面插入123，并不会在所有值为100的前面插入123,客户端还提供了从前面插入和从后面插入的LInsertBefore()和LInsertAfer()方法&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">//在名为key的缓存项值为100的元素前面插入一个值，值为123
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">err := rdb.LInsert(ctx, &amp;#34;key&amp;#34;, &amp;#34;before&amp;#34;, &amp;#34;100&amp;#34;, 123).Err()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if err != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> panic(err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="lset设置某个元素的值">LSet():设置某个元素的值
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">//下标是从0开始的
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">err := rdb.LSet(ctx, &amp;#34;list&amp;#34;, 1, 100).Err()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="llen获取链表元素个数">LLen():获取链表元素个数
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">length, err := rdb.LLen(ctx, &amp;#34;list&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Printf(&amp;#34;当前链表的长度为: %v\n&amp;#34;, length)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="lindex获取链表下标对应的元素">LIndex():获取链表下标对应的元素
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">val, err := rdb.LIndex(ctx, &amp;#34;list&amp;#34;, 0).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Printf(&amp;#34;下标为0的值为: %v\n&amp;#34;, val)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="lrange获取某个选定范围的元素集">LRange():获取某个选定范围的元素集
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">vals, err := rdb.LRange(ctx, &amp;#34;list&amp;#34;, 0, 2).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Printf(&amp;#34;从下标0到下标2的值: %v\n&amp;#34;, vals)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="lpop从链表左侧弹出数据">LPop从链表左侧弹出数据
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">val, err := rdb.LPop(ctx, &amp;#34;list&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Printf(&amp;#34;移除的元素为: %v\n&amp;#34;, val)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="lrem根据值移除元素">LRem():根据值移除元素
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">n, err := rdb.LRem(ctx, &amp;#34;list&amp;#34;, 2, &amp;#34;100&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Printf(&amp;#34;移除了: %v 个\n&amp;#34;, n)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="集合set类型">集合(set)类型
&lt;/h2>&lt;p>Redis set对外提供的功能与list类似是一个列表的功能，特殊之处在于set是可以自动排重的，当你需要存储一个列表数据，又不希望出现重复数据，set是一个很好的选择，并且set提供了判断某个成员是否在一个set集合内的接口，这是也是list所不能提供了。&lt;br>
Redis的Set是string类型的无序集合。它底层其实是一个value为null的hash表，所以添加、删除、查找的复杂度都是O(1)。&lt;br>
集合数据的特征：&lt;br>
元素不能重复，保持唯一性&lt;br>
元素无序，不能使用索引(下标)操作&lt;br>
更多内容参考 redis hash list set zset 的对比和使用 &lt;a class="link" href="https://dev.leiyanhui.com/web/redis-hash-set-list/" target="_blank" rel="noopener"
>https://dev.leiyanhui.com/web/redis-hash-set-list/&lt;/a>&lt;/p>
&lt;h3 id="sadd添加元素">SAdd():添加元素
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">rdb.SAdd(ctx, &amp;#34;team&amp;#34;, &amp;#34;kobe&amp;#34;, &amp;#34;jordan&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rdb.SAdd(ctx, &amp;#34;team&amp;#34;, &amp;#34;curry&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rdb.SAdd(ctx, &amp;#34;team&amp;#34;, &amp;#34;kobe&amp;#34;) //由于kobe已经被添加到team集合中，所以重复添加时无效的
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="spop随机获取一个元素">SPop():随机获取一个元素
&lt;/h3>&lt;p>SPop()方法是从集合中随机取出元素的，如果想一次获取多个元素，可以使用SPopN()方法&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">val, err := rdb.SPop(ctx, &amp;#34;team&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Println(val)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="srem删除集合里指定的值">SRem():删除集合里指定的值
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">n, err := rdb.SRem(ctx, &amp;#34;team&amp;#34;, &amp;#34;kobe&amp;#34;, &amp;#34;v2&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Println(n)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="ssmembers获取所有成员">SSMembers():获取所有成员
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">vals, err := rdb.SMembers(ctx, &amp;#34;team&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Println(vals)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="sismember判断元素是否在集合中">SIsMember():判断元素是否在集合中
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">exists, err := rdb.SIsMember(ctx, &amp;#34;team&amp;#34;, &amp;#34;jordan&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if exists {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fmt.Println(&amp;#34;存在集合中&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">} else {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fmt.Println(&amp;#34;不存在集合中&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="scard获取集合元素个数">SCard():获取集合元素个数
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">total, err := rdb.SCard(ctx, &amp;#34;team&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Printf(&amp;#34;集合总共有 %v 个元素\n&amp;#34;, total)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="sunion并集sdiff差集sinter交集">SUnion():并集,SDiff():差集,SInter():交集
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">rdb.SAdd(ctx, &amp;#34;setA&amp;#34;, &amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;, &amp;#34;d&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rdb.SAdd(ctx, &amp;#34;setB&amp;#34;, &amp;#34;a&amp;#34;, &amp;#34;d&amp;#34;, &amp;#34;e&amp;#34;, &amp;#34;f&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//并集
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">union, err := rdb.SUnion(ctx, &amp;#34;setA&amp;#34;, &amp;#34;setB&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Println(union)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//差集
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">diff, err := rdb.SDiff(ctx, &amp;#34;setA&amp;#34;, &amp;#34;setB&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Println(diff)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//交集
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">inter, err := rdb.SInter(ctx, &amp;#34;setA&amp;#34;, &amp;#34;setB&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fmt.Println(inter)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="有序集合zset类型">有序集合(zset)类型
&lt;/h2>&lt;p>Redis 有序集合和集合一样也是string类型元素的集合,且不允许重复的成员。&lt;br>
不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。&lt;br>
有序集合的成员是唯一的,但分数(score)却可以重复。 &lt;br>
集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。 集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。&lt;/p>
&lt;h3 id="zadd添加元素">ZAdd():添加元素
&lt;/h3>&lt;p>添加6个元素1~6,分值都是0&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">rdb.ZAdd(ctx, &amp;#34;zSet&amp;#34;, &amp;amp;redis.Z{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Score: 0,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Member: 1,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">})
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rdb.ZAdd(ctx, &amp;#34;zSet&amp;#34;, &amp;amp;redis.Z{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Score: 0,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Member: 2,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">})
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rdb.ZAdd(ctx, &amp;#34;zSet&amp;#34;, &amp;amp;redis.Z{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Score: 0,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Member: 3,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">})
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rdb.ZAdd(ctx, &amp;#34;zSet&amp;#34;, &amp;amp;redis.Z{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Score: 0,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Member: 4,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">})
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rdb.ZAdd(ctx, &amp;#34;zSet&amp;#34;, &amp;amp;redis.Z{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Score: 0,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Member: 5,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">})
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rdb.ZAdd(ctx, &amp;#34;zSet&amp;#34;, &amp;amp;redis.Z{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Score: 0,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Member: 6,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="zincrby增加元素分值">ZIncrBy():增加元素分值
&lt;/h3>&lt;p>分值可以为负数，表示递减&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">rdb.ZIncrBy(ctx, &amp;#34;zSet&amp;#34;, float64(rand.Intn(100)), &amp;#34;1&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rdb.ZIncrBy(ctx, &amp;#34;zSet&amp;#34;, float64(rand.Intn(100)), &amp;#34;2&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rdb.ZIncrBy(ctx, &amp;#34;zSet&amp;#34;, float64(rand.Intn(100)), &amp;#34;3&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rdb.ZIncrBy(ctx, &amp;#34;zSet&amp;#34;, float64(rand.Intn(100)), &amp;#34;4&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rdb.ZIncrBy(ctx, &amp;#34;zSet&amp;#34;, float64(rand.Intn(100)), &amp;#34;5&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rdb.ZIncrBy(ctx, &amp;#34;zSet&amp;#34;, float64(rand.Intn(100)), &amp;#34;6&amp;#34;)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="zrangezrevrange获取根据score排序后的数据段">ZRange()、ZRevRange():获取根据score排序后的数据段
&lt;/h3>&lt;p>根据分值排序后的，升序和降序的列表获取&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">//获取排行榜
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//获取分值(点击率)前三的文章ID列表
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">res, err := rdb.ZRevRange(ctx, &amp;#34;zSet&amp;#34;, 0, 2).Result()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="zrangebyscorezrevrangebyscore获取score过滤后排序的数据段">ZRangeByScore()、ZRevRangeByScore():获取score过滤后排序的数据段
&lt;/h3>&lt;p>根据分值过滤之后的列表,需要提供分值区间&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">res, err := rdb.ZRangeByScore(ctx, &amp;#34;zSet&amp;#34;, &amp;amp;redis.ZRangeBy{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Min: &amp;#34;40&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Max: &amp;#34;85&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}).Result()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="zcard获取元素个数">ZCard():获取元素个数
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">count, err := rdb.ZCard(ctx, &amp;#34;zSet&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="zcount获取区间内元素个数">ZCount():获取区间内元素个数
&lt;/h3>&lt;p>获取分值在[40, 85]的元素的数量&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">n, err := rdb.ZCount(ctx, &amp;#34;zSet&amp;#34;, &amp;#34;40&amp;#34;, &amp;#34;85&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="zscore获取元素的score">ZScore():获取元素的score
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">score, err := rdb.ZScore(ctx, &amp;#34;zSet&amp;#34;, &amp;#34;5&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="zrankzrevrank获取某个元素在集合中的排名">ZRank()、ZRevRank():获取某个元素在集合中的排名
&lt;/h3>&lt;p>ZRank()方法是返回元素在集合中的升序排名情况，从0开始。ZRevRank()正好相反&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">res, err := rdb.ZRevRank(ctx, &amp;#34;zSet&amp;#34;, &amp;#34;2&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="zrem删除元素">ZRem():删除元素
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">res, err := rdb.ZRem(ctx, &amp;#34;zSet&amp;#34;, &amp;#34;2&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="zremrangebyrank根据排名来删除">ZRemRangeByRank():根据排名来删除
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">//按照升序排序删除第一个和第二个元素
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">res, err := rdb.ZRemRangeByRank(ctx, &amp;#34;zSet&amp;#34;, 0, 1).Result()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="zremrangebyscore根据分值区间来删除">ZRemRangeByScore():根据分值区间来删除
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">//删除score在[40, 70]之间的元素
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">res, err := rdb.ZRemRangeByScore(ctx, &amp;#34;zSet&amp;#34;, &amp;#34;40&amp;#34;, &amp;#34;70&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="哈希hash类型">哈希(hash)类型
&lt;/h2>&lt;p>Redis hash 是一个 string 类型的 field（字段） 和 value（值） 的映射表，hash 特别适合用于存储对象。&lt;/p>
&lt;p>Redis 中每个 hash 可以存储 232 - 1 键值对（40多亿）。&lt;/p>
&lt;p>当前服务器一般都是将用户登录信息保存到Redis中，这里存储用户登录信息就比较适合用hash表。hash表比string更合适，如果我们选择使用string类型来存储用户的信息的时候，我们每次存储的时候就得先序列化(json_encode()、serialize())成字符串才能存储redis,&lt;/p>
&lt;p>从redis拿到用户信息后又得反序列化(UnMarshal()、Marshal())成数组或对象，这样开销比较大。如果使用hash的话我们通过key(用户ID)+field(属性标签)就可以操作对应属性数据了，既不需要重复存储数据，也不会带来序列化和并发修改控制的问题。&lt;/p>
&lt;h3 id="hset设置">HSet():设置
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">rdb.HSet(ctx, &amp;#34;user&amp;#34;, &amp;#34;key1&amp;#34;, &amp;#34;value1&amp;#34;, &amp;#34;key2&amp;#34;, &amp;#34;value2&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rdb.HSet(ctx, &amp;#34;user&amp;#34;, []string{&amp;#34;key3&amp;#34;, &amp;#34;value3&amp;#34;, &amp;#34;key4&amp;#34;, &amp;#34;value4&amp;#34;})
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rdb.HSet(ctx, &amp;#34;user&amp;#34;, map[string]interface{}{&amp;#34;key5&amp;#34;: &amp;#34;value5&amp;#34;, &amp;#34;key6&amp;#34;: &amp;#34;value6&amp;#34;})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="hmset批量设置">HMset():批量设置
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">rdb.Del(ctx, &amp;#34;user&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rdb.HMSet(ctx, &amp;#34;user&amp;#34;, map[string]interface{}{&amp;#34;name&amp;#34;:&amp;#34;kevin&amp;#34;, &amp;#34;age&amp;#34;: 27, &amp;#34;address&amp;#34;:&amp;#34;北京&amp;#34;})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="hget获取某个元素">HGet():获取某个元素
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">address, err := rdb.HGet(ctx, &amp;#34;user&amp;#34;, &amp;#34;address&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="hgetall获取全部元素">HGetAll():获取全部元素
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">user, err := rdb.HGetAll(ctx, &amp;#34;user&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="hdel删除某个元素">HDel():删除某个元素
&lt;/h3>&lt;p>HDel():删除某个元素&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">res, err := rdb.HDel(ctx, &amp;#34;user&amp;#34;, &amp;#34;name&amp;#34;, &amp;#34;age&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="hexists判断元素是否存在">HExists():判断元素是否存在
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">res, err := rdb.HExists(ctx, &amp;#34;user&amp;#34;, &amp;#34;address&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="hlen获取长度">HLen():获取长度
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">res, err := rdb.HLen(ctx, &amp;#34;user&amp;#34;).Result()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">```本文转自：https://www.cnblogs.com/itbsl/p/14198111.html
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item></channel></rss>
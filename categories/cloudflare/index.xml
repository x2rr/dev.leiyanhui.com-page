<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloudflare on 小类随手记</title><link>https://dev.leiyanhui.com/categories/cloudflare/</link><description>Recent content in Cloudflare on 小类随手记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 15 Nov 2023 01:14:20 +0800</lastBuildDate><atom:link href="https://dev.leiyanhui.com/categories/cloudflare/index.xml" rel="self" type="application/rss+xml"/><item><title>关于跨云部署的一些思路和困扰</title><link>https://dev.leiyanhui.com/web/clouds-migrate/</link><pubDate>Wed, 15 Nov 2023 01:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/web/clouds-migrate/</guid><description>&lt;p>阿里云在这次（2023年11月12日）大规模故障时间中，可以说给所有人迎头一击。&lt;br>
得益处这些年遇到的太多灾难，我们在业务开展初期就考虑到了跨地区跨机房跨云跨域名跨dns跨主体,但是依旧有部分业务被影响。&lt;/p>
&lt;h2 id="各种跨的必要性和方案">各种跨的必要性和方案
&lt;/h2>&lt;h3 id="跨云厂商">跨云厂商
&lt;/h3>&lt;p>必要性这个不用说了，这次事情都知道了。&lt;br>
一般情况下，核心业务最好一律跨厂商多活部署。&lt;br>
尤其是是核心数据 在隐藏好ip的情况下（能上ipv6一定上ipv6）,公网加密主从同步自动切换是必须的。&lt;br>
对于redis数据库来说来Cluster是一开始就要准备的&lt;/p>
&lt;h3 id="跨地区和机房">跨地区和机房
&lt;/h3>&lt;p>在同一家云厂商，尽量跨地区/机房部署多活部署。&lt;/p>
&lt;h3 id="跨域名跨dns">跨域名跨dns
&lt;/h3>&lt;p>数年前的dnspod时间不知道还有人记得吗？&lt;br>
域名被暂停解析不知道有多少人遇到过，数年前更有人遇到域名过户/转移等奇葩事件。&lt;br>
所以 除非是网站的网址，其他地方一定有多个域名&lt;br>
另外域名的dns不要只使用一家的&lt;/p>
&lt;h3 id="跨主体">跨主体
&lt;/h3>&lt;p>因为国内目前的政策因素，即便是你合法合规的运营，能100%确定自己不会遇到备案吊销域名暂停解析。单一主体依旧存在风险。&lt;br>
因为备案制度，任何人都可以查到你公司或者个人名下的所有域名，进一步拿到你部分api地址，更是可以直接看到你域名dns地址（dns一锅端也是可以的）。&lt;/p>
&lt;h3 id="关于无状态服务">关于无状态服务
&lt;/h3>&lt;p>微服务在规划的时候，注意能无状态服务的就用无状态的。&lt;/p>
&lt;h3 id="和域名相关的">和域名相关的
&lt;/h3>&lt;h4 id="用谁的域名">用谁的域名
&lt;/h4>&lt;p>如果不会产生额外的费用，并且接口地址你可以随时更换的的情况下，尽量用云厂商送的域名（例如阿里云函数计算的http触发器域名）。&lt;br>
因为云厂商的域名dns防护程度都比较高，免费的在某些时候比你花钱的更好。&lt;br>
当然如果你没有办法随时切换接口的地址，那么还是用自己有控制权的域名。&lt;/p>
&lt;h4 id="泛域名">泛域名
&lt;/h4>&lt;p>对于可以捆绑域名的http类业务，泛域名解析虽然不能避免解析记录泄露，但是可以避免通过域名dns历史解析记录拿到接口绑定的hostname。而且这个操作并不麻烦。&lt;br>
例如你 一个 接口 为 &lt;a class="link" href="http://usercenter-aliyun.leiyanhui.com" target="_blank" rel="noopener"
>http://usercenter-aliyun.leiyanhui.com&lt;/a> ，原来cname或者A记录 usercenter-aliyun，之需要修改为 *.usercenter-aliyun 同时在业务上绑定的域名修改为 &lt;a class="link" href="http://run1.usercenter-aliyun.leiyanhui.com" target="_blank" rel="noopener"
>http://run1.usercenter-aliyun.leiyanhui.com&lt;/a>（不要绑定泛域名） 如果发生针对这个地址的一些攻击，去业务那边修改为 &lt;a class="link" href="http://run2.usercenter-aliyun.leiyanhui.com" target="_blank" rel="noopener"
>http://run2.usercenter-aliyun.leiyanhui.com&lt;/a> 即可临时规避一下&lt;/p>
&lt;h2 id="关于entrypoint">关于entrypoint
&lt;/h2>&lt;p>这里定义的项目的entrypoint 主要是面向客户端的（app/物联网设备/html内的api）。即客户端需要先连接entrypoint查询后端api接口，再连接api处理后续工作。&lt;/p>
&lt;p>entrypoint应该跨云跨域名跨主体部署 。 相关业务在运行中或如果和其他业务通信故障，去这些地址里面查询可用的节点。&lt;/p>
&lt;p>比较经典的例子，比如一般情况 app的后端api地址为 &lt;a class="link" href="http://api.app.com" target="_blank" rel="noopener"
>http://api.app.com&lt;/a> ，一般可能还会预留一个 &lt;a class="link" href="http://api2.app.com" target="_blank" rel="noopener"
>http://api2.app.com&lt;/a> 作为备用地址。&lt;/p>
&lt;p>修改后的方案为&lt;/p>
&lt;p>app应该 &lt;a class="link" href="http://entrypoint1.url.com" target="_blank" rel="noopener"
>http://entrypoint1.url.com&lt;/a> &lt;a class="link" href="http://entrypoint.url2.com" target="_blank" rel="noopener"
>http://entrypoint.url2.com&lt;/a> &lt;a class="link" href="http://entrypoint.url3.com" target="_blank" rel="noopener"
>http://entrypoint.url3.com&lt;/a> &lt;a class="link" href="http://entrypoint.urlNNN.com" target="_blank" rel="noopener"
>http://entrypoint.urlNNN.com&lt;/a> 等多个地址并发查询 a 通过上面的entrypoint返回的 api地址，再继续操作。&lt;/p>
&lt;p>entrypoint 虽然多地跨云跨域名甚至跨主体部署，但是因为只是一个简单的json静态文件服务器，甚至可以部署到cdn，以及servless 所以维护成本很低。&lt;/p>
&lt;p>另外 entrypoint的地址，最好其中有预留1-3个云厂商/大厂的域名，例如 阿里云的 函数计算 的url， 以及 各个云厂商的对象储存的文件访问地址，因为他们的域名都做好了dns防护，可用性要比我们的dns高很多。 为了节省开支放置servless和对象储存被刷，平时禁止访问即可，在需要的时候开启允许公网访问即可。&lt;br>
不过华为云函数计算就算了，他给的域名公网访问次数限制1000次/天&lt;/p>
&lt;h2 id="困扰">困扰
&lt;/h2>&lt;p>跨云部署最大的困扰 就是 成本，带宽占用 服务器闲置 管理成本。&lt;br>
尤其是大量数据 在 公网上加密同步。。。&lt;/p></description></item><item><title>利用cfwokr免费搭建自己的节点</title><link>https://dev.leiyanhui.com/cloudflare/vless/</link><pubDate>Thu, 09 Nov 2023 18:40:20 +0800</pubDate><guid>https://dev.leiyanhui.com/cloudflare/vless/</guid><description>&lt;h2 id="简介">简介
&lt;/h2>&lt;p>利用cfwork搭建 一个反向代理，相信很多人都会玩。同样我们可以在cfwork搭建一个vless节点。来实现自建一个稳定的准私有节点。&lt;br>
本文记录相关操作以及如何导入到现有的clash订阅和v2rayN中。&lt;/p>
&lt;h2 id="准备">准备
&lt;/h2>&lt;ul>
&lt;li>cloudflare账号&lt;/li>
&lt;li>在cloudflare中添加一个你自己的域名（非必需）&lt;/li>
&lt;/ul>
&lt;h2 id="创建">创建
&lt;/h2>&lt;h3 id="创建一个cfwork">创建一个cfwork
&lt;/h3>&lt;p>添加 一个，脚本用 &lt;a class="link" href="https://github.com/zizifn/edgetunnel/blob/main/src/worker-vless.js" target="_blank" rel="noopener"
>https://github.com/zizifn/edgetunnel/blob/main/src/worker-vless.js&lt;/a> 这位大佬的&lt;br>
也有一些别人复制的 &lt;a class="link" href="https://github.com/Misaka-blog/cf-wkrs-pages-vless/blob/main/_worker.js" target="_blank" rel="noopener"
>https://github.com/Misaka-blog/cf-wkrs-pages-vless/blob/main/_worker.js&lt;/a>&lt;br>
推荐使用Misaka的，他在原版基础上加了站点伪装和初始的proxyIP
需要修改两个地方 userID 和 proxyIP 。&lt;br>
userID可以理解为 为了隐藏我们的节点，也防止被人白嫖。 可以随便填写，也可以用在线工具生成 &lt;a class="link" href="https://www.uuidgenerator.net" target="_blank" rel="noopener"
>https://www.uuidgenerator.net&lt;/a>
proxyIP 这个是访问某一些本身部署在 cf cdn上的网站要用的，可以自己去筛选，也可以用别人已经筛选好的。 这里直接选别人的&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> cdn-all.xn--b6gac.eu.org
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cdn.xn--b6gac.eu.org
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cdn-b100.xn--b6gac.eu.org
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> edgetunnel.anycast.eu.org
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cdn.anycast.eu.org
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="获取节点地址">获取节点地址
&lt;/h3>&lt;p>打开 https://cf分给你的域名.workers.dev/xxxx-d424-4583-b36e-524ab1f0afa4 后面是你的userid&lt;/p>
&lt;h3 id="替换域名">替换域名
&lt;/h3>&lt;p>workers.dev 默认是被墙的状态，需要替换成你的自己的域名，在触发器的地方添加自定义域，然后输入一个你托管在cf的域名即可。&lt;br>
然后打开 https://你自己的域名v/xxxx-d424-4583-b36e-524ab1f0afa4&lt;br>
注意 域名会被墙识别到，所以你最好用一个看起来正常的域名 ，当然也可以伪装。&lt;/p>
&lt;h3 id="客户端优选ip">客户端优选ip
&lt;/h3>&lt;h4 id="在线方式">在线方式
&lt;/h4>&lt;blockquote>
&lt;p>这个方式凑合能用&lt;/p>&lt;/blockquote>
&lt;p>&lt;a class="link" href="https://vfarid.github.io/cf-ip-scanner/?max=30" target="_blank" rel="noopener"
>https://vfarid.github.io/cf-ip-scanner/?max=30&lt;/a>&lt;/p>
&lt;h4 id="本地测试方式">本地测试方式
&lt;/h4>&lt;blockquote>
&lt;p>略微复杂一些，本地运行工具逐个测试。&lt;/p>&lt;/blockquote>
&lt;p>网上很多相关教程不再赘述，推荐 &lt;a class="link" href="https://github.com/XIU2/CloudflareSpeedTest" target="_blank" rel="noopener"
>https://github.com/XIU2/CloudflareSpeedTest&lt;/a>&lt;/p>
&lt;h4 id="白嫖方式">白嫖方式
&lt;/h4>&lt;p>这个方式 ，就通过你用在线或者本地优选的方式 获取到的感觉速度尚可ip 去ip反查网站，看有没有别的大佬做好的域名。然后逐个去在线ping网站ping他域名。&lt;br>
&lt;a class="link" href="https://ipchaxun.com/" target="_blank" rel="noopener"
>https://ipchaxun.com/&lt;/a> 这里，下面选择一个低成本后缀的域名，或者域名里面在cf或者ip,或yx之类的意思的，大概率就是别人配置好的。&lt;br>
这里提供几个热门ip 140.238.12.33 140.238.12.33 47.245.37.41 &lt;br>
然后去 itdog chinaz之类的网站在线ping确认一下。&lt;br>
这里直接贴几个查到的域名
443.cf.bestl.de 80.cf.bestl.de cdn.chigua.tk
yx.piaosir.link cf.yumy.gay yx.pztvdiao.link yx.s2.gay
yx.skyvps.link ip.zijingshan.link cdn-ip.tgbird.top yxip.tgood.eu.org cf.gzgrd.com&lt;/p>
&lt;p>同样的道理，你也可以用这种方式来搞定msdos对cf的优选ip的重写。&lt;/p>
&lt;h4 id="最后的地址处理">最后的地址处理
&lt;/h4>&lt;p>无论那方式，你获取到的ip 最终都要替换到上面你的cfwork提示的vless地址的里面
vless://XXXXX-d424-4583-b36e-524ab1f0afa4@这里选择优选ip优选域名:443?encryption=none&amp;amp;security=tls&amp;amp;sni=XXXX&amp;amp;fp=randomized&amp;amp;type=ws&amp;amp;host=XXXX&amp;amp;path=%2F%3Fed%3D2048#XXXX&lt;/p>
&lt;h3 id="附加到现有clash订阅">附加到现有clash订阅
&lt;/h3>&lt;p>一般我们使用第三方转换的网站 添加上，然后再用转换网站提供的地址即可。 否则只能添加到本地的yaml文件里面&lt;/p></description></item><item><title>cloudflare zero trust 组网</title><link>https://dev.leiyanhui.com/cloudflare/zero-trust/</link><pubDate>Sat, 16 Sep 2023 00:01:20 +0800</pubDate><guid>https://dev.leiyanhui.com/cloudflare/zero-trust/</guid><description>&lt;h2 id="注册cf账号开通-zero-trust">注册cf账号，开通 zero trust
&lt;/h2>&lt;p>过程略过 记住的你的 &amp;lt;你的warp组织名&amp;gt; 也就是 https://&amp;lt;你的warp组织名&amp;gt; .cloudflareaccess.com 前面这部分。&lt;/p>
&lt;h2 id="配置可信任邮箱后缀">配置可信任邮箱后缀
&lt;/h2>&lt;p>在zero trust 面板 依次点击my team &amp;gt; devices 即可。&lt;br>
最好用自己的域名邮箱，你用公用邮箱地址的话，任何人都可以登陆进来。&lt;/p>
&lt;h2 id="允许代理模式">允许代理模式
&lt;/h2>&lt;p>默认可能不允许客户端切换代理模式 会提示 Error: Operation not authorized in this context.&lt;br>
在zero trust 面板 依次点击 Settings &amp;gt; WARP Client 找到 默认配置文件 Default ，然后点击 Configure 配置 ：&lt;br>
Lock WARP switch 关闭&lt;br>
Mode switch 打开 这个选项就是允许客户端切换模式了。
客户下 幸运&lt;/p>
&lt;h2 id="本地登陆">本地登陆
&lt;/h2>&lt;p>linux下无桌面&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">warp-cli delete #删除旧的
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">warp-cli teams-enroll &amp;lt;你的warp组织名&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>会提示让你登陆网页
从任何一个浏览器打开 https://&amp;lt;你的warp组织名&amp;gt; .cloudflareaccess.com/warp 登陆查看源码。按钮附近源码 找到一段&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">com.cloudflare.warp://&amp;lt;你的warp组织名&amp;gt; .cloudflareaccess.com/auth?token=&amp;lt;token&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>复制出来，然后配置token&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">warp-cli teams-enroll-token com.cloudflare.warp://&amp;lt;你的warp组织名&amp;gt; .cloudflareaccess.com/auth?token&lt;span class="o">=&lt;/span>&amp;lt;token&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>成功后没有任何提示。。&lt;/p>
&lt;p>然后切换到代理模式,并启动&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">warp-cli is-mode-switch-allowed # 查看是否允许切换
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">warp-cli set-mode proxy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">warp-cli connect
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>ip a 查看 应该不会多出来cfwarp的网卡&lt;/p>
&lt;h2 id="常见问题">常见问题
&lt;/h2>&lt;p>Error: Operation not authorized in this &lt;br>
cloudflare 网页控制台 要打开 允许客户端切换模式，参考前面的。
Error: Invalid setting for this account type.&lt;br>
要登陆到teams成功后才可以，token不能有错误&lt;br>
warp-cli teams-enroll-token 报错&lt;br>
应该是token失效，重新打开一个浏览器隐私窗口重新弄一次即可。&lt;/p>
&lt;p>第三方客户端 &lt;a class="link" href="https://github.com/ViRb3/wgcf" target="_blank" rel="noopener"
>https://github.com/ViRb3/wgcf&lt;/a> 可以直接生成clash配置文件&lt;/p></description></item><item><title>cloudflare zero trust/warp 代理模式配合 openclash分流 以及在容器中使用warp</title><link>https://dev.leiyanhui.com/cloudflare/warp-openclash/</link><pubDate>Sat, 16 Sep 2023 00:01:20 +0800</pubDate><guid>https://dev.leiyanhui.com/cloudflare/warp-openclash/</guid><description>&lt;p>本文全程基于openwrt ，简单来说 clash 支持wireguard协议 warp也是基于wireguard的。
我们用第三方工具获取wireguard的公钥和私钥即可。&lt;/p>
&lt;p>值得注意的是 team模式 不支持代理模式。 用warp/warp+ 才可以&lt;/p>
&lt;h2 id="获取-warp的wireguard-模式key">获取 warp+的wireguard 模式key
&lt;/h2>&lt;p>这里使用第三方的一个cli客户端用来获取key&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">wget&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">github&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ViRb3&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">wgcf&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">releases&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">download&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">v2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mf">2.19&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">wgcf_2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mf">2.19&lt;/span>&lt;span class="n">_linux_amd64&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mv&lt;/span> &lt;span class="n">wgcf_2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mf">2.19&lt;/span>&lt;span class="n">_linux_amd64&lt;/span> &lt;span class="n">cf&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">chmod&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="n">cf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">./&lt;/span>&lt;span class="n">cf&lt;/span> &lt;span class="n">register&lt;/span> &lt;span class="c1">#注册&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">./&lt;/span>&lt;span class="n">cf&lt;/span> &lt;span class="n">generate&lt;/span> &lt;span class="c1">#生成配置文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">nano&lt;/span> &lt;span class="n">wgcf&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toml&lt;/span> &lt;span class="c1">#license_key 修改成你的warp+的收费/推广license_key&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#更新&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">./&lt;/span>&lt;span class="n">cf&lt;/span> &lt;span class="n">update&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">./&lt;/span>&lt;span class="n">cf&lt;/span> &lt;span class="n">generate&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">./&lt;/span>&lt;span class="n">cf&lt;/span> &lt;span class="n">status&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>查看wgcf-profile.conf 文件里面的 PublicKey 和 PrivateKey 以及Interface 第一个ipv4地址默认是172.16.0.2
后面就到了一个比较麻烦地方，需要手撸一个clash配置文件{后面提供了一键脚本}。基本格式如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">proxies:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - {name: cloudflare代理,type: wireguard,server: &amp;lt;你选的cf的ip&amp;gt;,port: 2408,ip: 172.16.0.2,public-key: &amp;lt;你的public-key&amp;gt;,private-key: &amp;lt;你的private-key&amp;gt;,mtu: 1280,udp: true}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>给出一个例子&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">proxies:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - {name: cf节点1,type: wireguard,server: 162.159.192.20,port: 2408,ip: 172.16.0.2,public-key: XXXXXXXXXXXX=,private-key: XXXXX=,mtu: 1280,udp: true}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="一键部署">一键部署
&lt;/h2>&lt;p>我这里写了好了一个脚本可以直接创建出clash配置文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mkdir -p /opt/clash-warp-yxip &amp;amp;&amp;amp; cd /opt/clash-warp-yxip #任意目录均可
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget -N https://ghproxy.com/https://raw.githubusercontent.com/joyanhui/file.leiyanhui.com/main/warp-yxip-clash/clash-warp-yxip.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bash clash-warp-yxip.sh v4 {public-key} {private-key}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="注意">注意
&lt;/h3>&lt;ul>
&lt;li>路由器要有bash环境,&lt;code>opkg install bash&lt;/code>&lt;/li>
&lt;li>clash 要使用 Clash.Meta 内核
也可以加到计划任务定时更新&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">0 7 * * * cd /opt/clash-warp-yxip &amp;amp;&amp;amp; bash clash-warp-yxip.sh v4 XXXXXXXX= XXXXXXXXX= &amp;amp;&amp;amp; rm -f /etc/openclash/config/clash-warp.yaml &amp;amp;&amp;amp; cp clash-warp.yaml /etc/openclash/config/clash-warp.yaml &amp;amp;&amp;amp; service openclash restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>更多说明： &lt;a class="link" href="https://github.com/joyanhui/file.leiyanhui.com/blob/main/warp-yxip-clash/README.md" target="_blank" rel="noopener"
>https://github.com/joyanhui/file.leiyanhui.com/blob/main/warp-yxip-clash/README.md&lt;/a>&lt;/p>
&lt;p>warp-cli 基本使用&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">warp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cli&lt;/span> &lt;span class="n">delete&lt;/span> &lt;span class="c1">#删除旧配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">warp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cli&lt;/span> &lt;span class="n">register&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 如果你有warp+的邀请流量key&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">warp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cli&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">license&lt;/span> &lt;span class="n">XXX&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">XXX&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">XXX&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">warp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cli&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">mode&lt;/span> &lt;span class="n">proxy&lt;/span> &lt;span class="c1">#切换到代理模式 默认端口40000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">warp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cli&lt;/span> &lt;span class="n">disconnect&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">warp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cli&lt;/span> &lt;span class="n">connect&lt;/span> &lt;span class="c1">#重连&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#测试ip 应该返回你的真实ip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">curl&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">myip4&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ipip&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">net&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#当前会话临时代理&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">ALL_PROXY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">socks5&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="mf">127.0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mf">0.1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">40000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 再次测试ip 应该会返回cf的ip,但是有ipip可能会识别成国内ip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">curl&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">myip4&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ipip&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">net&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>openwrt上配置cloudflare内网穿透</title><link>https://dev.leiyanhui.com/openwrt/cloudflare-net/</link><pubDate>Fri, 06 Jan 2023 15:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/openwrt/cloudflare-net/</guid><description>&lt;p>我这里选择用docker运行,需要你先在openwrt上配置好docker。&lt;/p>
&lt;p>1、注册配置好cf
登录后，在cf点击域名/网站， 点击左侧的 流量 -》 Cloudflare Tunnel 启动 Cloudflare Zero Trust 仪表盘&lt;/p>
&lt;p>在仪表盘 选择 access -》 Tunnel 按照提示配置 即可。&lt;/p>
&lt;p>路由上直接运行 仪表盘提示的docker命令&lt;/p></description></item></channel></rss>
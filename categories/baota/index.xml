<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Baota on 小类随手记</title><link>https://dev.leiyanhui.com/categories/baota/</link><description>Recent content in Baota on 小类随手记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 06 Jan 2023 08:14:20 +0800</lastBuildDate><atom:link href="https://dev.leiyanhui.com/categories/baota/index.xml" rel="self" type="application/rss+xml"/><item><title>nginx 非标端口 http强制跳转https</title><link>https://dev.leiyanhui.com/web/nginx-http-https-no443/</link><pubDate>Fri, 06 Jan 2023 08:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/web/nginx-http-https-no443/</guid><description>&lt;p>nginx标准端口下，我们常用rewrite把80端口强制调整到https，那么在非标准端口下，应该如何处理？&lt;/p>
&lt;p>其实也很简单&lt;/p>
&lt;p>修改站点配置文件 大概内容如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # http端口
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> listen 8880;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # https端口
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> listen 8443 ssl http2;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> server_name 你的域名;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> index index.php index.html index.htm default.php default.htm default.html;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> root /www/wwwroot/Sites/site-vod;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> #SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> #error_page 404/404.html;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> #HTTP_TO_HTTPS_START
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if ($server_port !~ 8443){
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> rewrite ^(/.*)$ https://$host:8443$1 permanent;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> #HTTP_TO_HTTPS_END
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>再见宝塔，关于宝塔的17个替代品</title><link>https://dev.leiyanhui.com/linux/other-bt/</link><pubDate>Wed, 07 Dec 2022 09:58:20 +0800</pubDate><guid>https://dev.leiyanhui.com/linux/other-bt/</guid><description>&lt;p>宝塔经历过几次严重漏洞，加上最近小bug不断，甚至有的bug反反复复，如同月经一样，每个月出现一次（宝塔周更）&lt;/p>
&lt;p>还有之前直播间的事故，强制绑定手机号等等&amp;hellip;.官网bug论坛的机器人一样的回复：我没有bug，你更新一下&lt;/p>
&lt;p>反正就是死不承认，然后一直到反馈的人多了，甚至过去数周才去修复，然后过几周可能又复现&lt;/p>
&lt;p>这个曾经优秀的国产软件，也可能是因为用户群太多，也可能是内部管理真的是混乱不堪。频繁爆出bug 还有 安全问题。&lt;/p>
&lt;p>去年开始，新机器上就避免再使用宝塔。&lt;/p>
&lt;p>这次宝塔的操作 也非常惊人，宝塔官方自己的demo都被黑掉，依旧不承认有漏洞，然后在论坛开始疯狂删反馈贴！&lt;/p>
&lt;p>搞笑的是，宝塔自己的demo 迟迟都没有处理掉，第二天早上直接挂403了。 真的是。。。&lt;/p>
&lt;p>首先说，还是推荐尽量手搓的方式来管理生产服务器，真的不建议再用宝塔这种鬼东西。&lt;/p>
&lt;p>如果实在是需要图形界面 或者一键环境 可以看一下相关替代产品&lt;/p>
&lt;h3 id="替代品">替代品
&lt;/h3>&lt;p>1、https://cockpit-project.org/&lt;/p>
&lt;p>Cockpit 是由 Red Hat 开发的使得管理服务器变得轻松简单的自由开源软件。它非常适合于进行简单的系统管理任务和新手系统管理员。&lt;/p>
&lt;p>2、https://github.com/midoks/mdserver-web
UI跟宝塔差不多，但个人试用了一下发现占用资源挺高的。&lt;/p>
&lt;p>3、https://hestiacp.com/
太简单，功能不足&lt;/p>
&lt;p>4、https://oneinstack.com/
类lnmp，无web UI&lt;/p>
&lt;p>5、https://cyberpanel.net/
太简单，功能不足&lt;/p>
&lt;p>6、https://lnmp.org/
无web UI&lt;/p>
&lt;p>7、https://github.com/DevHaoZi/Panel
耗子面板，仅支持redhat系列&lt;/p>
&lt;p>8、http://amh.sh/
amh面板&lt;/p>
&lt;p>9、https://www.appnode.com/&lt;/p>
&lt;p>10、https://vestacp.com/&lt;/p>
&lt;p>11、https://fastpanel.direct/&lt;/p>
&lt;p>12、https://www.urlos.com/&lt;/p>
&lt;p>13、https://www.hws.com/&lt;/p>
&lt;p>14、https://www.digitalocean.com/community/tools/nginx?global.app.lang=zhCN&lt;/p>
&lt;p>15、 Nginx Proxy Manager
&lt;a class="link" href="https://nginxproxymanager.com/" target="_blank" rel="noopener"
>https://nginxproxymanager.com/&lt;/a> 纯nginx反代 和 le证书管理工具&lt;/p>
&lt;p>16、 纯证书管理
&lt;a class="link" href="https://github.com/acmesh-official/acme.sh" target="_blank" rel="noopener"
>https://github.com/acmesh-official/acme.sh&lt;/a>&lt;/p>
&lt;p>17、超过25年的老古董Webmin/Virtualmin&lt;/p></description></item><item><title>Nginx Proxy Manager 或者其他nginx包括宝塔ssl嵌套coderserver都1006错误</title><link>https://dev.leiyanhui.com/codeserver/nginx-proxy-err-1006/</link><pubDate>Thu, 01 Dec 2022 00:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/codeserver/nginx-proxy-err-1006/</guid><description>&lt;p>搭建coderserver 用于golang的开发环境&lt;/p>
&lt;p>内网直接 http://10.0.0.100:8080 访问，外网套ssl&lt;/p>
&lt;p>套ssl是由路由器上运行的 &lt;code>Nginx Proxy Manager&lt;/code>（NPM）统一管理， 基于nginx&lt;/p>
&lt;p>nmp上创建站点配置ssl后，直接访问会提示 WebSocket close with status code 1006&lt;/p>
&lt;p>edit这个站点，点击 Advanced 输入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">location /
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_pass http://10.0.0.100:8080;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_http_version 1.1;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_redirect off;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header Host https://code.leiyanhui.com;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header X-Real-IP $remote_addr;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header REMOTE-HOST $remote_addr;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header Upgrade $http_upgrade;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header Connection &amp;#34;Upgrade&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_connect_timeout 60;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_send_timeout 90;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_read_timeout 90;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_buffer_size 4k;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_buffers 4 32k;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_busy_buffers_size 64k;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_temp_file_write_size 64k;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> add_header X-Cache $upstream_cache_status;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> #Set Nginx Cache
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> add_header Cache-Control no-cache;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>完毕&lt;/p>
&lt;p>宝塔 或者 其他nginx环境一样配置&lt;/p></description></item><item><title>docker运行 官方宝塔</title><link>https://dev.leiyanhui.com/docker/baota/</link><pubDate>Sun, 27 Nov 2022 08:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/docker/baota/</guid><description>&lt;p>宝塔 终于出官方docker了 基于&lt;code>CentOS 7.9.2009 x86_64&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://hub.docker.com/r/btpanel/baota" target="_blank" rel="noopener"
>https://hub.docker.com/r/btpanel/baota&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.bt.cn/bbs/thread-79499-1-1.html" target="_blank" rel="noopener"
>https://www.bt.cn/bbs/thread-79499-1-1.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>LNMP镜像大小大概 733.3MB 解压后大概3006.51MB 。。。没得办法，宝塔的依赖项真的是太多了。。。
在软路由上搞起来先&lt;/p>
&lt;h2 id="先整理端口">先整理端口
&lt;/h2>&lt;p>不打算映射数据出来，方便转移，并预留ssh 和常用端口&lt;/p>
&lt;pre>&lt;code>#宝塔面板 22 ssl http phpmyadmin
-p 51888:8888 -p 51022:22 -p 51443:443 -p 51080:80 -p 51188:888 \
# 路由器封80 443自定义web端口 以及22重复
-p 51081:51081 -p 51444:51444 -p 51000:22 \
# mysql
-p 51306:3306 \
# redis
-p 51379:6379 \
# pgsql
-p 51432:5432 \
# MongoDB
-p 51017:27017 \
# 备用端口
-p 51200-51299:51200-51299 \
&lt;/code>&lt;/pre>
&lt;p>你问我为啥开这么多端口。。我开心我乐意，反正外网又访问不到。。。&lt;/p>
&lt;h2 id="镜像和标签的选择">镜像和标签的选择
&lt;/h2>&lt;p>latest 标签拉取的是lib标签，安装了面板并且安装集成依赖包，安装每个软件都会快一点。&lt;br>
fresh 标签表示安装了面板但是没有安装集成依赖包，安装第一个软件会比较慢，因为需要装依赖包。&lt;br>
lib 标签表示安装了面板并且安装集成依赖包，安装每个软件都会快一点。&lt;br>
lnmp 标签表示安装了面板、集成包并且集成LNMP【Nginx1.22+MySQL5.7+PHP7.4】arm标签是MySQL5.6&lt;br>
lamp 标签表示安装了面板、集成包并且集成LAMP【Apache2.4+MySQL5.7+PHP7.4】arm标签是MySQL5.6&lt;br>
我这里选择&lt;code>lnmp&lt;/code> 经过测试发现，其实还集成了ftp&lt;/p>
&lt;h2 id="目录的挂载">目录的挂载
&lt;/h2>&lt;p>/www/server/data 数据库&lt;br>
/www/wwwroot 网站目录 或者说 静态文件目录&lt;br>
/www/server/panel/vhost 虚拟机主机配置文件&lt;br>
其他目录参考宝塔官网&lt;br>
我不打算映射出来，因为可以在宝塔内挂载oss之类的网盘自动备份。&lt;br>
而且不映射任何目录的话，docker的备份和迁移更为简单简单一些。&lt;/p>
&lt;h2 id="最终命令的整理">最终命令的整理
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">docker run -d --restart unless-stopped --name baota \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-p 51888:8888 -p 51022:22 -p 51443:443 -p 51080:80 -p 51188:888 \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-p 51081:51081 -p 51444:51444 -p 51000:22 \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-p 51306:3306 \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-p 51379:6379 \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-p 51432:5432 \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-p 51017:27017 \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-p 51200-51299:51200-51299 \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">btpanel/baota:lnmp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="默认账户名密码-和登录地址">默认账户名密码 和登录地址
&lt;/h2>&lt;p>现在，您可以在浏览器访问默认地址 http://您的ip地址:8888/btpanel 上的宝塔面板。
默认用户：btpanel
默认密码：btpaneldocker
默认SSH密码：用户名 root 密码 btpaneldocker&lt;/p>
&lt;p>默认用户：btpanel&lt;br>
默认密码：btpaneldocker&lt;br>
容器默认SSH密码：btpaneldocker&lt;/p>
&lt;h2 id="其他">其他
&lt;/h2>&lt;h3 id="容器内的服务处理">容器内的服务处理
&lt;/h3>&lt;p>是使用的&lt;code>/bt.sh&lt;/code> 这个文件，除了默认服务之外，其他服务需要自行添加默认内容&lt;/p>
&lt;pre>&lt;code>#!/bin/bash
PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin
export PATH
init_path=/etc/init.d
Root_Path=`cat /var/bt_setupPath.conf`
Setup_Path=$Root_Path/server/mysql
Data_Path=$Root_Path/server/data
soft_start(){
${init_path}/nginx start
${init_path}/php-fpm-74 start
${init_path}/pure-ftpd start
${init_path}/bt restart
pkill crond
/sbin/crond
/usr/sbin/sshd -D &amp;amp;
}
is_empty_Data(){
return `ls -A ${Data_Path}/|wc -w`
}
init_mysql(){
# initialize_mysql
if [ -f /init_mysql.sh ];then
sh /init_mysql.sh
rm -f /init_mysql.sh
fi
}
start_mysql(){
chown -R mysql:mysql ${Data_Path}
chgrp -R mysql ${Setup_Path}/.
${init_path}/mysqld start
rm -f /init_mysql.sh
}
soft_start &amp;gt; /dev/null
is_empty_Data &amp;gt; /dev/null
if [ $? == 0 ];then
init_mysql &amp;gt; /dev/null
else
start_mysql &amp;gt; /dev/null
fi
tail -f /dev/null
&lt;/code>&lt;/pre>
&lt;h3 id="计划任务的bug">计划任务的bug
&lt;/h3>&lt;p>宿主机运行&lt;/p>
&lt;pre>&lt;code> docker exec -it 容器名称baota bash
pkill crond &amp;amp;&amp;amp; /sbin/crond
&lt;/code>&lt;/pre>
&lt;p>然后重新添加计划任务&lt;/p>
&lt;h3 id="容器内的ssh的bug">容器内的ssh的bug
&lt;/h3>&lt;p>已经默认安装了openssh，但是可能还需要处理一下才可以连接，注意 复制的时候 要看一下宿主机的情况。如果不是host模式的话不存在这个问题&lt;/p>
&lt;pre>&lt;code>#获取容器ID
docker ps|awk 'NR &amp;gt; 1{print$1}'
#复制必要密钥文件到容器内
\cp -r /etc/ssh/ssh_host_* /home/
chmod 600 /home/ssh_host_*
docker cp /home/ssh_host_rsa_key 容器ID:/etc/ssh/
docker cp /home/ssh_host_ecdsa_key 容器ID:/etc/ssh/
docker cp /home/ssh_host_ed25519_key 容器ID:/etc/ssh/
#给容器设置一个root密码，qqwwee123替换成自己想要的密码
docker exec -it 容器ID /bin/bash -c &amp;quot;echo 'qqwwee123'|passwd --stdin root&amp;quot;
#让sshd运行起来
docker exec 容器ID /usr/sbin/sshd -D &amp;amp;
rm -rf /home/ssh_host_*
&lt;/code>&lt;/pre>
&lt;h2 id="问题和其他bug">问题和其他bug
&lt;/h2>&lt;ul>
&lt;li>docker版本更新滞后，也不算大事，宝塔新版问题更多哈哈&lt;/li>
&lt;li>web控制面板卡顿，web终端卡顿 甚至打不开，不缺点是宝塔新版的问题，还是软路由器性能问题&lt;/li>
&lt;li>宝塔内置系统防火墙不可用（docker的限制。不过确实没必要）&lt;/li>
&lt;li>ssl的证书夹在某些特定情况下 无法保存的问题。这个应该是宝塔自己的bug，月经bug 宝塔反反复复，经常间隔几个版本就出现一次 .重新登录一次面板，然后续签一次证书，或者重新部署一次。运气好的话 就好了，或者整个站点都删掉重新添加，运气不好的话，。。。。删了宝塔吧。。&lt;/li>
&lt;li>innodb_log_buffer_size 的bug，这个以及是宝塔本身的月经bug 反复出现，手动设置一下就好&lt;/li>
&lt;li>web面板 配置mysql的界面 mysql状态不显示，这个应该也是宝塔自己的bug，月经bug&lt;/li>
&lt;li>web面板 终端偶尔打不开 应该是xterm和bug，宝塔本身也或许有问题，退出重新登录就好，或者清理浏览器缓存 重新登录&lt;/li>
&lt;li>通知模块偶尔显示 名称：undefined xxx，无配置。。这个也是宝塔的月经bug&lt;/li>
&lt;li>不算是问题，但一定注意第一时间修改 面板用户名密码以及ssh的root密码&lt;/li>
&lt;/ul>
&lt;h2 id="题外话">题外话
&lt;/h2>&lt;p>其实已经很久没有新装过宝塔了，然后发现 现在的宝塔 是bug成堆。。。硬硬把用户当作实验台，略有能力的情况下能不用就不用了吧&lt;br>
以前会去宝塔论坛 认真截图 说复现步骤，反馈，然后论坛客服 除了一堆毫无意义的机械回复，也没啥，有时候反馈一个bug 竟然要回帖数次。。。
基本上 修补了上一个bug 然后出现新bug&lt;/p>
&lt;p>正经的生产环境，真的不怎么建议用宝塔。。。毕竟现在docker环境可选多部署一个新环境也不难&lt;/p></description></item></channel></rss>